-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity feedforward_stream_feedforward_stream_Pipeline_VITIS_LOOP_127_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer2_activations_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    layer2_activations_ce0 : OUT STD_LOGIC;
    layer2_activations_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_activations_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    layer2_activations_1_ce0 : OUT STD_LOGIC;
    layer2_activations_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_activations_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    layer2_activations_2_ce0 : OUT STD_LOGIC;
    layer2_activations_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_activations_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    layer2_activations_3_ce0 : OUT STD_LOGIC;
    layer2_activations_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_63_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_63_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_62_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_62_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_61_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_61_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_60_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_60_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_59_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_59_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_58_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_58_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_57_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_57_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_56_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_56_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_55_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_55_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_54_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_54_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_53_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_53_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_52_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_52_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_51_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_51_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_50_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_50_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_49_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_49_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_48_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_48_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_47_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_47_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_46_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_46_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_45_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_45_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_44_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_44_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_43_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_43_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_42_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_42_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_41_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_41_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_40_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_40_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_39_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_39_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_38_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_38_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_37_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_37_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_36_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_36_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_35_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_35_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_34_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_34_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_33_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_33_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_32_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_32_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_31_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_31_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_30_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_30_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_29_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_29_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_28_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_28_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_27_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_27_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_26_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_26_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_25_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_25_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_24_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_24_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_23_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_23_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_22_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_22_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_21_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_21_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_20_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_20_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_19_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_19_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_18_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_18_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_17_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_17_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_16_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_16_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_15_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_15_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_14_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_14_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_13_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_13_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_12_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_12_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_11_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_11_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_10_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_9_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_9_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_8_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_8_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_7_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_7_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_6_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_6_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_5_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_5_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_4_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_3_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_2_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_1_out_ap_vld : OUT STD_LOGIC;
    layer2_quant_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_quant_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of feedforward_stream_feedforward_stream_Pipeline_VITIS_LOOP_127_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv6_B : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_13 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv6_34 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv6_36 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv6_3A : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv6_3B : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln127_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal trunc_ln127_fu_1088_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln127_reg_2122 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln127_1_fu_1092_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln127_1_reg_2127 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln86_fu_1106_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_fu_308 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln127_fu_1082_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_4 : STD_LOGIC_VECTOR (6 downto 0);
    signal layer2_quant_fu_312 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal zext_ln130_fu_1148_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_quant_1_fu_316 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_2_fu_320 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_3_fu_324 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_4_fu_328 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_5_fu_332 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_6_fu_336 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_7_fu_340 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_8_fu_344 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_9_fu_348 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_10_fu_352 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_11_fu_356 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_12_fu_360 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_13_fu_364 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_14_fu_368 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_15_fu_372 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_16_fu_376 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_17_fu_380 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_18_fu_384 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_19_fu_388 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_20_fu_392 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_21_fu_396 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_22_fu_400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_23_fu_404 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_24_fu_408 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_25_fu_412 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_26_fu_416 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_27_fu_420 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_28_fu_424 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_29_fu_428 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_30_fu_432 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_31_fu_436 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_32_fu_440 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_33_fu_444 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_34_fu_448 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_35_fu_452 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_36_fu_456 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_37_fu_460 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_38_fu_464 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_39_fu_468 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_40_fu_472 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_41_fu_476 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_42_fu_480 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_43_fu_484 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_44_fu_488 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_45_fu_492 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_46_fu_496 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_47_fu_500 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_48_fu_504 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_49_fu_508 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_50_fu_512 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_51_fu_516 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_52_fu_520 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_53_fu_524 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_54_fu_528 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_55_fu_532 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_56_fu_536 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_57_fu_540 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_58_fu_544 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_59_fu_548 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_60_fu_552 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_61_fu_556 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_62_fu_560 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer2_quant_63_fu_564 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal layer2_activations_ce0_local : STD_LOGIC;
    signal layer2_activations_1_ce0_local : STD_LOGIC;
    signal layer2_activations_2_ce0_local : STD_LOGIC;
    signal layer2_activations_3_ce0_local : STD_LOGIC;
    signal lshr_ln4_fu_1096_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal x_assign_2_fu_1119_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_2_fu_1119_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_quant_64_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal x_assign_2_fu_1119_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_assign_2_fu_1119_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_assign_2_fu_1119_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_assign_2_fu_1119_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component feedforward_stream_sparsemux_9_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (1 downto 0);
        din3_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_stream_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    sparsemux_9_2_32_1_1_U1846 : component feedforward_stream_sparsemux_9_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 32,
        CASE1 => "01",
        din1_WIDTH => 32,
        CASE2 => "10",
        din2_WIDTH => 32,
        CASE3 => "11",
        din3_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => layer2_activations_q0,
        din1 => layer2_activations_1_q0,
        din2 => layer2_activations_2_q0,
        din3 => layer2_activations_3_q0,
        def => x_assign_2_fu_1119_p9,
        sel => trunc_ln127_reg_2122,
        dout => x_assign_2_fu_1119_p11);

    flow_control_loop_pipe_sequential_init_U : component feedforward_stream_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    i_fu_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln127_fu_1076_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_308 <= add_ln127_fu_1082_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_308 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_A) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_10_fu_352(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_B) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_11_fu_356(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_C) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_12_fu_360(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_D) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_13_fu_364(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_E) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_14_fu_368(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_F) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_15_fu_372(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_16_fu_376(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_17_fu_380(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_12) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_18_fu_384(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_13) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_19_fu_388(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_1_fu_316(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_20_fu_392(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_21_fu_396(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_22_fu_400(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_17) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_23_fu_404(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_18) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_24_fu_408(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_25_fu_412(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_1A) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_26_fu_416(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_1B) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_27_fu_420(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_1C) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_28_fu_424(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_1D) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_29_fu_428(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_2_fu_320(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_1E) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_30_fu_432(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_1F) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_31_fu_436(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_20) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_32_fu_440(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_33_fu_444(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_22) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_34_fu_448(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_35_fu_452(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_24) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_36_fu_456(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_25) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_37_fu_460(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_26) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_38_fu_464(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_27) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_39_fu_468(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_3_fu_324(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_28) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_40_fu_472(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_29) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_41_fu_476(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_2A) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_42_fu_480(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_2B) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_43_fu_484(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_2C) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_44_fu_488(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_2D) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_45_fu_492(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_2E) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_46_fu_496(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_2F) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_47_fu_500(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_30) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_48_fu_504(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_31) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_49_fu_508(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_4_fu_328(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_32) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_50_fu_512(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_33) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_51_fu_516(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_34) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_52_fu_520(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_35) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_53_fu_524(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_36) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_54_fu_528(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_37) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_55_fu_532(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_38) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_56_fu_536(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_39) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_57_fu_540(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_3A) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_58_fu_544(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_3B) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_59_fu_548(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_5_fu_332(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_3C) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_60_fu_552(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_3D) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_61_fu_556(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_3E) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_62_fu_560(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_3F) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_63_fu_564(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_6_fu_336(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_7_fu_340(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_8_fu_344(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_9_fu_348(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln127_1_reg_2127 = ap_const_lv6_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    layer2_quant_fu_312(0) <= zext_ln130_fu_1148_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln127_1_reg_2127 <= trunc_ln127_1_fu_1092_p1;
                trunc_ln127_reg_2122 <= trunc_ln127_fu_1088_p1;
            end if;
        end if;
    end process;
    layer2_quant_fu_312(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_1_fu_316(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_2_fu_320(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_3_fu_324(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_4_fu_328(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_5_fu_332(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_6_fu_336(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_7_fu_340(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_8_fu_344(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_9_fu_348(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_10_fu_352(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_11_fu_356(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_12_fu_360(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_13_fu_364(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_14_fu_368(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_15_fu_372(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_16_fu_376(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_17_fu_380(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_18_fu_384(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_19_fu_388(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_20_fu_392(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_21_fu_396(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_22_fu_400(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_23_fu_404(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_24_fu_408(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_25_fu_412(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_26_fu_416(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_27_fu_420(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_28_fu_424(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_29_fu_428(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_30_fu_432(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_31_fu_436(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_32_fu_440(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_33_fu_444(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_34_fu_448(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_35_fu_452(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_36_fu_456(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_37_fu_460(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_38_fu_464(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_39_fu_468(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_40_fu_472(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_41_fu_476(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_42_fu_480(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_43_fu_484(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_44_fu_488(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_45_fu_492(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_46_fu_496(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_47_fu_500(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_48_fu_504(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_49_fu_508(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_50_fu_512(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_51_fu_516(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_52_fu_520(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_53_fu_524(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_54_fu_528(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_55_fu_532(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_56_fu_536(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_57_fu_540(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_58_fu_544(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_59_fu_548(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_60_fu_552(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_61_fu_556(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_62_fu_560(31 downto 1) <= "0000000000000000000000000000000";
    layer2_quant_63_fu_564(31 downto 1) <= "0000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln127_fu_1082_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_4) + unsigned(ap_const_lv7_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln127_fu_1076_p2)
    begin
        if (((icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_308, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_4 <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_i_4 <= i_fu_308;
        end if; 
    end process;

    icmp_ln127_fu_1076_p2 <= "1" when (ap_sig_allocacmp_i_4 = ap_const_lv7_40) else "0";
    layer2_activations_1_address0 <= zext_ln86_fu_1106_p1(4 - 1 downto 0);
    layer2_activations_1_ce0 <= layer2_activations_1_ce0_local;

    layer2_activations_1_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_activations_1_ce0_local <= ap_const_logic_1;
        else 
            layer2_activations_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    layer2_activations_2_address0 <= zext_ln86_fu_1106_p1(4 - 1 downto 0);
    layer2_activations_2_ce0 <= layer2_activations_2_ce0_local;

    layer2_activations_2_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_activations_2_ce0_local <= ap_const_logic_1;
        else 
            layer2_activations_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    layer2_activations_3_address0 <= zext_ln86_fu_1106_p1(4 - 1 downto 0);
    layer2_activations_3_ce0 <= layer2_activations_3_ce0_local;

    layer2_activations_3_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_activations_3_ce0_local <= ap_const_logic_1;
        else 
            layer2_activations_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    layer2_activations_address0 <= zext_ln86_fu_1106_p1(4 - 1 downto 0);
    layer2_activations_ce0 <= layer2_activations_ce0_local;

    layer2_activations_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_activations_ce0_local <= ap_const_logic_1;
        else 
            layer2_activations_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_10_out <= layer2_quant_10_fu_352;

    layer2_quant_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_10_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_11_out <= layer2_quant_11_fu_356;

    layer2_quant_11_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_11_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_11_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_12_out <= layer2_quant_12_fu_360;

    layer2_quant_12_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_12_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_12_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_13_out <= layer2_quant_13_fu_364;

    layer2_quant_13_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_13_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_13_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_14_out <= layer2_quant_14_fu_368;

    layer2_quant_14_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_14_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_14_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_15_out <= layer2_quant_15_fu_372;

    layer2_quant_15_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_15_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_15_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_16_out <= layer2_quant_16_fu_376;

    layer2_quant_16_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_16_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_16_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_17_out <= layer2_quant_17_fu_380;

    layer2_quant_17_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_17_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_17_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_18_out <= layer2_quant_18_fu_384;

    layer2_quant_18_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_18_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_18_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_19_out <= layer2_quant_19_fu_388;

    layer2_quant_19_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_19_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_19_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_1_out <= layer2_quant_1_fu_316;

    layer2_quant_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_1_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_20_out <= layer2_quant_20_fu_392;

    layer2_quant_20_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_20_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_20_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_21_out <= layer2_quant_21_fu_396;

    layer2_quant_21_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_21_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_21_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_22_out <= layer2_quant_22_fu_400;

    layer2_quant_22_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_22_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_22_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_23_out <= layer2_quant_23_fu_404;

    layer2_quant_23_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_23_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_23_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_24_out <= layer2_quant_24_fu_408;

    layer2_quant_24_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_24_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_24_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_25_out <= layer2_quant_25_fu_412;

    layer2_quant_25_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_25_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_25_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_26_out <= layer2_quant_26_fu_416;

    layer2_quant_26_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_26_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_26_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_27_out <= layer2_quant_27_fu_420;

    layer2_quant_27_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_27_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_27_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_28_out <= layer2_quant_28_fu_424;

    layer2_quant_28_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_28_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_28_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_29_out <= layer2_quant_29_fu_428;

    layer2_quant_29_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_29_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_29_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_2_out <= layer2_quant_2_fu_320;

    layer2_quant_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_2_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_30_out <= layer2_quant_30_fu_432;

    layer2_quant_30_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_30_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_30_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_31_out <= layer2_quant_31_fu_436;

    layer2_quant_31_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_31_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_31_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_32_out <= layer2_quant_32_fu_440;

    layer2_quant_32_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_32_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_32_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_33_out <= layer2_quant_33_fu_444;

    layer2_quant_33_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_33_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_33_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_34_out <= layer2_quant_34_fu_448;

    layer2_quant_34_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_34_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_34_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_35_out <= layer2_quant_35_fu_452;

    layer2_quant_35_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_35_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_35_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_36_out <= layer2_quant_36_fu_456;

    layer2_quant_36_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_36_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_36_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_37_out <= layer2_quant_37_fu_460;

    layer2_quant_37_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_37_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_37_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_38_out <= layer2_quant_38_fu_464;

    layer2_quant_38_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_38_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_38_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_39_out <= layer2_quant_39_fu_468;

    layer2_quant_39_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_39_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_39_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_3_out <= layer2_quant_3_fu_324;

    layer2_quant_3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_3_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_40_out <= layer2_quant_40_fu_472;

    layer2_quant_40_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_40_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_40_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_41_out <= layer2_quant_41_fu_476;

    layer2_quant_41_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_41_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_41_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_42_out <= layer2_quant_42_fu_480;

    layer2_quant_42_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_42_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_42_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_43_out <= layer2_quant_43_fu_484;

    layer2_quant_43_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_43_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_43_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_44_out <= layer2_quant_44_fu_488;

    layer2_quant_44_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_44_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_44_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_45_out <= layer2_quant_45_fu_492;

    layer2_quant_45_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_45_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_45_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_46_out <= layer2_quant_46_fu_496;

    layer2_quant_46_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_46_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_46_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_47_out <= layer2_quant_47_fu_500;

    layer2_quant_47_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_47_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_47_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_48_out <= layer2_quant_48_fu_504;

    layer2_quant_48_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_48_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_48_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_49_out <= layer2_quant_49_fu_508;

    layer2_quant_49_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_49_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_49_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_4_out <= layer2_quant_4_fu_328;

    layer2_quant_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_4_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_50_out <= layer2_quant_50_fu_512;

    layer2_quant_50_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_50_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_50_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_51_out <= layer2_quant_51_fu_516;

    layer2_quant_51_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_51_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_51_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_52_out <= layer2_quant_52_fu_520;

    layer2_quant_52_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_52_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_52_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_53_out <= layer2_quant_53_fu_524;

    layer2_quant_53_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_53_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_53_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_54_out <= layer2_quant_54_fu_528;

    layer2_quant_54_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_54_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_54_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_55_out <= layer2_quant_55_fu_532;

    layer2_quant_55_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_55_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_55_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_56_out <= layer2_quant_56_fu_536;

    layer2_quant_56_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_56_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_56_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_57_out <= layer2_quant_57_fu_540;

    layer2_quant_57_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_57_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_57_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_58_out <= layer2_quant_58_fu_544;

    layer2_quant_58_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_58_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_58_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_59_out <= layer2_quant_59_fu_548;

    layer2_quant_59_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_59_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_59_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_5_out <= layer2_quant_5_fu_332;

    layer2_quant_5_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_5_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_60_out <= layer2_quant_60_fu_552;

    layer2_quant_60_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_60_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_60_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_61_out <= layer2_quant_61_fu_556;

    layer2_quant_61_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_61_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_61_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_62_out <= layer2_quant_62_fu_560;

    layer2_quant_62_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_62_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_62_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_63_out <= layer2_quant_63_fu_564;

    layer2_quant_63_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_63_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_63_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_64_fu_1142_p2 <= "1" when (signed(x_assign_2_fu_1119_p11) < signed(ap_const_lv32_1)) else "0";
    layer2_quant_6_out <= layer2_quant_6_fu_336;

    layer2_quant_6_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_6_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_7_out <= layer2_quant_7_fu_340;

    layer2_quant_7_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_7_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_8_out <= layer2_quant_8_fu_344;

    layer2_quant_8_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_8_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_9_out <= layer2_quant_9_fu_348;

    layer2_quant_9_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_9_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_quant_out <= layer2_quant_fu_312;

    layer2_quant_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln127_fu_1076_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln127_fu_1076_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_quant_out_ap_vld <= ap_const_logic_1;
        else 
            layer2_quant_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln4_fu_1096_p4 <= ap_sig_allocacmp_i_4(5 downto 2);
    trunc_ln127_1_fu_1092_p1 <= ap_sig_allocacmp_i_4(6 - 1 downto 0);
    trunc_ln127_fu_1088_p1 <= ap_sig_allocacmp_i_4(2 - 1 downto 0);
    x_assign_2_fu_1119_p9 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    zext_ln130_fu_1148_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(layer2_quant_64_fu_1142_p2),32));
    zext_ln86_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln4_fu_1096_p4),64));
end behav;
