-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity feedforward_burst is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of feedforward_burst is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "feedforward_burst_feedforward_burst,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=110520,HLS_SYN_TPT=none,HLS_SYN_MEM=19,HLS_SYN_DSP=0,HLS_SYN_FF=2844,HLS_SYN_LUT=5262,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (68 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (68 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (68 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (68 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (68 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (68 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (68 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (68 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (68 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (68 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (68 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (68 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv64_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010111";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv64_1A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011010";
    constant ap_const_lv64_1B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011011";
    constant ap_const_lv64_1C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011100";
    constant ap_const_lv64_1D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011101";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv64_20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv64_21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100001";
    constant ap_const_lv64_22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100010";
    constant ap_const_lv64_23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100011";
    constant ap_const_lv64_24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100100";
    constant ap_const_lv64_25 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100101";
    constant ap_const_lv64_26 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100110";
    constant ap_const_lv64_27 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100111";
    constant ap_const_lv64_28 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101000";
    constant ap_const_lv64_29 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101001";
    constant ap_const_lv64_2A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101010";
    constant ap_const_lv64_2B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101011";
    constant ap_const_lv64_2C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101100";
    constant ap_const_lv64_2D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101101";
    constant ap_const_lv64_2E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101110";
    constant ap_const_lv64_2F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101111";
    constant ap_const_lv64_30 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110000";
    constant ap_const_lv64_31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110001";
    constant ap_const_lv64_32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110010";
    constant ap_const_lv64_33 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110011";
    constant ap_const_lv64_34 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110100";
    constant ap_const_lv64_35 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110101";
    constant ap_const_lv64_36 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110110";
    constant ap_const_lv64_37 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110111";
    constant ap_const_lv64_38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111000";
    constant ap_const_lv64_39 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111001";
    constant ap_const_lv64_3A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111010";
    constant ap_const_lv64_3B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111011";
    constant ap_const_lv64_3C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111100";
    constant ap_const_lv64_3D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111101";
    constant ap_const_lv64_3E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111110";
    constant ap_const_lv64_3F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111111";
    constant ap_const_lv64_310 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001100010000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_r : STD_LOGIC_VECTOR (63 downto 0);
    signal output_r : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal trunc_ln_reg_991 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln4_reg_997 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal layer2_quant_load_reg_1018 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal layer2_quant_load_1_reg_1023 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_2_reg_1038 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal layer2_quant_load_3_reg_1043 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_4_reg_1058 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal layer2_quant_load_5_reg_1063 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_6_reg_1078 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal layer2_quant_load_7_reg_1083 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_8_reg_1098 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal layer2_quant_load_9_reg_1103 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_10_reg_1118 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal layer2_quant_load_11_reg_1123 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_12_reg_1138 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal layer2_quant_load_13_reg_1143 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_14_reg_1158 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal layer2_quant_load_15_reg_1163 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_16_reg_1178 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal layer2_quant_load_17_reg_1183 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_18_reg_1198 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal layer2_quant_load_19_reg_1203 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_20_reg_1218 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal layer2_quant_load_21_reg_1223 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_22_reg_1238 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal layer2_quant_load_23_reg_1243 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_24_reg_1258 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal layer2_quant_load_25_reg_1263 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_26_reg_1278 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal layer2_quant_load_27_reg_1283 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_28_reg_1298 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal layer2_quant_load_29_reg_1303 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_30_reg_1318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal layer2_quant_load_31_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_32_reg_1338 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal layer2_quant_load_33_reg_1343 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_34_reg_1358 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal layer2_quant_load_35_reg_1363 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_36_reg_1378 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal layer2_quant_load_37_reg_1383 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_38_reg_1398 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal layer2_quant_load_39_reg_1403 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_40_reg_1418 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal layer2_quant_load_41_reg_1423 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_42_reg_1438 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal layer2_quant_load_43_reg_1443 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_44_reg_1458 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal layer2_quant_load_45_reg_1463 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_46_reg_1478 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal layer2_quant_load_47_reg_1483 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_48_reg_1498 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal layer2_quant_load_49_reg_1503 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_50_reg_1518 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal layer2_quant_load_51_reg_1523 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_52_reg_1538 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal layer2_quant_load_53_reg_1543 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_54_reg_1558 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal layer2_quant_load_55_reg_1563 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_56_reg_1578 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal layer2_quant_load_57_reg_1583 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_58_reg_1598 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal layer2_quant_load_59_reg_1603 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_60_reg_1618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal layer2_quant_load_61_reg_1623 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_load_62_reg_1638 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal layer2_quant_load_63_reg_1643 : STD_LOGIC_VECTOR (0 downto 0);
    signal X0_input_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X0_input_ce0 : STD_LOGIC;
    signal X0_input_we0 : STD_LOGIC;
    signal X0_input_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X0_input_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X0_input_ce1 : STD_LOGIC;
    signal X0_input_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer1_activations_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal layer1_activations_ce0 : STD_LOGIC;
    signal layer1_activations_we0 : STD_LOGIC;
    signal layer1_activations_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer1_activations_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer1_activations_ce1 : STD_LOGIC;
    signal layer1_activations_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer1_activations_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal layer1_activations_1_ce0 : STD_LOGIC;
    signal layer1_activations_1_we0 : STD_LOGIC;
    signal layer1_activations_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer1_activations_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer1_activations_1_ce1 : STD_LOGIC;
    signal layer1_activations_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_activations_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal layer2_activations_ce0 : STD_LOGIC;
    signal layer2_activations_we0 : STD_LOGIC;
    signal layer2_activations_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_activations_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_activations_ce1 : STD_LOGIC;
    signal layer2_activations_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_activations_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal layer2_activations_1_ce0 : STD_LOGIC;
    signal layer2_activations_1_we0 : STD_LOGIC;
    signal layer2_activations_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_activations_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_activations_1_ce1 : STD_LOGIC;
    signal layer2_activations_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_activations_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal layer2_activations_2_ce0 : STD_LOGIC;
    signal layer2_activations_2_we0 : STD_LOGIC;
    signal layer2_activations_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_activations_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_activations_2_ce1 : STD_LOGIC;
    signal layer2_activations_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_activations_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal layer2_activations_3_ce0 : STD_LOGIC;
    signal layer2_activations_3_we0 : STD_LOGIC;
    signal layer2_activations_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_activations_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer2_activations_3_ce1 : STD_LOGIC;
    signal layer2_activations_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer3_activations_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal layer3_activations_ce0 : STD_LOGIC;
    signal layer3_activations_we0 : STD_LOGIC;
    signal layer3_activations_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer3_activations_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer3_activations_ce1 : STD_LOGIC;
    signal layer3_activations_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer1_quant_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal layer1_quant_ce0 : STD_LOGIC;
    signal layer1_quant_we0 : STD_LOGIC;
    signal layer1_quant_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal layer2_quant_ce0 : STD_LOGIC;
    signal layer2_quant_we0 : STD_LOGIC;
    signal layer2_quant_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer2_quant_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_ap_start : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_1_fu_802_ap_done : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_1_fu_802_ap_idle : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_1_fu_802_ap_ready : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWVALID : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_WVALID : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_WLAST : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARVALID : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_RREADY : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_BREADY : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_1_fu_802_X0_input_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_feedforward_burst_Pipeline_1_fu_802_X0_input_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_1_fu_802_X0_input_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_1_fu_802_X0_input_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_start : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_done : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_idle : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_ready : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_ce1 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_start : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_done : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_idle : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_ready : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_X0_input_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_X0_input_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_start : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_done : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_idle : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_ready : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_ce1 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_ce1 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_start : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_done : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_idle : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_ready : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_1_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_start : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_done : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_idle : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_ready : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer1_quant_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer1_quant_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_start : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_done : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_idle : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_ready : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_ce1 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_ce1 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_ce1 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_ce1 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_start : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_done : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_idle : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_ready : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_1_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_2_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_3_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_start : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_done : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_idle : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_ready : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_start : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_done : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_idle : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_ready : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_ce0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_we0 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_ce1 : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_11_fu_943_ap_start : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_11_fu_943_ap_done : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_11_fu_943_ap_idle : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_11_fu_943_ap_ready : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWVALID : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WVALID : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WLAST : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARVALID : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_RREADY : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_BREADY : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_11_fu_943_layer3_activations_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_feedforward_burst_Pipeline_11_fu_943_layer3_activations_ce0 : STD_LOGIC;
    signal gmem_0_AWVALID : STD_LOGIC;
    signal gmem_0_AWREADY : STD_LOGIC;
    signal gmem_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_0_WVALID : STD_LOGIC;
    signal gmem_0_WREADY : STD_LOGIC;
    signal gmem_0_ARVALID : STD_LOGIC;
    signal gmem_0_ARREADY : STD_LOGIC;
    signal gmem_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_0_RVALID : STD_LOGIC;
    signal gmem_0_RREADY : STD_LOGIC;
    signal gmem_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_0_BVALID : STD_LOGIC;
    signal gmem_0_BREADY : STD_LOGIC;
    signal grp_feedforward_burst_Pipeline_1_fu_802_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal grp_feedforward_burst_Pipeline_11_fu_943_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal sext_ln204_fu_971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln257_fu_981_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal layer2_quant_ce1_local : STD_LOGIC;
    signal layer2_quant_address1_local : STD_LOGIC_VECTOR (5 downto 0);
    signal layer2_quant_ce0_local : STD_LOGIC;
    signal layer2_quant_address0_local : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (68 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component feedforward_burst_feedforward_burst_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln204 : IN STD_LOGIC_VECTOR (61 downto 0);
        X0_input_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X0_input_ce0 : OUT STD_LOGIC;
        X0_input_we0 : OUT STD_LOGIC;
        X0_input_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_206_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X0_input_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X0_input_ce0 : OUT STD_LOGIC;
        X0_input_we0 : OUT STD_LOGIC;
        X0_input_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X0_input_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X0_input_ce1 : OUT STD_LOGIC;
        X0_input_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X0_input_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X0_input_ce0 : OUT STD_LOGIC;
        X0_input_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        layer1_activations_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        layer1_activations_ce0 : OUT STD_LOGIC;
        layer1_activations_we0 : OUT STD_LOGIC;
        layer1_activations_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        layer1_activations_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        layer1_activations_1_ce0 : OUT STD_LOGIC;
        layer1_activations_1_we0 : OUT STD_LOGIC;
        layer1_activations_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_216_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer1_activations_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        layer1_activations_1_ce0 : OUT STD_LOGIC;
        layer1_activations_1_we0 : OUT STD_LOGIC;
        layer1_activations_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        layer1_activations_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        layer1_activations_1_ce1 : OUT STD_LOGIC;
        layer1_activations_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        layer1_activations_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        layer1_activations_ce0 : OUT STD_LOGIC;
        layer1_activations_we0 : OUT STD_LOGIC;
        layer1_activations_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        layer1_activations_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        layer1_activations_ce1 : OUT STD_LOGIC;
        layer1_activations_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_223_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer1_activations_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        layer1_activations_ce0 : OUT STD_LOGIC;
        layer1_activations_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        layer1_activations_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        layer1_activations_1_ce0 : OUT STD_LOGIC;
        layer1_activations_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        layer1_quant_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        layer1_quant_ce0 : OUT STD_LOGIC;
        layer1_quant_we0 : OUT STD_LOGIC;
        layer1_quant_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer1_quant_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        layer1_quant_ce0 : OUT STD_LOGIC;
        layer1_quant_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_activations_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_ce0 : OUT STD_LOGIC;
        layer2_activations_we0 : OUT STD_LOGIC;
        layer2_activations_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        layer2_activations_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_1_ce0 : OUT STD_LOGIC;
        layer2_activations_1_we0 : OUT STD_LOGIC;
        layer2_activations_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        layer2_activations_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_2_ce0 : OUT STD_LOGIC;
        layer2_activations_2_we0 : OUT STD_LOGIC;
        layer2_activations_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        layer2_activations_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_3_ce0 : OUT STD_LOGIC;
        layer2_activations_3_we0 : OUT STD_LOGIC;
        layer2_activations_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_233_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer2_activations_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_3_ce0 : OUT STD_LOGIC;
        layer2_activations_3_we0 : OUT STD_LOGIC;
        layer2_activations_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        layer2_activations_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_3_ce1 : OUT STD_LOGIC;
        layer2_activations_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        layer2_activations_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_2_ce0 : OUT STD_LOGIC;
        layer2_activations_2_we0 : OUT STD_LOGIC;
        layer2_activations_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        layer2_activations_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_2_ce1 : OUT STD_LOGIC;
        layer2_activations_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        layer2_activations_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_1_ce0 : OUT STD_LOGIC;
        layer2_activations_1_we0 : OUT STD_LOGIC;
        layer2_activations_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        layer2_activations_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_1_ce1 : OUT STD_LOGIC;
        layer2_activations_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        layer2_activations_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_ce0 : OUT STD_LOGIC;
        layer2_activations_we0 : OUT STD_LOGIC;
        layer2_activations_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        layer2_activations_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_ce1 : OUT STD_LOGIC;
        layer2_activations_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_240_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer2_activations_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_ce0 : OUT STD_LOGIC;
        layer2_activations_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        layer2_activations_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_1_ce0 : OUT STD_LOGIC;
        layer2_activations_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        layer2_activations_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_2_ce0 : OUT STD_LOGIC;
        layer2_activations_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        layer2_activations_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer2_activations_3_ce0 : OUT STD_LOGIC;
        layer2_activations_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        layer2_quant_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        layer2_quant_ce0 : OUT STD_LOGIC;
        layer2_quant_we0 : OUT STD_LOGIC;
        layer2_quant_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_49_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer2_quant_load : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_3 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_4 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_5 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_6 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_7 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_8 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_9 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_10 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_11 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_12 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_13 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_14 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_15 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_16 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_17 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_18 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_19 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_20 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_21 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_22 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_23 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_24 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_25 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_26 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_27 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_28 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_29 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_30 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_31 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_32 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_33 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_34 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_35 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_36 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_37 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_38 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_39 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_40 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_41 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_42 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_43 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_44 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_45 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_46 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_47 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_48 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_49 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_50 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_51 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_52 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_53 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_54 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_55 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_56 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_57 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_58 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_59 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_60 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_61 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_62 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer2_quant_load_63 : IN STD_LOGIC_VECTOR (0 downto 0);
        layer3_activations_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer3_activations_ce0 : OUT STD_LOGIC;
        layer3_activations_we0 : OUT STD_LOGIC;
        layer3_activations_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_250_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer3_activations_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer3_activations_ce0 : OUT STD_LOGIC;
        layer3_activations_we0 : OUT STD_LOGIC;
        layer3_activations_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        layer3_activations_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer3_activations_ce1 : OUT STD_LOGIC;
        layer3_activations_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_burst_feedforward_burst_Pipeline_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln257 : IN STD_LOGIC_VECTOR (61 downto 0);
        layer3_activations_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        layer3_activations_ce0 : OUT STD_LOGIC;
        layer3_activations_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_burst_X0_input_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_burst_layer1_activations_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_burst_layer2_activations_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_burst_layer3_activations_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component feedforward_burst_layer1_quant_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component feedforward_burst_layer2_quant_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component feedforward_burst_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        input_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component feedforward_burst_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;



begin
    X0_input_U : component feedforward_burst_X0_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => X0_input_address0,
        ce0 => X0_input_ce0,
        we0 => X0_input_we0,
        d0 => X0_input_d0,
        q0 => X0_input_q0,
        address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_address1,
        ce1 => X0_input_ce1,
        q1 => X0_input_q1);

    layer1_activations_U : component feedforward_burst_layer1_activations_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => layer1_activations_address0,
        ce0 => layer1_activations_ce0,
        we0 => layer1_activations_we0,
        d0 => layer1_activations_d0,
        q0 => layer1_activations_q0,
        address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_address1,
        ce1 => layer1_activations_ce1,
        q1 => layer1_activations_q1);

    layer1_activations_1_U : component feedforward_burst_layer1_activations_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => layer1_activations_1_address0,
        ce0 => layer1_activations_1_ce0,
        we0 => layer1_activations_1_we0,
        d0 => layer1_activations_1_d0,
        q0 => layer1_activations_1_q0,
        address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_address1,
        ce1 => layer1_activations_1_ce1,
        q1 => layer1_activations_1_q1);

    layer2_activations_U : component feedforward_burst_layer2_activations_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => layer2_activations_address0,
        ce0 => layer2_activations_ce0,
        we0 => layer2_activations_we0,
        d0 => layer2_activations_d0,
        q0 => layer2_activations_q0,
        address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_address1,
        ce1 => layer2_activations_ce1,
        q1 => layer2_activations_q1);

    layer2_activations_1_U : component feedforward_burst_layer2_activations_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => layer2_activations_1_address0,
        ce0 => layer2_activations_1_ce0,
        we0 => layer2_activations_1_we0,
        d0 => layer2_activations_1_d0,
        q0 => layer2_activations_1_q0,
        address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_address1,
        ce1 => layer2_activations_1_ce1,
        q1 => layer2_activations_1_q1);

    layer2_activations_2_U : component feedforward_burst_layer2_activations_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => layer2_activations_2_address0,
        ce0 => layer2_activations_2_ce0,
        we0 => layer2_activations_2_we0,
        d0 => layer2_activations_2_d0,
        q0 => layer2_activations_2_q0,
        address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_address1,
        ce1 => layer2_activations_2_ce1,
        q1 => layer2_activations_2_q1);

    layer2_activations_3_U : component feedforward_burst_layer2_activations_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => layer2_activations_3_address0,
        ce0 => layer2_activations_3_ce0,
        we0 => layer2_activations_3_we0,
        d0 => layer2_activations_3_d0,
        q0 => layer2_activations_3_q0,
        address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_address1,
        ce1 => layer2_activations_3_ce1,
        q1 => layer2_activations_3_q1);

    layer3_activations_U : component feedforward_burst_layer3_activations_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => layer3_activations_address0,
        ce0 => layer3_activations_ce0,
        we0 => layer3_activations_we0,
        d0 => layer3_activations_d0,
        q0 => layer3_activations_q0,
        address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_address1,
        ce1 => layer3_activations_ce1,
        q1 => layer3_activations_q1);

    layer1_quant_U : component feedforward_burst_layer1_quant_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => layer1_quant_address0,
        ce0 => layer1_quant_ce0,
        we0 => layer1_quant_we0,
        d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_d0,
        q0 => layer1_quant_q0);

    layer2_quant_U : component feedforward_burst_layer2_quant_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => layer2_quant_address0,
        ce0 => layer2_quant_ce0,
        we0 => layer2_quant_we0,
        d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_d0,
        q0 => layer2_quant_q0,
        address1 => layer2_quant_address1_local,
        ce1 => layer2_quant_ce1_local,
        q1 => layer2_quant_q1);

    grp_feedforward_burst_Pipeline_1_fu_802 : component feedforward_burst_feedforward_burst_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_feedforward_burst_Pipeline_1_fu_802_ap_start,
        ap_done => grp_feedforward_burst_Pipeline_1_fu_802_ap_done,
        ap_idle => grp_feedforward_burst_Pipeline_1_fu_802_ap_idle,
        ap_ready => grp_feedforward_burst_Pipeline_1_fu_802_ap_ready,
        m_axi_gmem_0_AWVALID => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWVALID,
        m_axi_gmem_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_0_AWADDR => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWADDR,
        m_axi_gmem_0_AWID => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWID,
        m_axi_gmem_0_AWLEN => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWLEN,
        m_axi_gmem_0_AWSIZE => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWSIZE,
        m_axi_gmem_0_AWBURST => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWBURST,
        m_axi_gmem_0_AWLOCK => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWLOCK,
        m_axi_gmem_0_AWCACHE => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWCACHE,
        m_axi_gmem_0_AWPROT => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWPROT,
        m_axi_gmem_0_AWQOS => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWQOS,
        m_axi_gmem_0_AWREGION => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWREGION,
        m_axi_gmem_0_AWUSER => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_AWUSER,
        m_axi_gmem_0_WVALID => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_WVALID,
        m_axi_gmem_0_WREADY => ap_const_logic_0,
        m_axi_gmem_0_WDATA => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_WDATA,
        m_axi_gmem_0_WSTRB => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_WSTRB,
        m_axi_gmem_0_WLAST => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_WLAST,
        m_axi_gmem_0_WID => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_WID,
        m_axi_gmem_0_WUSER => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_WUSER,
        m_axi_gmem_0_ARVALID => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARVALID,
        m_axi_gmem_0_ARREADY => gmem_0_ARREADY,
        m_axi_gmem_0_ARADDR => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARADDR,
        m_axi_gmem_0_ARID => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARID,
        m_axi_gmem_0_ARLEN => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARLEN,
        m_axi_gmem_0_ARSIZE => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARSIZE,
        m_axi_gmem_0_ARBURST => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARBURST,
        m_axi_gmem_0_ARLOCK => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARLOCK,
        m_axi_gmem_0_ARCACHE => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARCACHE,
        m_axi_gmem_0_ARPROT => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARPROT,
        m_axi_gmem_0_ARQOS => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARQOS,
        m_axi_gmem_0_ARREGION => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARREGION,
        m_axi_gmem_0_ARUSER => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARUSER,
        m_axi_gmem_0_RVALID => gmem_0_RVALID,
        m_axi_gmem_0_RREADY => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_RREADY,
        m_axi_gmem_0_RDATA => gmem_0_RDATA,
        m_axi_gmem_0_RLAST => ap_const_logic_0,
        m_axi_gmem_0_RID => ap_const_lv1_0,
        m_axi_gmem_0_RFIFONUM => gmem_0_RFIFONUM,
        m_axi_gmem_0_RUSER => ap_const_lv1_0,
        m_axi_gmem_0_RRESP => ap_const_lv2_0,
        m_axi_gmem_0_BVALID => ap_const_logic_0,
        m_axi_gmem_0_BREADY => grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_BREADY,
        m_axi_gmem_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_0_BID => ap_const_lv1_0,
        m_axi_gmem_0_BUSER => ap_const_lv1_0,
        sext_ln204 => trunc_ln_reg_991,
        X0_input_address0 => grp_feedforward_burst_Pipeline_1_fu_802_X0_input_address0,
        X0_input_ce0 => grp_feedforward_burst_Pipeline_1_fu_802_X0_input_ce0,
        X0_input_we0 => grp_feedforward_burst_Pipeline_1_fu_802_X0_input_we0,
        X0_input_d0 => grp_feedforward_burst_Pipeline_1_fu_802_X0_input_d0);

    grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810 : component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_206_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_start,
        ap_done => grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_done,
        ap_idle => grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_idle,
        ap_ready => grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_ready,
        X0_input_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_address0,
        X0_input_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_ce0,
        X0_input_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_we0,
        X0_input_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_d0,
        X0_input_address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_address1,
        X0_input_ce1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_ce1,
        X0_input_q1 => X0_input_q1);

    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815 : component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_start,
        ap_done => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_done,
        ap_idle => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_idle,
        ap_ready => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_ready,
        X0_input_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_X0_input_address0,
        X0_input_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_X0_input_ce0,
        X0_input_q0 => X0_input_q0,
        layer1_activations_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_address0,
        layer1_activations_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_ce0,
        layer1_activations_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_we0,
        layer1_activations_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_d0,
        layer1_activations_1_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_address0,
        layer1_activations_1_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_ce0,
        layer1_activations_1_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_we0,
        layer1_activations_1_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_d0);

    grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824 : component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_216_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_start,
        ap_done => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_done,
        ap_idle => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_idle,
        ap_ready => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_ready,
        layer1_activations_1_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_address0,
        layer1_activations_1_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_ce0,
        layer1_activations_1_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_we0,
        layer1_activations_1_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_d0,
        layer1_activations_1_address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_address1,
        layer1_activations_1_ce1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_ce1,
        layer1_activations_1_q1 => layer1_activations_1_q1,
        layer1_activations_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_address0,
        layer1_activations_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_ce0,
        layer1_activations_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_we0,
        layer1_activations_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_d0,
        layer1_activations_address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_address1,
        layer1_activations_ce1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_ce1,
        layer1_activations_q1 => layer1_activations_q1);

    grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830 : component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_223_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_start,
        ap_done => grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_done,
        ap_idle => grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_idle,
        ap_ready => grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_ready,
        layer1_activations_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_address0,
        layer1_activations_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_ce0,
        layer1_activations_q0 => layer1_activations_q0,
        layer1_activations_1_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_1_address0,
        layer1_activations_1_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_1_ce0,
        layer1_activations_1_q0 => layer1_activations_1_q0,
        layer1_quant_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_address0,
        layer1_quant_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_ce0,
        layer1_quant_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_we0,
        layer1_quant_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_d0);

    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837 : component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_start,
        ap_done => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_done,
        ap_idle => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_idle,
        ap_ready => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_ready,
        layer1_quant_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer1_quant_address0,
        layer1_quant_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer1_quant_ce0,
        layer1_quant_q0 => layer1_quant_q0,
        layer2_activations_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_address0,
        layer2_activations_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_ce0,
        layer2_activations_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_we0,
        layer2_activations_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_d0,
        layer2_activations_1_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_address0,
        layer2_activations_1_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_ce0,
        layer2_activations_1_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_we0,
        layer2_activations_1_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_d0,
        layer2_activations_2_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_address0,
        layer2_activations_2_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_ce0,
        layer2_activations_2_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_we0,
        layer2_activations_2_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_d0,
        layer2_activations_3_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_address0,
        layer2_activations_3_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_ce0,
        layer2_activations_3_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_we0,
        layer2_activations_3_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_d0);

    grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848 : component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_233_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_start,
        ap_done => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_done,
        ap_idle => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_idle,
        ap_ready => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_ready,
        layer2_activations_3_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_address0,
        layer2_activations_3_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_ce0,
        layer2_activations_3_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_we0,
        layer2_activations_3_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_d0,
        layer2_activations_3_address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_address1,
        layer2_activations_3_ce1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_ce1,
        layer2_activations_3_q1 => layer2_activations_3_q1,
        layer2_activations_2_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_address0,
        layer2_activations_2_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_ce0,
        layer2_activations_2_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_we0,
        layer2_activations_2_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_d0,
        layer2_activations_2_address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_address1,
        layer2_activations_2_ce1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_ce1,
        layer2_activations_2_q1 => layer2_activations_2_q1,
        layer2_activations_1_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_address0,
        layer2_activations_1_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_ce0,
        layer2_activations_1_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_we0,
        layer2_activations_1_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_d0,
        layer2_activations_1_address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_address1,
        layer2_activations_1_ce1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_ce1,
        layer2_activations_1_q1 => layer2_activations_1_q1,
        layer2_activations_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_address0,
        layer2_activations_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_ce0,
        layer2_activations_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_we0,
        layer2_activations_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_d0,
        layer2_activations_address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_address1,
        layer2_activations_ce1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_ce1,
        layer2_activations_q1 => layer2_activations_q1);

    grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856 : component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_240_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_start,
        ap_done => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_done,
        ap_idle => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_idle,
        ap_ready => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_ready,
        layer2_activations_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_address0,
        layer2_activations_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_ce0,
        layer2_activations_q0 => layer2_activations_q0,
        layer2_activations_1_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_1_address0,
        layer2_activations_1_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_1_ce0,
        layer2_activations_1_q0 => layer2_activations_1_q0,
        layer2_activations_2_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_2_address0,
        layer2_activations_2_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_2_ce0,
        layer2_activations_2_q0 => layer2_activations_2_q0,
        layer2_activations_3_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_3_address0,
        layer2_activations_3_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_3_ce0,
        layer2_activations_3_q0 => layer2_activations_3_q0,
        layer2_quant_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_address0,
        layer2_quant_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_ce0,
        layer2_quant_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_we0,
        layer2_quant_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_d0);

    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865 : component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_49_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_start,
        ap_done => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_done,
        ap_idle => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_idle,
        ap_ready => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_ready,
        layer2_quant_load => layer2_quant_load_reg_1018,
        layer2_quant_load_1 => layer2_quant_load_1_reg_1023,
        layer2_quant_load_2 => layer2_quant_load_2_reg_1038,
        layer2_quant_load_3 => layer2_quant_load_3_reg_1043,
        layer2_quant_load_4 => layer2_quant_load_4_reg_1058,
        layer2_quant_load_5 => layer2_quant_load_5_reg_1063,
        layer2_quant_load_6 => layer2_quant_load_6_reg_1078,
        layer2_quant_load_7 => layer2_quant_load_7_reg_1083,
        layer2_quant_load_8 => layer2_quant_load_8_reg_1098,
        layer2_quant_load_9 => layer2_quant_load_9_reg_1103,
        layer2_quant_load_10 => layer2_quant_load_10_reg_1118,
        layer2_quant_load_11 => layer2_quant_load_11_reg_1123,
        layer2_quant_load_12 => layer2_quant_load_12_reg_1138,
        layer2_quant_load_13 => layer2_quant_load_13_reg_1143,
        layer2_quant_load_14 => layer2_quant_load_14_reg_1158,
        layer2_quant_load_15 => layer2_quant_load_15_reg_1163,
        layer2_quant_load_16 => layer2_quant_load_16_reg_1178,
        layer2_quant_load_17 => layer2_quant_load_17_reg_1183,
        layer2_quant_load_18 => layer2_quant_load_18_reg_1198,
        layer2_quant_load_19 => layer2_quant_load_19_reg_1203,
        layer2_quant_load_20 => layer2_quant_load_20_reg_1218,
        layer2_quant_load_21 => layer2_quant_load_21_reg_1223,
        layer2_quant_load_22 => layer2_quant_load_22_reg_1238,
        layer2_quant_load_23 => layer2_quant_load_23_reg_1243,
        layer2_quant_load_24 => layer2_quant_load_24_reg_1258,
        layer2_quant_load_25 => layer2_quant_load_25_reg_1263,
        layer2_quant_load_26 => layer2_quant_load_26_reg_1278,
        layer2_quant_load_27 => layer2_quant_load_27_reg_1283,
        layer2_quant_load_28 => layer2_quant_load_28_reg_1298,
        layer2_quant_load_29 => layer2_quant_load_29_reg_1303,
        layer2_quant_load_30 => layer2_quant_load_30_reg_1318,
        layer2_quant_load_31 => layer2_quant_load_31_reg_1323,
        layer2_quant_load_32 => layer2_quant_load_32_reg_1338,
        layer2_quant_load_33 => layer2_quant_load_33_reg_1343,
        layer2_quant_load_34 => layer2_quant_load_34_reg_1358,
        layer2_quant_load_35 => layer2_quant_load_35_reg_1363,
        layer2_quant_load_36 => layer2_quant_load_36_reg_1378,
        layer2_quant_load_37 => layer2_quant_load_37_reg_1383,
        layer2_quant_load_38 => layer2_quant_load_38_reg_1398,
        layer2_quant_load_39 => layer2_quant_load_39_reg_1403,
        layer2_quant_load_40 => layer2_quant_load_40_reg_1418,
        layer2_quant_load_41 => layer2_quant_load_41_reg_1423,
        layer2_quant_load_42 => layer2_quant_load_42_reg_1438,
        layer2_quant_load_43 => layer2_quant_load_43_reg_1443,
        layer2_quant_load_44 => layer2_quant_load_44_reg_1458,
        layer2_quant_load_45 => layer2_quant_load_45_reg_1463,
        layer2_quant_load_46 => layer2_quant_load_46_reg_1478,
        layer2_quant_load_47 => layer2_quant_load_47_reg_1483,
        layer2_quant_load_48 => layer2_quant_load_48_reg_1498,
        layer2_quant_load_49 => layer2_quant_load_49_reg_1503,
        layer2_quant_load_50 => layer2_quant_load_50_reg_1518,
        layer2_quant_load_51 => layer2_quant_load_51_reg_1523,
        layer2_quant_load_52 => layer2_quant_load_52_reg_1538,
        layer2_quant_load_53 => layer2_quant_load_53_reg_1543,
        layer2_quant_load_54 => layer2_quant_load_54_reg_1558,
        layer2_quant_load_55 => layer2_quant_load_55_reg_1563,
        layer2_quant_load_56 => layer2_quant_load_56_reg_1578,
        layer2_quant_load_57 => layer2_quant_load_57_reg_1583,
        layer2_quant_load_58 => layer2_quant_load_58_reg_1598,
        layer2_quant_load_59 => layer2_quant_load_59_reg_1603,
        layer2_quant_load_60 => layer2_quant_load_60_reg_1618,
        layer2_quant_load_61 => layer2_quant_load_61_reg_1623,
        layer2_quant_load_62 => layer2_quant_load_62_reg_1638,
        layer2_quant_load_63 => layer2_quant_load_63_reg_1643,
        layer3_activations_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_address0,
        layer3_activations_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_ce0,
        layer3_activations_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_we0,
        layer3_activations_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_d0);

    grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938 : component feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_250_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_start,
        ap_done => grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_done,
        ap_idle => grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_idle,
        ap_ready => grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_ready,
        layer3_activations_address0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_address0,
        layer3_activations_ce0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_ce0,
        layer3_activations_we0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_we0,
        layer3_activations_d0 => grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_d0,
        layer3_activations_address1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_address1,
        layer3_activations_ce1 => grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_ce1,
        layer3_activations_q1 => layer3_activations_q1);

    grp_feedforward_burst_Pipeline_11_fu_943 : component feedforward_burst_feedforward_burst_Pipeline_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_feedforward_burst_Pipeline_11_fu_943_ap_start,
        ap_done => grp_feedforward_burst_Pipeline_11_fu_943_ap_done,
        ap_idle => grp_feedforward_burst_Pipeline_11_fu_943_ap_idle,
        ap_ready => grp_feedforward_burst_Pipeline_11_fu_943_ap_ready,
        m_axi_gmem_0_AWVALID => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWVALID,
        m_axi_gmem_0_AWREADY => gmem_0_AWREADY,
        m_axi_gmem_0_AWADDR => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWADDR,
        m_axi_gmem_0_AWID => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWID,
        m_axi_gmem_0_AWLEN => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWLEN,
        m_axi_gmem_0_AWSIZE => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWSIZE,
        m_axi_gmem_0_AWBURST => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWBURST,
        m_axi_gmem_0_AWLOCK => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWLOCK,
        m_axi_gmem_0_AWCACHE => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWCACHE,
        m_axi_gmem_0_AWPROT => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWPROT,
        m_axi_gmem_0_AWQOS => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWQOS,
        m_axi_gmem_0_AWREGION => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWREGION,
        m_axi_gmem_0_AWUSER => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWUSER,
        m_axi_gmem_0_WVALID => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WVALID,
        m_axi_gmem_0_WREADY => gmem_0_WREADY,
        m_axi_gmem_0_WDATA => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WDATA,
        m_axi_gmem_0_WSTRB => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WSTRB,
        m_axi_gmem_0_WLAST => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WLAST,
        m_axi_gmem_0_WID => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WID,
        m_axi_gmem_0_WUSER => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WUSER,
        m_axi_gmem_0_ARVALID => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARVALID,
        m_axi_gmem_0_ARREADY => ap_const_logic_0,
        m_axi_gmem_0_ARADDR => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARADDR,
        m_axi_gmem_0_ARID => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARID,
        m_axi_gmem_0_ARLEN => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARLEN,
        m_axi_gmem_0_ARSIZE => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARSIZE,
        m_axi_gmem_0_ARBURST => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARBURST,
        m_axi_gmem_0_ARLOCK => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARLOCK,
        m_axi_gmem_0_ARCACHE => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARCACHE,
        m_axi_gmem_0_ARPROT => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARPROT,
        m_axi_gmem_0_ARQOS => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARQOS,
        m_axi_gmem_0_ARREGION => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARREGION,
        m_axi_gmem_0_ARUSER => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_ARUSER,
        m_axi_gmem_0_RVALID => ap_const_logic_0,
        m_axi_gmem_0_RREADY => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_RREADY,
        m_axi_gmem_0_RDATA => ap_const_lv32_0,
        m_axi_gmem_0_RLAST => ap_const_logic_0,
        m_axi_gmem_0_RID => ap_const_lv1_0,
        m_axi_gmem_0_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_0_RUSER => ap_const_lv1_0,
        m_axi_gmem_0_RRESP => ap_const_lv2_0,
        m_axi_gmem_0_BVALID => gmem_0_BVALID,
        m_axi_gmem_0_BREADY => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_BREADY,
        m_axi_gmem_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_0_BID => ap_const_lv1_0,
        m_axi_gmem_0_BUSER => ap_const_lv1_0,
        sext_ln257 => trunc_ln4_reg_997,
        layer3_activations_address0 => grp_feedforward_burst_Pipeline_11_fu_943_layer3_activations_address0,
        layer3_activations_ce0 => grp_feedforward_burst_Pipeline_11_fu_943_layer3_activations_ce0,
        layer3_activations_q0 => layer3_activations_q0);

    control_s_axi_U : component feedforward_burst_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        input_r => input_r,
        output_r => output_r,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_m_axi_U : component feedforward_burst_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 9,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => gmem_0_ARVALID,
        I_CH0_ARREADY => gmem_0_ARREADY,
        I_CH0_ARADDR => gmem_0_ARADDR,
        I_CH0_ARLEN => gmem_0_ARLEN,
        I_CH0_RVALID => gmem_0_RVALID,
        I_CH0_RREADY => gmem_0_RREADY,
        I_CH0_RDATA => gmem_0_RDATA,
        I_CH0_RFIFONUM => gmem_0_RFIFONUM,
        I_CH0_AWVALID => gmem_0_AWVALID,
        I_CH0_AWREADY => gmem_0_AWREADY,
        I_CH0_AWADDR => gmem_0_AWADDR,
        I_CH0_AWLEN => gmem_0_AWLEN,
        I_CH0_WVALID => gmem_0_WVALID,
        I_CH0_WREADY => gmem_0_WREADY,
        I_CH0_WDATA => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WDATA,
        I_CH0_WSTRB => grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WSTRB,
        I_CH0_BVALID => gmem_0_BVALID,
        I_CH0_BREADY => gmem_0_BREADY);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_feedforward_burst_Pipeline_11_fu_943_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_feedforward_burst_Pipeline_11_fu_943_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
                    grp_feedforward_burst_Pipeline_11_fu_943_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_feedforward_burst_Pipeline_11_fu_943_ap_ready = ap_const_logic_1)) then 
                    grp_feedforward_burst_Pipeline_11_fu_943_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_feedforward_burst_Pipeline_1_fu_802_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_feedforward_burst_Pipeline_1_fu_802_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_feedforward_burst_Pipeline_1_fu_802_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_feedforward_burst_Pipeline_1_fu_802_ap_ready = ap_const_logic_1)) then 
                    grp_feedforward_burst_Pipeline_1_fu_802_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_ready = ap_const_logic_1)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_ready = ap_const_logic_1)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_ready = ap_const_logic_1)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_ready = ap_const_logic_1)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_ready = ap_const_logic_1)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_ready = ap_const_logic_1)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_ready = ap_const_logic_1)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_ready = ap_const_logic_1)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_ready = ap_const_logic_1)) then 
                    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                layer2_quant_load_10_reg_1118 <= layer2_quant_q1;
                layer2_quant_load_11_reg_1123 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                layer2_quant_load_12_reg_1138 <= layer2_quant_q1;
                layer2_quant_load_13_reg_1143 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                layer2_quant_load_14_reg_1158 <= layer2_quant_q1;
                layer2_quant_load_15_reg_1163 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                layer2_quant_load_16_reg_1178 <= layer2_quant_q1;
                layer2_quant_load_17_reg_1183 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                layer2_quant_load_18_reg_1198 <= layer2_quant_q1;
                layer2_quant_load_19_reg_1203 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                layer2_quant_load_1_reg_1023 <= layer2_quant_q0;
                layer2_quant_load_reg_1018 <= layer2_quant_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                layer2_quant_load_20_reg_1218 <= layer2_quant_q1;
                layer2_quant_load_21_reg_1223 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                layer2_quant_load_22_reg_1238 <= layer2_quant_q1;
                layer2_quant_load_23_reg_1243 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                layer2_quant_load_24_reg_1258 <= layer2_quant_q1;
                layer2_quant_load_25_reg_1263 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                layer2_quant_load_26_reg_1278 <= layer2_quant_q1;
                layer2_quant_load_27_reg_1283 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                layer2_quant_load_28_reg_1298 <= layer2_quant_q1;
                layer2_quant_load_29_reg_1303 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                layer2_quant_load_2_reg_1038 <= layer2_quant_q1;
                layer2_quant_load_3_reg_1043 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                layer2_quant_load_30_reg_1318 <= layer2_quant_q1;
                layer2_quant_load_31_reg_1323 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                layer2_quant_load_32_reg_1338 <= layer2_quant_q1;
                layer2_quant_load_33_reg_1343 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                layer2_quant_load_34_reg_1358 <= layer2_quant_q1;
                layer2_quant_load_35_reg_1363 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                layer2_quant_load_36_reg_1378 <= layer2_quant_q1;
                layer2_quant_load_37_reg_1383 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                layer2_quant_load_38_reg_1398 <= layer2_quant_q1;
                layer2_quant_load_39_reg_1403 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                layer2_quant_load_40_reg_1418 <= layer2_quant_q1;
                layer2_quant_load_41_reg_1423 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                layer2_quant_load_42_reg_1438 <= layer2_quant_q1;
                layer2_quant_load_43_reg_1443 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then
                layer2_quant_load_44_reg_1458 <= layer2_quant_q1;
                layer2_quant_load_45_reg_1463 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                layer2_quant_load_46_reg_1478 <= layer2_quant_q1;
                layer2_quant_load_47_reg_1483 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                layer2_quant_load_48_reg_1498 <= layer2_quant_q1;
                layer2_quant_load_49_reg_1503 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                layer2_quant_load_4_reg_1058 <= layer2_quant_q1;
                layer2_quant_load_5_reg_1063 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                layer2_quant_load_50_reg_1518 <= layer2_quant_q1;
                layer2_quant_load_51_reg_1523 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                layer2_quant_load_52_reg_1538 <= layer2_quant_q1;
                layer2_quant_load_53_reg_1543 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                layer2_quant_load_54_reg_1558 <= layer2_quant_q1;
                layer2_quant_load_55_reg_1563 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                layer2_quant_load_56_reg_1578 <= layer2_quant_q1;
                layer2_quant_load_57_reg_1583 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                layer2_quant_load_58_reg_1598 <= layer2_quant_q1;
                layer2_quant_load_59_reg_1603 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                layer2_quant_load_60_reg_1618 <= layer2_quant_q1;
                layer2_quant_load_61_reg_1623 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                layer2_quant_load_62_reg_1638 <= layer2_quant_q1;
                layer2_quant_load_63_reg_1643 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                layer2_quant_load_6_reg_1078 <= layer2_quant_q1;
                layer2_quant_load_7_reg_1083 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                layer2_quant_load_8_reg_1098 <= layer2_quant_q1;
                layer2_quant_load_9_reg_1103 <= layer2_quant_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln4_reg_997 <= output_r(63 downto 2);
                trunc_ln_reg_991 <= input_r(63 downto 2);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state62, ap_CS_fsm_state69, grp_feedforward_burst_Pipeline_1_fu_802_ap_done, grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_done, grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_done, grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_done, grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_done, grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_done, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_done, grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_done, grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_done, grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_done, grp_feedforward_burst_Pipeline_11_fu_943_ap_done, gmem_0_AWREADY, gmem_0_ARREADY, gmem_0_BVALID, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state59, ap_CS_fsm_state61, ap_CS_fsm_state64)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem_0_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_feedforward_burst_Pipeline_1_fu_802_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                if (((grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state59))) then
                    ap_NS_fsm <= ap_ST_fsm_state60;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                if (((grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state61))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_state62 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state62) and (gmem_0_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state62;
                end if;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (((grp_feedforward_burst_Pipeline_11_fu_943_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state69) and (gmem_0_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    X0_input_address0_assign_proc : process(grp_feedforward_burst_Pipeline_1_fu_802_X0_input_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_X0_input_address0, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            X0_input_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_X0_input_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            X0_input_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            X0_input_address0 <= grp_feedforward_burst_Pipeline_1_fu_802_X0_input_address0;
        else 
            X0_input_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X0_input_ce0_assign_proc : process(grp_feedforward_burst_Pipeline_1_fu_802_X0_input_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_X0_input_ce0, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            X0_input_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_X0_input_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            X0_input_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            X0_input_ce0 <= grp_feedforward_burst_Pipeline_1_fu_802_X0_input_ce0;
        else 
            X0_input_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X0_input_ce1_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_ce1, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            X0_input_ce1 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_ce1;
        else 
            X0_input_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X0_input_d0_assign_proc : process(grp_feedforward_burst_Pipeline_1_fu_802_X0_input_d0, grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_d0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            X0_input_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            X0_input_d0 <= grp_feedforward_burst_Pipeline_1_fu_802_X0_input_d0;
        else 
            X0_input_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X0_input_we0_assign_proc : process(grp_feedforward_burst_Pipeline_1_fu_802_X0_input_we0, grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_we0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            X0_input_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_X0_input_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            X0_input_we0 <= grp_feedforward_burst_Pipeline_1_fu_802_X0_input_we0;
        else 
            X0_input_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_feedforward_burst_Pipeline_1_fu_802_ap_done)
    begin
        if ((grp_feedforward_burst_Pipeline_1_fu_802_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_done)
    begin
        if ((grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_done)
    begin
        if ((grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_done)
    begin
        if ((grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_done)
    begin
        if ((grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_done)
    begin
        if ((grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;

    ap_ST_fsm_state23_blk_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_done)
    begin
        if ((grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state24_blk <= ap_const_logic_0;

    ap_ST_fsm_state25_blk_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_done)
    begin
        if ((grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(gmem_0_ARREADY)
    begin
        if ((gmem_0_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;

    ap_ST_fsm_state59_blk_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_done)
    begin
        if ((grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state59_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state59_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;

    ap_ST_fsm_state61_blk_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_done)
    begin
        if ((grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state61_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state61_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state62_blk_assign_proc : process(gmem_0_AWREADY)
    begin
        if ((gmem_0_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state62_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state62_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state63_blk <= ap_const_logic_0;

    ap_ST_fsm_state64_blk_assign_proc : process(grp_feedforward_burst_Pipeline_11_fu_943_ap_done)
    begin
        if ((grp_feedforward_burst_Pipeline_11_fu_943_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state64_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state64_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;

    ap_ST_fsm_state69_blk_assign_proc : process(gmem_0_BVALID)
    begin
        if ((gmem_0_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state69_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state69_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state69, gmem_0_BVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) and (gmem_0_BVALID = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state69, gmem_0_BVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) and (gmem_0_BVALID = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    gmem_0_ARADDR_assign_proc : process(ap_CS_fsm_state2, grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARADDR, gmem_0_ARREADY, ap_CS_fsm_state10, ap_CS_fsm_state11, sext_ln204_fu_971_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem_0_ARREADY = ap_const_logic_1))) then 
            gmem_0_ARADDR <= sext_ln204_fu_971_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_0_ARADDR <= grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARADDR;
        else 
            gmem_0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_0_ARLEN_assign_proc : process(ap_CS_fsm_state2, grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARLEN, gmem_0_ARREADY, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem_0_ARREADY = ap_const_logic_1))) then 
            gmem_0_ARLEN <= ap_const_lv64_310(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_0_ARLEN <= grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARLEN;
        else 
            gmem_0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_0_ARVALID_assign_proc : process(ap_CS_fsm_state2, grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARVALID, gmem_0_ARREADY, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem_0_ARREADY = ap_const_logic_1))) then 
            gmem_0_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_0_ARVALID <= grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_ARVALID;
        else 
            gmem_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_0_AWADDR_assign_proc : process(ap_CS_fsm_state62, grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWADDR, gmem_0_AWREADY, ap_CS_fsm_state63, ap_CS_fsm_state64, sext_ln257_fu_981_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) and (gmem_0_AWREADY = ap_const_logic_1))) then 
            gmem_0_AWADDR <= sext_ln257_fu_981_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            gmem_0_AWADDR <= grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWADDR;
        else 
            gmem_0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_0_AWLEN_assign_proc : process(ap_CS_fsm_state62, grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWLEN, gmem_0_AWREADY, ap_CS_fsm_state63, ap_CS_fsm_state64)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) and (gmem_0_AWREADY = ap_const_logic_1))) then 
            gmem_0_AWLEN <= ap_const_lv64_A(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            gmem_0_AWLEN <= grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWLEN;
        else 
            gmem_0_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_0_AWVALID_assign_proc : process(ap_CS_fsm_state62, grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWVALID, gmem_0_AWREADY, ap_CS_fsm_state63, ap_CS_fsm_state64)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) and (gmem_0_AWREADY = ap_const_logic_1))) then 
            gmem_0_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            gmem_0_AWVALID <= grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_AWVALID;
        else 
            gmem_0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_0_BREADY_assign_proc : process(ap_CS_fsm_state69, grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_BREADY, gmem_0_BVALID, ap_CS_fsm_state63, ap_CS_fsm_state64)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) and (gmem_0_BVALID = ap_const_logic_1))) then 
            gmem_0_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            gmem_0_BREADY <= grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_BREADY;
        else 
            gmem_0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_0_RREADY_assign_proc : process(grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_RREADY, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_0_RREADY <= grp_feedforward_burst_Pipeline_1_fu_802_m_axi_gmem_0_RREADY;
        else 
            gmem_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_0_WVALID_assign_proc : process(grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WVALID, ap_CS_fsm_state63, ap_CS_fsm_state64)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            gmem_0_WVALID <= grp_feedforward_burst_Pipeline_11_fu_943_m_axi_gmem_0_WVALID;
        else 
            gmem_0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    grp_feedforward_burst_Pipeline_11_fu_943_ap_start <= grp_feedforward_burst_Pipeline_11_fu_943_ap_start_reg;
    grp_feedforward_burst_Pipeline_1_fu_802_ap_start <= grp_feedforward_burst_Pipeline_1_fu_802_ap_start_reg;
    grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_start <= grp_feedforward_burst_Pipeline_VITIS_LOOP_206_1_fu_810_ap_start_reg;
    grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_start <= grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_ap_start_reg;
    grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_start <= grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_ap_start_reg;
    grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_start <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_ap_start_reg;
    grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_start <= grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_ap_start_reg;
    grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_start <= grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_ap_start_reg;
    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_start <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_ap_start_reg;
    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_start <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_ap_start_reg;
    grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_start <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_ap_start_reg;

    layer1_activations_1_address0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_1_address0, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            layer1_activations_1_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer1_activations_1_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            layer1_activations_1_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_address0;
        else 
            layer1_activations_1_address0 <= "XXXXXX";
        end if; 
    end process;


    layer1_activations_1_ce0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_1_ce0, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            layer1_activations_1_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer1_activations_1_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            layer1_activations_1_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_ce0;
        else 
            layer1_activations_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer1_activations_1_ce1_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_ce1, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer1_activations_1_ce1 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_ce1;
        else 
            layer1_activations_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    layer1_activations_1_d0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_d0, grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_d0, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer1_activations_1_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            layer1_activations_1_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_d0;
        else 
            layer1_activations_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    layer1_activations_1_we0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_we0, grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_we0, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer1_activations_1_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            layer1_activations_1_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_1_we0;
        else 
            layer1_activations_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    layer1_activations_address0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_address0, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            layer1_activations_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer1_activations_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            layer1_activations_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_address0;
        else 
            layer1_activations_address0 <= "XXXXXX";
        end if; 
    end process;


    layer1_activations_ce0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_ce0, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            layer1_activations_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_activations_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer1_activations_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            layer1_activations_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_ce0;
        else 
            layer1_activations_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer1_activations_ce1_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_ce1, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer1_activations_ce1 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_ce1;
        else 
            layer1_activations_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    layer1_activations_d0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_d0, grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_d0, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer1_activations_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            layer1_activations_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_d0;
        else 
            layer1_activations_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    layer1_activations_we0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_we0, grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_we0, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            layer1_activations_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_216_2_fu_824_layer1_activations_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            layer1_activations_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_2_fu_815_layer1_activations_we0;
        else 
            layer1_activations_we0 <= ap_const_logic_0;
        end if; 
    end process;


    layer1_quant_address0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer1_quant_address0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer1_quant_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer1_quant_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            layer1_quant_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_address0;
        else 
            layer1_quant_address0 <= "XXXXXXX";
        end if; 
    end process;


    layer1_quant_ce0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer1_quant_ce0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer1_quant_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer1_quant_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            layer1_quant_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_ce0;
        else 
            layer1_quant_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer1_quant_we0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_we0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            layer1_quant_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_223_3_fu_830_layer1_quant_we0;
        else 
            layer1_quant_we0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_activations_1_address0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_1_address0, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            layer2_activations_1_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_1_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_1_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_address0;
        else 
            layer2_activations_1_address0 <= "XXXX";
        end if; 
    end process;


    layer2_activations_1_ce0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_1_ce0, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            layer2_activations_1_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_1_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_1_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_ce0;
        else 
            layer2_activations_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_activations_1_ce1_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_ce1, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_1_ce1 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_ce1;
        else 
            layer2_activations_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_activations_1_d0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_d0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_d0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_1_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_1_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_d0;
        else 
            layer2_activations_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    layer2_activations_1_we0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_we0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_we0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_1_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_1_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_1_we0;
        else 
            layer2_activations_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_activations_2_address0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_2_address0, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            layer2_activations_2_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_2_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_2_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_address0;
        else 
            layer2_activations_2_address0 <= "XXXX";
        end if; 
    end process;


    layer2_activations_2_ce0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_2_ce0, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            layer2_activations_2_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_2_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_2_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_ce0;
        else 
            layer2_activations_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_activations_2_ce1_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_ce1, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_2_ce1 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_ce1;
        else 
            layer2_activations_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_activations_2_d0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_d0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_d0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_2_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_2_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_d0;
        else 
            layer2_activations_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    layer2_activations_2_we0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_we0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_we0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_2_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_2_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_2_we0;
        else 
            layer2_activations_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_activations_3_address0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_3_address0, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            layer2_activations_3_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_3_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_3_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_address0;
        else 
            layer2_activations_3_address0 <= "XXXX";
        end if; 
    end process;


    layer2_activations_3_ce0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_3_ce0, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            layer2_activations_3_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_3_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_3_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_ce0;
        else 
            layer2_activations_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_activations_3_ce1_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_ce1, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_3_ce1 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_ce1;
        else 
            layer2_activations_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_activations_3_d0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_d0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_d0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_3_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_3_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_d0;
        else 
            layer2_activations_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    layer2_activations_3_we0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_we0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_we0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_3_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_3_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_3_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_3_we0;
        else 
            layer2_activations_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_activations_address0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_address0, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            layer2_activations_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_address0;
        else 
            layer2_activations_address0 <= "XXXX";
        end if; 
    end process;


    layer2_activations_ce0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_ce0, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            layer2_activations_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_activations_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_ce0;
        else 
            layer2_activations_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_activations_ce1_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_ce1, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_ce1 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_ce1;
        else 
            layer2_activations_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_activations_d0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_d0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_d0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_d0;
        else 
            layer2_activations_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    layer2_activations_we0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_we0, grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_we0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            layer2_activations_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_233_4_fu_848_layer2_activations_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            layer2_activations_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_52_21_fu_837_layer2_activations_we0;
        else 
            layer2_activations_we0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_quant_address0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_address0, ap_CS_fsm_state25, layer2_quant_address0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            layer2_quant_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_address0;
        else 
            layer2_quant_address0 <= layer2_quant_address0_local;
        end if; 
    end process;


    layer2_quant_address0_local_assign_proc : process(ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            layer2_quant_address0_local <= ap_const_lv64_3F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            layer2_quant_address0_local <= ap_const_lv64_3D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            layer2_quant_address0_local <= ap_const_lv64_3B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            layer2_quant_address0_local <= ap_const_lv64_39(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            layer2_quant_address0_local <= ap_const_lv64_37(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            layer2_quant_address0_local <= ap_const_lv64_35(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            layer2_quant_address0_local <= ap_const_lv64_33(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            layer2_quant_address0_local <= ap_const_lv64_31(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            layer2_quant_address0_local <= ap_const_lv64_2F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            layer2_quant_address0_local <= ap_const_lv64_2D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            layer2_quant_address0_local <= ap_const_lv64_2B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            layer2_quant_address0_local <= ap_const_lv64_29(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            layer2_quant_address0_local <= ap_const_lv64_27(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            layer2_quant_address0_local <= ap_const_lv64_25(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            layer2_quant_address0_local <= ap_const_lv64_23(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            layer2_quant_address0_local <= ap_const_lv64_21(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            layer2_quant_address0_local <= ap_const_lv64_1F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            layer2_quant_address0_local <= ap_const_lv64_1D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            layer2_quant_address0_local <= ap_const_lv64_1B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            layer2_quant_address0_local <= ap_const_lv64_19(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            layer2_quant_address0_local <= ap_const_lv64_17(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            layer2_quant_address0_local <= ap_const_lv64_15(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            layer2_quant_address0_local <= ap_const_lv64_13(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            layer2_quant_address0_local <= ap_const_lv64_11(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            layer2_quant_address0_local <= ap_const_lv64_F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            layer2_quant_address0_local <= ap_const_lv64_D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            layer2_quant_address0_local <= ap_const_lv64_B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            layer2_quant_address0_local <= ap_const_lv64_9(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            layer2_quant_address0_local <= ap_const_lv64_7(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            layer2_quant_address0_local <= ap_const_lv64_5(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            layer2_quant_address0_local <= ap_const_lv64_3(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            layer2_quant_address0_local <= ap_const_lv64_1(6 - 1 downto 0);
        else 
            layer2_quant_address0_local <= "XXXXXX";
        end if; 
    end process;


    layer2_quant_address1_local_assign_proc : process(ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            layer2_quant_address1_local <= ap_const_lv64_3E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            layer2_quant_address1_local <= ap_const_lv64_3C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            layer2_quant_address1_local <= ap_const_lv64_3A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            layer2_quant_address1_local <= ap_const_lv64_38(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            layer2_quant_address1_local <= ap_const_lv64_36(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            layer2_quant_address1_local <= ap_const_lv64_34(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            layer2_quant_address1_local <= ap_const_lv64_32(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            layer2_quant_address1_local <= ap_const_lv64_30(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            layer2_quant_address1_local <= ap_const_lv64_2E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            layer2_quant_address1_local <= ap_const_lv64_2C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            layer2_quant_address1_local <= ap_const_lv64_2A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            layer2_quant_address1_local <= ap_const_lv64_28(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            layer2_quant_address1_local <= ap_const_lv64_26(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            layer2_quant_address1_local <= ap_const_lv64_24(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            layer2_quant_address1_local <= ap_const_lv64_22(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            layer2_quant_address1_local <= ap_const_lv64_20(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            layer2_quant_address1_local <= ap_const_lv64_1E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            layer2_quant_address1_local <= ap_const_lv64_1C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            layer2_quant_address1_local <= ap_const_lv64_1A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            layer2_quant_address1_local <= ap_const_lv64_18(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            layer2_quant_address1_local <= ap_const_lv64_16(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            layer2_quant_address1_local <= ap_const_lv64_14(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            layer2_quant_address1_local <= ap_const_lv64_12(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            layer2_quant_address1_local <= ap_const_lv64_10(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            layer2_quant_address1_local <= ap_const_lv64_E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            layer2_quant_address1_local <= ap_const_lv64_C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            layer2_quant_address1_local <= ap_const_lv64_A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            layer2_quant_address1_local <= ap_const_lv64_8(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            layer2_quant_address1_local <= ap_const_lv64_6(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            layer2_quant_address1_local <= ap_const_lv64_4(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            layer2_quant_address1_local <= ap_const_lv64_2(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            layer2_quant_address1_local <= ap_const_lv64_0(6 - 1 downto 0);
        else 
            layer2_quant_address1_local <= "XXXXXX";
        end if; 
    end process;


    layer2_quant_ce0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_ce0, ap_CS_fsm_state25, layer2_quant_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            layer2_quant_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_ce0;
        else 
            layer2_quant_ce0 <= layer2_quant_ce0_local;
        end if; 
    end process;


    layer2_quant_ce0_local_assign_proc : process(ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 
    = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            layer2_quant_ce0_local <= ap_const_logic_1;
        else 
            layer2_quant_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    layer2_quant_ce1_local_assign_proc : process(ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 
    = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            layer2_quant_ce1_local <= ap_const_logic_1;
        else 
            layer2_quant_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    layer2_quant_we0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_we0, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            layer2_quant_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_240_5_fu_856_layer2_quant_we0;
        else 
            layer2_quant_we0 <= ap_const_logic_0;
        end if; 
    end process;


    layer3_activations_address0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_address0, grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_address0, grp_feedforward_burst_Pipeline_11_fu_943_layer3_activations_address0, ap_CS_fsm_state59, ap_CS_fsm_state61, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            layer3_activations_address0 <= grp_feedforward_burst_Pipeline_11_fu_943_layer3_activations_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            layer3_activations_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            layer3_activations_address0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_address0;
        else 
            layer3_activations_address0 <= "XXXX";
        end if; 
    end process;


    layer3_activations_ce0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_ce0, grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_ce0, grp_feedforward_burst_Pipeline_11_fu_943_layer3_activations_ce0, ap_CS_fsm_state59, ap_CS_fsm_state61, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            layer3_activations_ce0 <= grp_feedforward_burst_Pipeline_11_fu_943_layer3_activations_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            layer3_activations_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            layer3_activations_ce0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_ce0;
        else 
            layer3_activations_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer3_activations_ce1_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_ce1, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            layer3_activations_ce1 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_ce1;
        else 
            layer3_activations_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    layer3_activations_d0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_d0, grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_d0, ap_CS_fsm_state59, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            layer3_activations_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            layer3_activations_d0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_d0;
        else 
            layer3_activations_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    layer3_activations_we0_assign_proc : process(grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_we0, grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_we0, ap_CS_fsm_state59, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            layer3_activations_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_250_6_fu_938_layer3_activations_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            layer3_activations_we0 <= grp_feedforward_burst_Pipeline_VITIS_LOOP_49_1_fu_865_layer3_activations_we0;
        else 
            layer3_activations_we0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln204_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_991),64));

        sext_ln257_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_reg_997),64));

end behav;
