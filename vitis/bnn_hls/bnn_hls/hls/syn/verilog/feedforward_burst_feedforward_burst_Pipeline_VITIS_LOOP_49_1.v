// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_49_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        layer2_quant_load,
        layer2_quant_load_1,
        layer2_quant_load_2,
        layer2_quant_load_3,
        layer2_quant_load_4,
        layer2_quant_load_5,
        layer2_quant_load_6,
        layer2_quant_load_7,
        layer2_quant_load_8,
        layer2_quant_load_9,
        layer2_quant_load_10,
        layer2_quant_load_11,
        layer2_quant_load_12,
        layer2_quant_load_13,
        layer2_quant_load_14,
        layer2_quant_load_15,
        layer2_quant_load_16,
        layer2_quant_load_17,
        layer2_quant_load_18,
        layer2_quant_load_19,
        layer2_quant_load_20,
        layer2_quant_load_21,
        layer2_quant_load_22,
        layer2_quant_load_23,
        layer2_quant_load_24,
        layer2_quant_load_25,
        layer2_quant_load_26,
        layer2_quant_load_27,
        layer2_quant_load_28,
        layer2_quant_load_29,
        layer2_quant_load_30,
        layer2_quant_load_31,
        layer2_quant_load_32,
        layer2_quant_load_33,
        layer2_quant_load_34,
        layer2_quant_load_35,
        layer2_quant_load_36,
        layer2_quant_load_37,
        layer2_quant_load_38,
        layer2_quant_load_39,
        layer2_quant_load_40,
        layer2_quant_load_41,
        layer2_quant_load_42,
        layer2_quant_load_43,
        layer2_quant_load_44,
        layer2_quant_load_45,
        layer2_quant_load_46,
        layer2_quant_load_47,
        layer2_quant_load_48,
        layer2_quant_load_49,
        layer2_quant_load_50,
        layer2_quant_load_51,
        layer2_quant_load_52,
        layer2_quant_load_53,
        layer2_quant_load_54,
        layer2_quant_load_55,
        layer2_quant_load_56,
        layer2_quant_load_57,
        layer2_quant_load_58,
        layer2_quant_load_59,
        layer2_quant_load_60,
        layer2_quant_load_61,
        layer2_quant_load_62,
        layer2_quant_load_63,
        layer3_activations_address0,
        layer3_activations_ce0,
        layer3_activations_we0,
        layer3_activations_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] layer2_quant_load;
input  [0:0] layer2_quant_load_1;
input  [0:0] layer2_quant_load_2;
input  [0:0] layer2_quant_load_3;
input  [0:0] layer2_quant_load_4;
input  [0:0] layer2_quant_load_5;
input  [0:0] layer2_quant_load_6;
input  [0:0] layer2_quant_load_7;
input  [0:0] layer2_quant_load_8;
input  [0:0] layer2_quant_load_9;
input  [0:0] layer2_quant_load_10;
input  [0:0] layer2_quant_load_11;
input  [0:0] layer2_quant_load_12;
input  [0:0] layer2_quant_load_13;
input  [0:0] layer2_quant_load_14;
input  [0:0] layer2_quant_load_15;
input  [0:0] layer2_quant_load_16;
input  [0:0] layer2_quant_load_17;
input  [0:0] layer2_quant_load_18;
input  [0:0] layer2_quant_load_19;
input  [0:0] layer2_quant_load_20;
input  [0:0] layer2_quant_load_21;
input  [0:0] layer2_quant_load_22;
input  [0:0] layer2_quant_load_23;
input  [0:0] layer2_quant_load_24;
input  [0:0] layer2_quant_load_25;
input  [0:0] layer2_quant_load_26;
input  [0:0] layer2_quant_load_27;
input  [0:0] layer2_quant_load_28;
input  [0:0] layer2_quant_load_29;
input  [0:0] layer2_quant_load_30;
input  [0:0] layer2_quant_load_31;
input  [0:0] layer2_quant_load_32;
input  [0:0] layer2_quant_load_33;
input  [0:0] layer2_quant_load_34;
input  [0:0] layer2_quant_load_35;
input  [0:0] layer2_quant_load_36;
input  [0:0] layer2_quant_load_37;
input  [0:0] layer2_quant_load_38;
input  [0:0] layer2_quant_load_39;
input  [0:0] layer2_quant_load_40;
input  [0:0] layer2_quant_load_41;
input  [0:0] layer2_quant_load_42;
input  [0:0] layer2_quant_load_43;
input  [0:0] layer2_quant_load_44;
input  [0:0] layer2_quant_load_45;
input  [0:0] layer2_quant_load_46;
input  [0:0] layer2_quant_load_47;
input  [0:0] layer2_quant_load_48;
input  [0:0] layer2_quant_load_49;
input  [0:0] layer2_quant_load_50;
input  [0:0] layer2_quant_load_51;
input  [0:0] layer2_quant_load_52;
input  [0:0] layer2_quant_load_53;
input  [0:0] layer2_quant_load_54;
input  [0:0] layer2_quant_load_55;
input  [0:0] layer2_quant_load_56;
input  [0:0] layer2_quant_load_57;
input  [0:0] layer2_quant_load_58;
input  [0:0] layer2_quant_load_59;
input  [0:0] layer2_quant_load_60;
input  [0:0] layer2_quant_load_61;
input  [0:0] layer2_quant_load_62;
input  [0:0] layer2_quant_load_63;
output  [3:0] layer3_activations_address0;
output   layer3_activations_ce0;
output   layer3_activations_we0;
output  [31:0] layer3_activations_d0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln49_fu_1470_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [9:0] W3_address0;
wire   [0:0] W3_q0;
wire   [9:0] W3_address1;
wire   [0:0] W3_q1;
wire   [9:0] W3_address2;
wire   [0:0] W3_q2;
wire   [9:0] W3_address3;
wire   [0:0] W3_q3;
wire   [9:0] W3_address4;
wire   [0:0] W3_q4;
wire   [9:0] W3_address5;
wire   [0:0] W3_q5;
wire   [9:0] W3_address6;
wire   [0:0] W3_q6;
wire   [9:0] W3_address7;
wire   [0:0] W3_q7;
wire   [9:0] W3_address8;
wire   [0:0] W3_q8;
wire   [9:0] W3_address9;
wire   [0:0] W3_q9;
wire   [9:0] W3_address10;
wire   [0:0] W3_q10;
wire   [9:0] W3_address11;
wire   [0:0] W3_q11;
wire   [9:0] W3_address12;
wire   [0:0] W3_q12;
wire   [9:0] W3_address13;
wire   [0:0] W3_q13;
wire   [9:0] W3_address14;
wire   [0:0] W3_q14;
wire   [9:0] W3_address15;
wire   [0:0] W3_q15;
wire   [9:0] W3_address16;
wire   [0:0] W3_q16;
wire   [9:0] W3_address17;
wire   [0:0] W3_q17;
wire   [9:0] W3_address18;
wire   [0:0] W3_q18;
wire   [9:0] W3_address19;
wire   [0:0] W3_q19;
wire   [9:0] W3_address20;
wire   [0:0] W3_q20;
wire   [9:0] W3_address21;
wire   [0:0] W3_q21;
wire   [9:0] W3_address22;
wire   [0:0] W3_q22;
wire   [9:0] W3_address23;
wire   [0:0] W3_q23;
wire   [9:0] W3_address24;
wire   [0:0] W3_q24;
wire   [9:0] W3_address25;
wire   [0:0] W3_q25;
wire   [9:0] W3_address26;
wire   [0:0] W3_q26;
wire   [9:0] W3_address27;
wire   [0:0] W3_q27;
wire   [9:0] W3_address28;
wire   [0:0] W3_q28;
wire   [9:0] W3_address29;
wire   [0:0] W3_q29;
wire   [9:0] W3_address30;
wire   [0:0] W3_q30;
wire   [9:0] W3_address31;
wire   [0:0] W3_q31;
wire   [9:0] W3_address32;
wire   [0:0] W3_q32;
wire   [9:0] W3_address33;
wire   [0:0] W3_q33;
wire   [9:0] W3_address34;
wire   [0:0] W3_q34;
wire   [9:0] W3_address35;
wire   [0:0] W3_q35;
wire   [9:0] W3_address36;
wire   [0:0] W3_q36;
wire   [9:0] W3_address37;
wire   [0:0] W3_q37;
wire   [9:0] W3_address38;
wire   [0:0] W3_q38;
wire   [9:0] W3_address39;
wire   [0:0] W3_q39;
wire   [9:0] W3_address40;
wire   [0:0] W3_q40;
wire   [9:0] W3_address41;
wire   [0:0] W3_q41;
wire   [9:0] W3_address42;
wire   [0:0] W3_q42;
wire   [9:0] W3_address43;
wire   [0:0] W3_q43;
wire   [9:0] W3_address44;
wire   [0:0] W3_q44;
wire   [9:0] W3_address45;
wire   [0:0] W3_q45;
wire   [9:0] W3_address46;
wire   [0:0] W3_q46;
wire   [9:0] W3_address47;
wire   [0:0] W3_q47;
wire   [9:0] W3_address48;
wire   [0:0] W3_q48;
wire   [9:0] W3_address49;
wire   [0:0] W3_q49;
wire   [9:0] W3_address50;
wire   [0:0] W3_q50;
wire   [9:0] W3_address51;
wire   [0:0] W3_q51;
wire   [9:0] W3_address52;
wire   [0:0] W3_q52;
wire   [9:0] W3_address53;
wire   [0:0] W3_q53;
wire   [9:0] W3_address54;
wire   [0:0] W3_q54;
wire   [9:0] W3_address55;
wire   [0:0] W3_q55;
wire   [9:0] W3_address56;
wire   [0:0] W3_q56;
wire   [9:0] W3_address57;
wire   [0:0] W3_q57;
wire   [9:0] W3_address58;
wire   [0:0] W3_q58;
wire   [9:0] W3_address59;
wire   [0:0] W3_q59;
wire   [9:0] W3_address60;
wire   [0:0] W3_q60;
wire   [9:0] W3_address61;
wire   [0:0] W3_q61;
wire   [9:0] W3_address62;
wire   [0:0] W3_q62;
wire   [9:0] W3_address63;
wire   [0:0] W3_q63;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] x_1_reg_4232;
reg   [3:0] x_1_reg_4232_pp0_iter1_reg;
reg   [3:0] x_1_reg_4232_pp0_iter2_reg;
wire   [3:0] add_ln54_8_fu_3339_p2;
reg   [3:0] add_ln54_8_reg_4561;
wire   [3:0] add_ln54_15_fu_3405_p2;
reg   [3:0] add_ln54_15_reg_4566;
wire   [3:0] add_ln54_23_fu_3471_p2;
reg   [3:0] add_ln54_23_reg_4571;
wire   [3:0] add_ln54_30_fu_3537_p2;
reg   [3:0] add_ln54_30_reg_4576;
wire   [3:0] add_ln54_39_fu_3603_p2;
reg   [3:0] add_ln54_39_reg_4581;
wire   [3:0] add_ln54_46_fu_3669_p2;
reg   [3:0] add_ln54_46_reg_4586;
wire   [3:0] add_ln54_54_fu_3735_p2;
reg   [3:0] add_ln54_54_reg_4591;
wire   [3:0] add_ln54_61_fu_3801_p2;
reg   [3:0] add_ln54_61_reg_4596;
wire   [6:0] cnt_3_fu_3891_p2;
reg   [6:0] cnt_3_reg_4601;
wire   [63:0] zext_ln54_fu_1490_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln54_2_fu_1503_p1;
wire   [63:0] zext_ln54_4_fu_1516_p1;
wire   [63:0] zext_ln54_6_fu_1529_p1;
wire   [63:0] zext_ln54_8_fu_1542_p1;
wire   [63:0] zext_ln54_10_fu_1555_p1;
wire   [63:0] zext_ln54_12_fu_1568_p1;
wire   [63:0] zext_ln54_14_fu_1581_p1;
wire   [63:0] zext_ln54_16_fu_1594_p1;
wire   [63:0] zext_ln54_18_fu_1607_p1;
wire   [63:0] zext_ln54_20_fu_1620_p1;
wire   [63:0] zext_ln54_22_fu_1633_p1;
wire   [63:0] zext_ln54_24_fu_1646_p1;
wire   [63:0] zext_ln54_26_fu_1659_p1;
wire   [63:0] zext_ln54_28_fu_1672_p1;
wire   [63:0] zext_ln54_30_fu_1685_p1;
wire   [63:0] zext_ln54_32_fu_1698_p1;
wire   [63:0] zext_ln54_34_fu_1711_p1;
wire   [63:0] zext_ln54_36_fu_1724_p1;
wire   [63:0] zext_ln54_38_fu_1737_p1;
wire   [63:0] zext_ln54_40_fu_1750_p1;
wire   [63:0] zext_ln54_42_fu_1763_p1;
wire   [63:0] zext_ln54_44_fu_1776_p1;
wire   [63:0] zext_ln54_46_fu_1789_p1;
wire   [63:0] zext_ln54_48_fu_1802_p1;
wire   [63:0] zext_ln54_50_fu_1815_p1;
wire   [63:0] zext_ln54_52_fu_1828_p1;
wire   [63:0] zext_ln54_54_fu_1841_p1;
wire   [63:0] zext_ln54_56_fu_1854_p1;
wire   [63:0] zext_ln54_58_fu_1867_p1;
wire   [63:0] zext_ln54_60_fu_1880_p1;
wire   [63:0] zext_ln54_62_fu_1893_p1;
wire   [63:0] zext_ln54_64_fu_1906_p1;
wire   [63:0] zext_ln54_66_fu_1919_p1;
wire   [63:0] zext_ln54_68_fu_1932_p1;
wire   [63:0] zext_ln54_70_fu_1945_p1;
wire   [63:0] zext_ln54_72_fu_1958_p1;
wire   [63:0] zext_ln54_74_fu_1971_p1;
wire   [63:0] zext_ln54_76_fu_1984_p1;
wire   [63:0] zext_ln54_78_fu_1997_p1;
wire   [63:0] zext_ln54_80_fu_2010_p1;
wire   [63:0] zext_ln54_82_fu_2023_p1;
wire   [63:0] zext_ln54_84_fu_2036_p1;
wire   [63:0] zext_ln54_86_fu_2049_p1;
wire   [63:0] zext_ln54_88_fu_2062_p1;
wire   [63:0] zext_ln54_90_fu_2075_p1;
wire   [63:0] zext_ln54_92_fu_2088_p1;
wire   [63:0] zext_ln54_94_fu_2101_p1;
wire   [63:0] zext_ln54_96_fu_2114_p1;
wire   [63:0] zext_ln54_98_fu_2127_p1;
wire   [63:0] zext_ln54_100_fu_2140_p1;
wire   [63:0] zext_ln54_102_fu_2153_p1;
wire   [63:0] zext_ln54_104_fu_2166_p1;
wire   [63:0] zext_ln54_106_fu_2179_p1;
wire   [63:0] zext_ln54_108_fu_2192_p1;
wire   [63:0] zext_ln54_110_fu_2205_p1;
wire   [63:0] zext_ln54_112_fu_2218_p1;
wire   [63:0] zext_ln54_114_fu_2231_p1;
wire   [63:0] zext_ln54_116_fu_2244_p1;
wire   [63:0] zext_ln54_118_fu_2257_p1;
wire   [63:0] zext_ln54_120_fu_2270_p1;
wire   [63:0] zext_ln54_122_fu_2283_p1;
wire   [63:0] zext_ln54_124_fu_2296_p1;
wire   [63:0] zext_ln54_126_fu_2309_p1;
wire   [63:0] zext_ln49_fu_3897_p1;
reg   [3:0] x_fu_292;
wire   [3:0] add_ln49_2_fu_1476_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_x_1;
reg    W3_ce63_local;
reg    W3_ce62_local;
reg    W3_ce61_local;
reg    W3_ce60_local;
reg    W3_ce59_local;
reg    W3_ce58_local;
reg    W3_ce57_local;
reg    W3_ce56_local;
reg    W3_ce55_local;
reg    W3_ce54_local;
reg    W3_ce53_local;
reg    W3_ce52_local;
reg    W3_ce51_local;
reg    W3_ce50_local;
reg    W3_ce49_local;
reg    W3_ce48_local;
reg    W3_ce47_local;
reg    W3_ce46_local;
reg    W3_ce45_local;
reg    W3_ce44_local;
reg    W3_ce43_local;
reg    W3_ce42_local;
reg    W3_ce41_local;
reg    W3_ce40_local;
reg    W3_ce39_local;
reg    W3_ce38_local;
reg    W3_ce37_local;
reg    W3_ce36_local;
reg    W3_ce35_local;
reg    W3_ce34_local;
reg    W3_ce33_local;
reg    W3_ce32_local;
reg    W3_ce31_local;
reg    W3_ce30_local;
reg    W3_ce29_local;
reg    W3_ce28_local;
reg    W3_ce27_local;
reg    W3_ce26_local;
reg    W3_ce25_local;
reg    W3_ce24_local;
reg    W3_ce23_local;
reg    W3_ce22_local;
reg    W3_ce21_local;
reg    W3_ce20_local;
reg    W3_ce19_local;
reg    W3_ce18_local;
reg    W3_ce17_local;
reg    W3_ce16_local;
reg    W3_ce15_local;
reg    W3_ce14_local;
reg    W3_ce13_local;
reg    W3_ce12_local;
reg    W3_ce11_local;
reg    W3_ce10_local;
reg    W3_ce9_local;
reg    W3_ce8_local;
reg    W3_ce7_local;
reg    W3_ce6_local;
reg    W3_ce5_local;
reg    W3_ce4_local;
reg    W3_ce3_local;
reg    W3_ce2_local;
reg    W3_ce1_local;
reg    W3_ce0_local;
reg    layer3_activations_we0_local;
wire   [31:0] zext_ln51_1_fu_3901_p1;
reg    layer3_activations_ce0_local;
wire   [9:0] tmp_8_fu_1482_p3;
wire   [9:0] or_ln_fu_1495_p3;
wire   [9:0] or_ln54_1_fu_1508_p3;
wire   [9:0] or_ln54_2_fu_1521_p3;
wire   [9:0] or_ln54_3_fu_1534_p3;
wire   [9:0] or_ln54_4_fu_1547_p3;
wire   [9:0] or_ln54_5_fu_1560_p3;
wire   [9:0] or_ln54_6_fu_1573_p3;
wire   [9:0] or_ln54_7_fu_1586_p3;
wire   [9:0] or_ln54_8_fu_1599_p3;
wire   [9:0] or_ln54_9_fu_1612_p3;
wire   [9:0] or_ln54_s_fu_1625_p3;
wire   [9:0] or_ln54_10_fu_1638_p3;
wire   [9:0] or_ln54_11_fu_1651_p3;
wire   [9:0] or_ln54_12_fu_1664_p3;
wire   [9:0] or_ln54_13_fu_1677_p3;
wire   [9:0] or_ln54_14_fu_1690_p3;
wire   [9:0] or_ln54_15_fu_1703_p3;
wire   [9:0] or_ln54_16_fu_1716_p3;
wire   [9:0] or_ln54_17_fu_1729_p3;
wire   [9:0] or_ln54_18_fu_1742_p3;
wire   [9:0] or_ln54_19_fu_1755_p3;
wire   [9:0] or_ln54_20_fu_1768_p3;
wire   [9:0] or_ln54_21_fu_1781_p3;
wire   [9:0] or_ln54_22_fu_1794_p3;
wire   [9:0] or_ln54_23_fu_1807_p3;
wire   [9:0] or_ln54_24_fu_1820_p3;
wire   [9:0] or_ln54_25_fu_1833_p3;
wire   [9:0] or_ln54_26_fu_1846_p3;
wire   [9:0] or_ln54_27_fu_1859_p3;
wire   [9:0] or_ln54_28_fu_1872_p3;
wire   [9:0] or_ln54_29_fu_1885_p3;
wire   [9:0] or_ln54_30_fu_1898_p3;
wire   [9:0] or_ln54_31_fu_1911_p3;
wire   [9:0] or_ln54_32_fu_1924_p3;
wire   [9:0] or_ln54_33_fu_1937_p3;
wire   [9:0] or_ln54_34_fu_1950_p3;
wire   [9:0] or_ln54_35_fu_1963_p3;
wire   [9:0] or_ln54_36_fu_1976_p3;
wire   [9:0] or_ln54_37_fu_1989_p3;
wire   [9:0] or_ln54_38_fu_2002_p3;
wire   [9:0] or_ln54_39_fu_2015_p3;
wire   [9:0] or_ln54_40_fu_2028_p3;
wire   [9:0] or_ln54_41_fu_2041_p3;
wire   [9:0] or_ln54_42_fu_2054_p3;
wire   [9:0] or_ln54_43_fu_2067_p3;
wire   [9:0] or_ln54_44_fu_2080_p3;
wire   [9:0] or_ln54_45_fu_2093_p3;
wire   [9:0] or_ln54_46_fu_2106_p3;
wire   [9:0] or_ln54_47_fu_2119_p3;
wire   [9:0] or_ln54_48_fu_2132_p3;
wire   [9:0] or_ln54_49_fu_2145_p3;
wire   [9:0] or_ln54_50_fu_2158_p3;
wire   [9:0] or_ln54_51_fu_2171_p3;
wire   [9:0] or_ln54_52_fu_2184_p3;
wire   [9:0] or_ln54_53_fu_2197_p3;
wire   [9:0] or_ln54_54_fu_2210_p3;
wire   [9:0] or_ln54_55_fu_2223_p3;
wire   [9:0] or_ln54_56_fu_2236_p3;
wire   [9:0] or_ln54_57_fu_2249_p3;
wire   [9:0] or_ln54_58_fu_2262_p3;
wire   [9:0] or_ln54_59_fu_2275_p3;
wire   [9:0] or_ln54_60_fu_2288_p3;
wire   [9:0] or_ln54_61_fu_2301_p3;
wire   [0:0] xor_ln23_fu_2319_p2;
wire   [0:0] cnt_fu_2324_p2;
wire   [0:0] xor_ln23_3_fu_2334_p2;
wire   [0:0] xor_ln23_4_fu_2339_p2;
wire   [0:0] xor_ln23_5_fu_2349_p2;
wire   [0:0] xor_ln23_6_fu_2354_p2;
wire   [0:0] xor_ln23_7_fu_2364_p2;
wire   [0:0] xor_ln23_8_fu_2369_p2;
wire   [0:0] xor_ln23_9_fu_2379_p2;
wire   [0:0] xor_ln23_10_fu_2384_p2;
wire   [0:0] xor_ln23_11_fu_2394_p2;
wire   [0:0] xor_ln23_12_fu_2399_p2;
wire   [0:0] xor_ln23_13_fu_2409_p2;
wire   [0:0] xor_ln23_14_fu_2414_p2;
wire   [0:0] xor_ln23_15_fu_2424_p2;
wire   [0:0] xor_ln23_16_fu_2429_p2;
wire   [0:0] xor_ln23_17_fu_2439_p2;
wire   [0:0] xor_ln23_18_fu_2444_p2;
wire   [0:0] xor_ln23_19_fu_2454_p2;
wire   [0:0] xor_ln23_20_fu_2459_p2;
wire   [0:0] xor_ln23_21_fu_2469_p2;
wire   [0:0] xor_ln23_22_fu_2474_p2;
wire   [0:0] xor_ln23_23_fu_2484_p2;
wire   [0:0] xor_ln23_24_fu_2489_p2;
wire   [0:0] xor_ln23_25_fu_2499_p2;
wire   [0:0] xor_ln23_26_fu_2504_p2;
wire   [0:0] xor_ln23_27_fu_2514_p2;
wire   [0:0] xor_ln23_28_fu_2519_p2;
wire   [0:0] xor_ln23_29_fu_2529_p2;
wire   [0:0] xor_ln23_30_fu_2534_p2;
wire   [0:0] xor_ln23_31_fu_2544_p2;
wire   [0:0] xor_ln23_32_fu_2549_p2;
wire   [0:0] xor_ln23_33_fu_2559_p2;
wire   [0:0] xor_ln23_34_fu_2564_p2;
wire   [0:0] xor_ln23_35_fu_2574_p2;
wire   [0:0] xor_ln23_36_fu_2579_p2;
wire   [0:0] xor_ln23_37_fu_2589_p2;
wire   [0:0] xor_ln23_38_fu_2594_p2;
wire   [0:0] xor_ln23_39_fu_2604_p2;
wire   [0:0] xor_ln23_40_fu_2609_p2;
wire   [0:0] xor_ln23_41_fu_2619_p2;
wire   [0:0] xor_ln23_42_fu_2624_p2;
wire   [0:0] xor_ln23_43_fu_2634_p2;
wire   [0:0] xor_ln23_44_fu_2639_p2;
wire   [0:0] xor_ln23_45_fu_2649_p2;
wire   [0:0] xor_ln23_46_fu_2654_p2;
wire   [0:0] xor_ln23_47_fu_2664_p2;
wire   [0:0] xor_ln23_48_fu_2669_p2;
wire   [0:0] xor_ln23_49_fu_2679_p2;
wire   [0:0] xor_ln23_50_fu_2684_p2;
wire   [0:0] xor_ln23_51_fu_2694_p2;
wire   [0:0] xor_ln23_52_fu_2699_p2;
wire   [0:0] xor_ln23_53_fu_2709_p2;
wire   [0:0] xor_ln23_54_fu_2714_p2;
wire   [0:0] xor_ln23_55_fu_2724_p2;
wire   [0:0] xor_ln23_56_fu_2729_p2;
wire   [0:0] xor_ln23_57_fu_2739_p2;
wire   [0:0] xor_ln23_58_fu_2744_p2;
wire   [0:0] xor_ln23_59_fu_2754_p2;
wire   [0:0] xor_ln23_60_fu_2759_p2;
wire   [0:0] xor_ln23_61_fu_2769_p2;
wire   [0:0] xor_ln23_62_fu_2774_p2;
wire   [0:0] xor_ln23_63_fu_2784_p2;
wire   [0:0] xor_ln23_64_fu_2789_p2;
wire   [0:0] xor_ln23_65_fu_2799_p2;
wire   [0:0] xor_ln23_66_fu_2804_p2;
wire   [0:0] xor_ln23_67_fu_2814_p2;
wire   [0:0] xor_ln23_68_fu_2819_p2;
wire   [0:0] xor_ln23_69_fu_2829_p2;
wire   [0:0] xor_ln23_70_fu_2834_p2;
wire   [0:0] xor_ln23_71_fu_2844_p2;
wire   [0:0] xor_ln23_72_fu_2849_p2;
wire   [0:0] xor_ln23_73_fu_2859_p2;
wire   [0:0] xor_ln23_74_fu_2864_p2;
wire   [0:0] xor_ln23_75_fu_2874_p2;
wire   [0:0] xor_ln23_76_fu_2879_p2;
wire   [0:0] xor_ln23_77_fu_2889_p2;
wire   [0:0] xor_ln23_78_fu_2894_p2;
wire   [0:0] xor_ln23_79_fu_2904_p2;
wire   [0:0] xor_ln23_80_fu_2909_p2;
wire   [0:0] xor_ln23_81_fu_2919_p2;
wire   [0:0] xor_ln23_82_fu_2924_p2;
wire   [0:0] xor_ln23_83_fu_2934_p2;
wire   [0:0] xor_ln23_84_fu_2939_p2;
wire   [0:0] xor_ln23_85_fu_2949_p2;
wire   [0:0] xor_ln23_86_fu_2954_p2;
wire   [0:0] xor_ln23_87_fu_2964_p2;
wire   [0:0] xor_ln23_88_fu_2969_p2;
wire   [0:0] xor_ln23_89_fu_2979_p2;
wire   [0:0] xor_ln23_90_fu_2984_p2;
wire   [0:0] xor_ln23_91_fu_2994_p2;
wire   [0:0] xor_ln23_92_fu_2999_p2;
wire   [0:0] xor_ln23_93_fu_3009_p2;
wire   [0:0] xor_ln23_94_fu_3014_p2;
wire   [0:0] xor_ln23_95_fu_3024_p2;
wire   [0:0] xor_ln23_96_fu_3029_p2;
wire   [0:0] xor_ln23_97_fu_3039_p2;
wire   [0:0] xor_ln23_98_fu_3044_p2;
wire   [0:0] xor_ln23_99_fu_3054_p2;
wire   [0:0] xor_ln23_100_fu_3059_p2;
wire   [0:0] xor_ln23_101_fu_3069_p2;
wire   [0:0] xor_ln23_102_fu_3074_p2;
wire   [0:0] xor_ln23_103_fu_3084_p2;
wire   [0:0] xor_ln23_104_fu_3089_p2;
wire   [0:0] xor_ln23_105_fu_3099_p2;
wire   [0:0] xor_ln23_106_fu_3104_p2;
wire   [0:0] xor_ln23_107_fu_3114_p2;
wire   [0:0] xor_ln23_108_fu_3119_p2;
wire   [0:0] xor_ln23_109_fu_3129_p2;
wire   [0:0] xor_ln23_110_fu_3134_p2;
wire   [0:0] xor_ln23_111_fu_3144_p2;
wire   [0:0] xor_ln23_112_fu_3149_p2;
wire   [0:0] xor_ln23_113_fu_3159_p2;
wire   [0:0] xor_ln23_114_fu_3164_p2;
wire   [0:0] xor_ln23_115_fu_3174_p2;
wire   [0:0] xor_ln23_116_fu_3179_p2;
wire   [0:0] xor_ln23_117_fu_3189_p2;
wire   [0:0] xor_ln23_118_fu_3194_p2;
wire   [0:0] xor_ln23_119_fu_3204_p2;
wire   [0:0] xor_ln23_120_fu_3209_p2;
wire   [0:0] xor_ln23_121_fu_3219_p2;
wire   [0:0] xor_ln23_122_fu_3224_p2;
wire   [0:0] xor_ln23_123_fu_3234_p2;
wire   [0:0] xor_ln23_124_fu_3239_p2;
wire   [0:0] xor_ln23_125_fu_3249_p2;
wire   [0:0] xor_ln23_126_fu_3254_p2;
wire   [0:0] xor_ln23_127_fu_3264_p2;
wire   [0:0] xor_ln23_128_fu_3269_p2;
wire   [1:0] zext_ln54_3_fu_2345_p1;
wire   [1:0] zext_ln51_fu_2330_p1;
wire   [1:0] add_ln54_fu_3279_p2;
wire   [1:0] zext_ln54_5_fu_2360_p1;
wire   [1:0] zext_ln54_7_fu_2375_p1;
wire   [1:0] add_ln54_3_fu_3289_p2;
wire   [2:0] zext_ln54_129_fu_3295_p1;
wire   [2:0] zext_ln54_128_fu_3285_p1;
wire   [2:0] add_ln54_4_fu_3299_p2;
wire   [1:0] zext_ln54_9_fu_2390_p1;
wire   [1:0] zext_ln54_11_fu_2405_p1;
wire   [1:0] add_ln54_5_fu_3309_p2;
wire   [1:0] zext_ln54_13_fu_2420_p1;
wire   [1:0] zext_ln54_15_fu_2435_p1;
wire   [1:0] add_ln54_6_fu_3319_p2;
wire   [2:0] zext_ln54_132_fu_3325_p1;
wire   [2:0] zext_ln54_131_fu_3315_p1;
wire   [2:0] add_ln54_7_fu_3329_p2;
wire   [3:0] zext_ln54_133_fu_3335_p1;
wire   [3:0] zext_ln54_130_fu_3305_p1;
wire   [1:0] zext_ln54_17_fu_2450_p1;
wire   [1:0] zext_ln54_19_fu_2465_p1;
wire   [1:0] add_ln54_9_fu_3345_p2;
wire   [1:0] zext_ln54_21_fu_2480_p1;
wire   [1:0] zext_ln54_23_fu_2495_p1;
wire   [1:0] add_ln54_10_fu_3355_p2;
wire   [2:0] zext_ln54_136_fu_3361_p1;
wire   [2:0] zext_ln54_135_fu_3351_p1;
wire   [2:0] add_ln54_11_fu_3365_p2;
wire   [1:0] zext_ln54_25_fu_2510_p1;
wire   [1:0] zext_ln54_27_fu_2525_p1;
wire   [1:0] add_ln54_12_fu_3375_p2;
wire   [1:0] zext_ln54_29_fu_2540_p1;
wire   [1:0] zext_ln54_31_fu_2555_p1;
wire   [1:0] add_ln54_13_fu_3385_p2;
wire   [2:0] zext_ln54_139_fu_3391_p1;
wire   [2:0] zext_ln54_138_fu_3381_p1;
wire   [2:0] add_ln54_14_fu_3395_p2;
wire   [3:0] zext_ln54_140_fu_3401_p1;
wire   [3:0] zext_ln54_137_fu_3371_p1;
wire   [1:0] zext_ln54_33_fu_2570_p1;
wire   [1:0] zext_ln54_35_fu_2585_p1;
wire   [1:0] add_ln54_17_fu_3411_p2;
wire   [1:0] zext_ln54_37_fu_2600_p1;
wire   [1:0] zext_ln54_39_fu_2615_p1;
wire   [1:0] add_ln54_18_fu_3421_p2;
wire   [2:0] zext_ln54_144_fu_3427_p1;
wire   [2:0] zext_ln54_143_fu_3417_p1;
wire   [2:0] add_ln54_19_fu_3431_p2;
wire   [1:0] zext_ln54_41_fu_2630_p1;
wire   [1:0] zext_ln54_43_fu_2645_p1;
wire   [1:0] add_ln54_20_fu_3441_p2;
wire   [1:0] zext_ln54_45_fu_2660_p1;
wire   [1:0] zext_ln54_47_fu_2675_p1;
wire   [1:0] add_ln54_21_fu_3451_p2;
wire   [2:0] zext_ln54_147_fu_3457_p1;
wire   [2:0] zext_ln54_146_fu_3447_p1;
wire   [2:0] add_ln54_22_fu_3461_p2;
wire   [3:0] zext_ln54_148_fu_3467_p1;
wire   [3:0] zext_ln54_145_fu_3437_p1;
wire   [1:0] zext_ln54_49_fu_2690_p1;
wire   [1:0] zext_ln54_51_fu_2705_p1;
wire   [1:0] add_ln54_24_fu_3477_p2;
wire   [1:0] zext_ln54_53_fu_2720_p1;
wire   [1:0] zext_ln54_55_fu_2735_p1;
wire   [1:0] add_ln54_25_fu_3487_p2;
wire   [2:0] zext_ln54_151_fu_3493_p1;
wire   [2:0] zext_ln54_150_fu_3483_p1;
wire   [2:0] add_ln54_26_fu_3497_p2;
wire   [1:0] zext_ln54_57_fu_2750_p1;
wire   [1:0] zext_ln54_59_fu_2765_p1;
wire   [1:0] add_ln54_27_fu_3507_p2;
wire   [1:0] zext_ln54_61_fu_2780_p1;
wire   [1:0] zext_ln54_63_fu_2795_p1;
wire   [1:0] add_ln54_28_fu_3517_p2;
wire   [2:0] zext_ln54_154_fu_3523_p1;
wire   [2:0] zext_ln54_153_fu_3513_p1;
wire   [2:0] add_ln54_29_fu_3527_p2;
wire   [3:0] zext_ln54_155_fu_3533_p1;
wire   [3:0] zext_ln54_152_fu_3503_p1;
wire   [1:0] zext_ln54_65_fu_2810_p1;
wire   [1:0] zext_ln54_67_fu_2825_p1;
wire   [1:0] add_ln54_33_fu_3543_p2;
wire   [1:0] zext_ln54_69_fu_2840_p1;
wire   [1:0] zext_ln54_71_fu_2855_p1;
wire   [1:0] add_ln54_34_fu_3553_p2;
wire   [2:0] zext_ln54_160_fu_3559_p1;
wire   [2:0] zext_ln54_159_fu_3549_p1;
wire   [2:0] add_ln54_35_fu_3563_p2;
wire   [1:0] zext_ln54_73_fu_2870_p1;
wire   [1:0] zext_ln54_75_fu_2885_p1;
wire   [1:0] add_ln54_36_fu_3573_p2;
wire   [1:0] zext_ln54_77_fu_2900_p1;
wire   [1:0] zext_ln54_79_fu_2915_p1;
wire   [1:0] add_ln54_37_fu_3583_p2;
wire   [2:0] zext_ln54_163_fu_3589_p1;
wire   [2:0] zext_ln54_162_fu_3579_p1;
wire   [2:0] add_ln54_38_fu_3593_p2;
wire   [3:0] zext_ln54_164_fu_3599_p1;
wire   [3:0] zext_ln54_161_fu_3569_p1;
wire   [1:0] zext_ln54_81_fu_2930_p1;
wire   [1:0] zext_ln54_83_fu_2945_p1;
wire   [1:0] add_ln54_40_fu_3609_p2;
wire   [1:0] zext_ln54_85_fu_2960_p1;
wire   [1:0] zext_ln54_87_fu_2975_p1;
wire   [1:0] add_ln54_41_fu_3619_p2;
wire   [2:0] zext_ln54_167_fu_3625_p1;
wire   [2:0] zext_ln54_166_fu_3615_p1;
wire   [2:0] add_ln54_42_fu_3629_p2;
wire   [1:0] zext_ln54_89_fu_2990_p1;
wire   [1:0] zext_ln54_91_fu_3005_p1;
wire   [1:0] add_ln54_43_fu_3639_p2;
wire   [1:0] zext_ln54_93_fu_3020_p1;
wire   [1:0] zext_ln54_95_fu_3035_p1;
wire   [1:0] add_ln54_44_fu_3649_p2;
wire   [2:0] zext_ln54_170_fu_3655_p1;
wire   [2:0] zext_ln54_169_fu_3645_p1;
wire   [2:0] add_ln54_45_fu_3659_p2;
wire   [3:0] zext_ln54_171_fu_3665_p1;
wire   [3:0] zext_ln54_168_fu_3635_p1;
wire   [1:0] zext_ln54_97_fu_3050_p1;
wire   [1:0] zext_ln54_99_fu_3065_p1;
wire   [1:0] add_ln54_48_fu_3675_p2;
wire   [1:0] zext_ln54_101_fu_3080_p1;
wire   [1:0] zext_ln54_103_fu_3095_p1;
wire   [1:0] add_ln54_49_fu_3685_p2;
wire   [2:0] zext_ln54_175_fu_3691_p1;
wire   [2:0] zext_ln54_174_fu_3681_p1;
wire   [2:0] add_ln54_50_fu_3695_p2;
wire   [1:0] zext_ln54_105_fu_3110_p1;
wire   [1:0] zext_ln54_107_fu_3125_p1;
wire   [1:0] add_ln54_51_fu_3705_p2;
wire   [1:0] zext_ln54_109_fu_3140_p1;
wire   [1:0] zext_ln54_111_fu_3155_p1;
wire   [1:0] add_ln54_52_fu_3715_p2;
wire   [2:0] zext_ln54_178_fu_3721_p1;
wire   [2:0] zext_ln54_177_fu_3711_p1;
wire   [2:0] add_ln54_53_fu_3725_p2;
wire   [3:0] zext_ln54_179_fu_3731_p1;
wire   [3:0] zext_ln54_176_fu_3701_p1;
wire   [1:0] zext_ln54_113_fu_3170_p1;
wire   [1:0] zext_ln54_115_fu_3185_p1;
wire   [1:0] add_ln54_55_fu_3741_p2;
wire   [1:0] zext_ln54_117_fu_3200_p1;
wire   [1:0] zext_ln54_119_fu_3215_p1;
wire   [1:0] add_ln54_56_fu_3751_p2;
wire   [2:0] zext_ln54_182_fu_3757_p1;
wire   [2:0] zext_ln54_181_fu_3747_p1;
wire   [2:0] add_ln54_57_fu_3761_p2;
wire   [1:0] zext_ln54_121_fu_3230_p1;
wire   [1:0] zext_ln54_123_fu_3245_p1;
wire   [1:0] add_ln54_58_fu_3771_p2;
wire   [1:0] zext_ln54_125_fu_3260_p1;
wire   [1:0] zext_ln54_127_fu_3275_p1;
wire   [1:0] add_ln54_59_fu_3781_p2;
wire   [2:0] zext_ln54_185_fu_3787_p1;
wire   [2:0] zext_ln54_184_fu_3777_p1;
wire   [2:0] add_ln54_60_fu_3791_p2;
wire   [3:0] zext_ln54_186_fu_3797_p1;
wire   [3:0] zext_ln54_183_fu_3767_p1;
wire   [4:0] zext_ln54_141_fu_3810_p1;
wire   [4:0] zext_ln54_134_fu_3807_p1;
wire   [4:0] add_ln54_16_fu_3813_p2;
wire   [4:0] zext_ln54_156_fu_3826_p1;
wire   [4:0] zext_ln54_149_fu_3823_p1;
wire   [4:0] add_ln54_31_fu_3829_p2;
wire   [5:0] zext_ln54_157_fu_3835_p1;
wire   [5:0] zext_ln54_142_fu_3819_p1;
wire   [5:0] add_ln54_32_fu_3839_p2;
wire   [4:0] zext_ln54_172_fu_3852_p1;
wire   [4:0] zext_ln54_165_fu_3849_p1;
wire   [4:0] add_ln54_47_fu_3855_p2;
wire   [4:0] zext_ln54_187_fu_3868_p1;
wire   [4:0] zext_ln54_180_fu_3865_p1;
wire   [4:0] add_ln54_62_fu_3871_p2;
wire   [5:0] zext_ln54_188_fu_3877_p1;
wire   [5:0] zext_ln54_173_fu_3861_p1;
wire   [5:0] add_ln54_63_fu_3881_p2;
wire   [6:0] zext_ln54_189_fu_3887_p1;
wire   [6:0] zext_ln54_158_fu_3845_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 x_fu_292 = 4'd0;
#0 ap_done_reg = 1'b0;
end

feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_49_1_W3_ROM_AUTO_1R #(
    .DataWidth( 1 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
W3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W3_address0),
    .ce0(W3_ce0_local),
    .q0(W3_q0),
    .address1(W3_address1),
    .ce1(W3_ce1_local),
    .q1(W3_q1),
    .address2(W3_address2),
    .ce2(W3_ce2_local),
    .q2(W3_q2),
    .address3(W3_address3),
    .ce3(W3_ce3_local),
    .q3(W3_q3),
    .address4(W3_address4),
    .ce4(W3_ce4_local),
    .q4(W3_q4),
    .address5(W3_address5),
    .ce5(W3_ce5_local),
    .q5(W3_q5),
    .address6(W3_address6),
    .ce6(W3_ce6_local),
    .q6(W3_q6),
    .address7(W3_address7),
    .ce7(W3_ce7_local),
    .q7(W3_q7),
    .address8(W3_address8),
    .ce8(W3_ce8_local),
    .q8(W3_q8),
    .address9(W3_address9),
    .ce9(W3_ce9_local),
    .q9(W3_q9),
    .address10(W3_address10),
    .ce10(W3_ce10_local),
    .q10(W3_q10),
    .address11(W3_address11),
    .ce11(W3_ce11_local),
    .q11(W3_q11),
    .address12(W3_address12),
    .ce12(W3_ce12_local),
    .q12(W3_q12),
    .address13(W3_address13),
    .ce13(W3_ce13_local),
    .q13(W3_q13),
    .address14(W3_address14),
    .ce14(W3_ce14_local),
    .q14(W3_q14),
    .address15(W3_address15),
    .ce15(W3_ce15_local),
    .q15(W3_q15),
    .address16(W3_address16),
    .ce16(W3_ce16_local),
    .q16(W3_q16),
    .address17(W3_address17),
    .ce17(W3_ce17_local),
    .q17(W3_q17),
    .address18(W3_address18),
    .ce18(W3_ce18_local),
    .q18(W3_q18),
    .address19(W3_address19),
    .ce19(W3_ce19_local),
    .q19(W3_q19),
    .address20(W3_address20),
    .ce20(W3_ce20_local),
    .q20(W3_q20),
    .address21(W3_address21),
    .ce21(W3_ce21_local),
    .q21(W3_q21),
    .address22(W3_address22),
    .ce22(W3_ce22_local),
    .q22(W3_q22),
    .address23(W3_address23),
    .ce23(W3_ce23_local),
    .q23(W3_q23),
    .address24(W3_address24),
    .ce24(W3_ce24_local),
    .q24(W3_q24),
    .address25(W3_address25),
    .ce25(W3_ce25_local),
    .q25(W3_q25),
    .address26(W3_address26),
    .ce26(W3_ce26_local),
    .q26(W3_q26),
    .address27(W3_address27),
    .ce27(W3_ce27_local),
    .q27(W3_q27),
    .address28(W3_address28),
    .ce28(W3_ce28_local),
    .q28(W3_q28),
    .address29(W3_address29),
    .ce29(W3_ce29_local),
    .q29(W3_q29),
    .address30(W3_address30),
    .ce30(W3_ce30_local),
    .q30(W3_q30),
    .address31(W3_address31),
    .ce31(W3_ce31_local),
    .q31(W3_q31),
    .address32(W3_address32),
    .ce32(W3_ce32_local),
    .q32(W3_q32),
    .address33(W3_address33),
    .ce33(W3_ce33_local),
    .q33(W3_q33),
    .address34(W3_address34),
    .ce34(W3_ce34_local),
    .q34(W3_q34),
    .address35(W3_address35),
    .ce35(W3_ce35_local),
    .q35(W3_q35),
    .address36(W3_address36),
    .ce36(W3_ce36_local),
    .q36(W3_q36),
    .address37(W3_address37),
    .ce37(W3_ce37_local),
    .q37(W3_q37),
    .address38(W3_address38),
    .ce38(W3_ce38_local),
    .q38(W3_q38),
    .address39(W3_address39),
    .ce39(W3_ce39_local),
    .q39(W3_q39),
    .address40(W3_address40),
    .ce40(W3_ce40_local),
    .q40(W3_q40),
    .address41(W3_address41),
    .ce41(W3_ce41_local),
    .q41(W3_q41),
    .address42(W3_address42),
    .ce42(W3_ce42_local),
    .q42(W3_q42),
    .address43(W3_address43),
    .ce43(W3_ce43_local),
    .q43(W3_q43),
    .address44(W3_address44),
    .ce44(W3_ce44_local),
    .q44(W3_q44),
    .address45(W3_address45),
    .ce45(W3_ce45_local),
    .q45(W3_q45),
    .address46(W3_address46),
    .ce46(W3_ce46_local),
    .q46(W3_q46),
    .address47(W3_address47),
    .ce47(W3_ce47_local),
    .q47(W3_q47),
    .address48(W3_address48),
    .ce48(W3_ce48_local),
    .q48(W3_q48),
    .address49(W3_address49),
    .ce49(W3_ce49_local),
    .q49(W3_q49),
    .address50(W3_address50),
    .ce50(W3_ce50_local),
    .q50(W3_q50),
    .address51(W3_address51),
    .ce51(W3_ce51_local),
    .q51(W3_q51),
    .address52(W3_address52),
    .ce52(W3_ce52_local),
    .q52(W3_q52),
    .address53(W3_address53),
    .ce53(W3_ce53_local),
    .q53(W3_q53),
    .address54(W3_address54),
    .ce54(W3_ce54_local),
    .q54(W3_q54),
    .address55(W3_address55),
    .ce55(W3_ce55_local),
    .q55(W3_q55),
    .address56(W3_address56),
    .ce56(W3_ce56_local),
    .q56(W3_q56),
    .address57(W3_address57),
    .ce57(W3_ce57_local),
    .q57(W3_q57),
    .address58(W3_address58),
    .ce58(W3_ce58_local),
    .q58(W3_q58),
    .address59(W3_address59),
    .ce59(W3_ce59_local),
    .q59(W3_q59),
    .address60(W3_address60),
    .ce60(W3_ce60_local),
    .q60(W3_q60),
    .address61(W3_address61),
    .ce61(W3_ce61_local),
    .q61(W3_q61),
    .address62(W3_address62),
    .ce62(W3_ce62_local),
    .q62(W3_q62),
    .address63(W3_address63),
    .ce63(W3_ce63_local),
    .q63(W3_q63)
);

feedforward_burst_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln49_fu_1470_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_292 <= add_ln49_2_fu_1476_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_292 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln54_15_reg_4566 <= add_ln54_15_fu_3405_p2;
        add_ln54_23_reg_4571 <= add_ln54_23_fu_3471_p2;
        add_ln54_30_reg_4576 <= add_ln54_30_fu_3537_p2;
        add_ln54_39_reg_4581 <= add_ln54_39_fu_3603_p2;
        add_ln54_46_reg_4586 <= add_ln54_46_fu_3669_p2;
        add_ln54_54_reg_4591 <= add_ln54_54_fu_3735_p2;
        add_ln54_61_reg_4596 <= add_ln54_61_fu_3801_p2;
        add_ln54_8_reg_4561 <= add_ln54_8_fu_3339_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        x_1_reg_4232 <= ap_sig_allocacmp_x_1;
        x_1_reg_4232_pp0_iter1_reg <= x_1_reg_4232;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        cnt_3_reg_4601 <= cnt_3_fu_3891_p2;
        x_1_reg_4232_pp0_iter2_reg <= x_1_reg_4232_pp0_iter1_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce0_local = 1'b1;
    end else begin
        W3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce10_local = 1'b1;
    end else begin
        W3_ce10_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce11_local = 1'b1;
    end else begin
        W3_ce11_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce12_local = 1'b1;
    end else begin
        W3_ce12_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce13_local = 1'b1;
    end else begin
        W3_ce13_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce14_local = 1'b1;
    end else begin
        W3_ce14_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce15_local = 1'b1;
    end else begin
        W3_ce15_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce16_local = 1'b1;
    end else begin
        W3_ce16_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce17_local = 1'b1;
    end else begin
        W3_ce17_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce18_local = 1'b1;
    end else begin
        W3_ce18_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce19_local = 1'b1;
    end else begin
        W3_ce19_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce1_local = 1'b1;
    end else begin
        W3_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce20_local = 1'b1;
    end else begin
        W3_ce20_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce21_local = 1'b1;
    end else begin
        W3_ce21_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce22_local = 1'b1;
    end else begin
        W3_ce22_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce23_local = 1'b1;
    end else begin
        W3_ce23_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce24_local = 1'b1;
    end else begin
        W3_ce24_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce25_local = 1'b1;
    end else begin
        W3_ce25_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce26_local = 1'b1;
    end else begin
        W3_ce26_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce27_local = 1'b1;
    end else begin
        W3_ce27_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce28_local = 1'b1;
    end else begin
        W3_ce28_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce29_local = 1'b1;
    end else begin
        W3_ce29_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce2_local = 1'b1;
    end else begin
        W3_ce2_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce30_local = 1'b1;
    end else begin
        W3_ce30_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce31_local = 1'b1;
    end else begin
        W3_ce31_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce32_local = 1'b1;
    end else begin
        W3_ce32_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce33_local = 1'b1;
    end else begin
        W3_ce33_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce34_local = 1'b1;
    end else begin
        W3_ce34_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce35_local = 1'b1;
    end else begin
        W3_ce35_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce36_local = 1'b1;
    end else begin
        W3_ce36_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce37_local = 1'b1;
    end else begin
        W3_ce37_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce38_local = 1'b1;
    end else begin
        W3_ce38_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce39_local = 1'b1;
    end else begin
        W3_ce39_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce3_local = 1'b1;
    end else begin
        W3_ce3_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce40_local = 1'b1;
    end else begin
        W3_ce40_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce41_local = 1'b1;
    end else begin
        W3_ce41_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce42_local = 1'b1;
    end else begin
        W3_ce42_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce43_local = 1'b1;
    end else begin
        W3_ce43_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce44_local = 1'b1;
    end else begin
        W3_ce44_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce45_local = 1'b1;
    end else begin
        W3_ce45_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce46_local = 1'b1;
    end else begin
        W3_ce46_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce47_local = 1'b1;
    end else begin
        W3_ce47_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce48_local = 1'b1;
    end else begin
        W3_ce48_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce49_local = 1'b1;
    end else begin
        W3_ce49_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce4_local = 1'b1;
    end else begin
        W3_ce4_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce50_local = 1'b1;
    end else begin
        W3_ce50_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce51_local = 1'b1;
    end else begin
        W3_ce51_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce52_local = 1'b1;
    end else begin
        W3_ce52_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce53_local = 1'b1;
    end else begin
        W3_ce53_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce54_local = 1'b1;
    end else begin
        W3_ce54_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce55_local = 1'b1;
    end else begin
        W3_ce55_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce56_local = 1'b1;
    end else begin
        W3_ce56_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce57_local = 1'b1;
    end else begin
        W3_ce57_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce58_local = 1'b1;
    end else begin
        W3_ce58_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce59_local = 1'b1;
    end else begin
        W3_ce59_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce5_local = 1'b1;
    end else begin
        W3_ce5_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce60_local = 1'b1;
    end else begin
        W3_ce60_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce61_local = 1'b1;
    end else begin
        W3_ce61_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce62_local = 1'b1;
    end else begin
        W3_ce62_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce63_local = 1'b1;
    end else begin
        W3_ce63_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce6_local = 1'b1;
    end else begin
        W3_ce6_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce7_local = 1'b1;
    end else begin
        W3_ce7_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce8_local = 1'b1;
    end else begin
        W3_ce8_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_ce9_local = 1'b1;
    end else begin
        W3_ce9_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln49_fu_1470_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_292;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer3_activations_ce0_local = 1'b1;
    end else begin
        layer3_activations_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer3_activations_we0_local = 1'b1;
    end else begin
        layer3_activations_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W3_address0 = zext_ln54_126_fu_2309_p1;

assign W3_address1 = zext_ln54_124_fu_2296_p1;

assign W3_address10 = zext_ln54_106_fu_2179_p1;

assign W3_address11 = zext_ln54_104_fu_2166_p1;

assign W3_address12 = zext_ln54_102_fu_2153_p1;

assign W3_address13 = zext_ln54_100_fu_2140_p1;

assign W3_address14 = zext_ln54_98_fu_2127_p1;

assign W3_address15 = zext_ln54_96_fu_2114_p1;

assign W3_address16 = zext_ln54_94_fu_2101_p1;

assign W3_address17 = zext_ln54_92_fu_2088_p1;

assign W3_address18 = zext_ln54_90_fu_2075_p1;

assign W3_address19 = zext_ln54_88_fu_2062_p1;

assign W3_address2 = zext_ln54_122_fu_2283_p1;

assign W3_address20 = zext_ln54_86_fu_2049_p1;

assign W3_address21 = zext_ln54_84_fu_2036_p1;

assign W3_address22 = zext_ln54_82_fu_2023_p1;

assign W3_address23 = zext_ln54_80_fu_2010_p1;

assign W3_address24 = zext_ln54_78_fu_1997_p1;

assign W3_address25 = zext_ln54_76_fu_1984_p1;

assign W3_address26 = zext_ln54_74_fu_1971_p1;

assign W3_address27 = zext_ln54_72_fu_1958_p1;

assign W3_address28 = zext_ln54_70_fu_1945_p1;

assign W3_address29 = zext_ln54_68_fu_1932_p1;

assign W3_address3 = zext_ln54_120_fu_2270_p1;

assign W3_address30 = zext_ln54_66_fu_1919_p1;

assign W3_address31 = zext_ln54_64_fu_1906_p1;

assign W3_address32 = zext_ln54_62_fu_1893_p1;

assign W3_address33 = zext_ln54_60_fu_1880_p1;

assign W3_address34 = zext_ln54_58_fu_1867_p1;

assign W3_address35 = zext_ln54_56_fu_1854_p1;

assign W3_address36 = zext_ln54_54_fu_1841_p1;

assign W3_address37 = zext_ln54_52_fu_1828_p1;

assign W3_address38 = zext_ln54_50_fu_1815_p1;

assign W3_address39 = zext_ln54_48_fu_1802_p1;

assign W3_address4 = zext_ln54_118_fu_2257_p1;

assign W3_address40 = zext_ln54_46_fu_1789_p1;

assign W3_address41 = zext_ln54_44_fu_1776_p1;

assign W3_address42 = zext_ln54_42_fu_1763_p1;

assign W3_address43 = zext_ln54_40_fu_1750_p1;

assign W3_address44 = zext_ln54_38_fu_1737_p1;

assign W3_address45 = zext_ln54_36_fu_1724_p1;

assign W3_address46 = zext_ln54_34_fu_1711_p1;

assign W3_address47 = zext_ln54_32_fu_1698_p1;

assign W3_address48 = zext_ln54_30_fu_1685_p1;

assign W3_address49 = zext_ln54_28_fu_1672_p1;

assign W3_address5 = zext_ln54_116_fu_2244_p1;

assign W3_address50 = zext_ln54_26_fu_1659_p1;

assign W3_address51 = zext_ln54_24_fu_1646_p1;

assign W3_address52 = zext_ln54_22_fu_1633_p1;

assign W3_address53 = zext_ln54_20_fu_1620_p1;

assign W3_address54 = zext_ln54_18_fu_1607_p1;

assign W3_address55 = zext_ln54_16_fu_1594_p1;

assign W3_address56 = zext_ln54_14_fu_1581_p1;

assign W3_address57 = zext_ln54_12_fu_1568_p1;

assign W3_address58 = zext_ln54_10_fu_1555_p1;

assign W3_address59 = zext_ln54_8_fu_1542_p1;

assign W3_address6 = zext_ln54_114_fu_2231_p1;

assign W3_address60 = zext_ln54_6_fu_1529_p1;

assign W3_address61 = zext_ln54_4_fu_1516_p1;

assign W3_address62 = zext_ln54_2_fu_1503_p1;

assign W3_address63 = zext_ln54_fu_1490_p1;

assign W3_address7 = zext_ln54_112_fu_2218_p1;

assign W3_address8 = zext_ln54_110_fu_2205_p1;

assign W3_address9 = zext_ln54_108_fu_2192_p1;

assign add_ln49_2_fu_1476_p2 = (ap_sig_allocacmp_x_1 + 4'd1);

assign add_ln54_10_fu_3355_p2 = (zext_ln54_21_fu_2480_p1 + zext_ln54_23_fu_2495_p1);

assign add_ln54_11_fu_3365_p2 = (zext_ln54_136_fu_3361_p1 + zext_ln54_135_fu_3351_p1);

assign add_ln54_12_fu_3375_p2 = (zext_ln54_25_fu_2510_p1 + zext_ln54_27_fu_2525_p1);

assign add_ln54_13_fu_3385_p2 = (zext_ln54_29_fu_2540_p1 + zext_ln54_31_fu_2555_p1);

assign add_ln54_14_fu_3395_p2 = (zext_ln54_139_fu_3391_p1 + zext_ln54_138_fu_3381_p1);

assign add_ln54_15_fu_3405_p2 = (zext_ln54_140_fu_3401_p1 + zext_ln54_137_fu_3371_p1);

assign add_ln54_16_fu_3813_p2 = (zext_ln54_141_fu_3810_p1 + zext_ln54_134_fu_3807_p1);

assign add_ln54_17_fu_3411_p2 = (zext_ln54_33_fu_2570_p1 + zext_ln54_35_fu_2585_p1);

assign add_ln54_18_fu_3421_p2 = (zext_ln54_37_fu_2600_p1 + zext_ln54_39_fu_2615_p1);

assign add_ln54_19_fu_3431_p2 = (zext_ln54_144_fu_3427_p1 + zext_ln54_143_fu_3417_p1);

assign add_ln54_20_fu_3441_p2 = (zext_ln54_41_fu_2630_p1 + zext_ln54_43_fu_2645_p1);

assign add_ln54_21_fu_3451_p2 = (zext_ln54_45_fu_2660_p1 + zext_ln54_47_fu_2675_p1);

assign add_ln54_22_fu_3461_p2 = (zext_ln54_147_fu_3457_p1 + zext_ln54_146_fu_3447_p1);

assign add_ln54_23_fu_3471_p2 = (zext_ln54_148_fu_3467_p1 + zext_ln54_145_fu_3437_p1);

assign add_ln54_24_fu_3477_p2 = (zext_ln54_49_fu_2690_p1 + zext_ln54_51_fu_2705_p1);

assign add_ln54_25_fu_3487_p2 = (zext_ln54_53_fu_2720_p1 + zext_ln54_55_fu_2735_p1);

assign add_ln54_26_fu_3497_p2 = (zext_ln54_151_fu_3493_p1 + zext_ln54_150_fu_3483_p1);

assign add_ln54_27_fu_3507_p2 = (zext_ln54_57_fu_2750_p1 + zext_ln54_59_fu_2765_p1);

assign add_ln54_28_fu_3517_p2 = (zext_ln54_61_fu_2780_p1 + zext_ln54_63_fu_2795_p1);

assign add_ln54_29_fu_3527_p2 = (zext_ln54_154_fu_3523_p1 + zext_ln54_153_fu_3513_p1);

assign add_ln54_30_fu_3537_p2 = (zext_ln54_155_fu_3533_p1 + zext_ln54_152_fu_3503_p1);

assign add_ln54_31_fu_3829_p2 = (zext_ln54_156_fu_3826_p1 + zext_ln54_149_fu_3823_p1);

assign add_ln54_32_fu_3839_p2 = (zext_ln54_157_fu_3835_p1 + zext_ln54_142_fu_3819_p1);

assign add_ln54_33_fu_3543_p2 = (zext_ln54_65_fu_2810_p1 + zext_ln54_67_fu_2825_p1);

assign add_ln54_34_fu_3553_p2 = (zext_ln54_69_fu_2840_p1 + zext_ln54_71_fu_2855_p1);

assign add_ln54_35_fu_3563_p2 = (zext_ln54_160_fu_3559_p1 + zext_ln54_159_fu_3549_p1);

assign add_ln54_36_fu_3573_p2 = (zext_ln54_73_fu_2870_p1 + zext_ln54_75_fu_2885_p1);

assign add_ln54_37_fu_3583_p2 = (zext_ln54_77_fu_2900_p1 + zext_ln54_79_fu_2915_p1);

assign add_ln54_38_fu_3593_p2 = (zext_ln54_163_fu_3589_p1 + zext_ln54_162_fu_3579_p1);

assign add_ln54_39_fu_3603_p2 = (zext_ln54_164_fu_3599_p1 + zext_ln54_161_fu_3569_p1);

assign add_ln54_3_fu_3289_p2 = (zext_ln54_5_fu_2360_p1 + zext_ln54_7_fu_2375_p1);

assign add_ln54_40_fu_3609_p2 = (zext_ln54_81_fu_2930_p1 + zext_ln54_83_fu_2945_p1);

assign add_ln54_41_fu_3619_p2 = (zext_ln54_85_fu_2960_p1 + zext_ln54_87_fu_2975_p1);

assign add_ln54_42_fu_3629_p2 = (zext_ln54_167_fu_3625_p1 + zext_ln54_166_fu_3615_p1);

assign add_ln54_43_fu_3639_p2 = (zext_ln54_89_fu_2990_p1 + zext_ln54_91_fu_3005_p1);

assign add_ln54_44_fu_3649_p2 = (zext_ln54_93_fu_3020_p1 + zext_ln54_95_fu_3035_p1);

assign add_ln54_45_fu_3659_p2 = (zext_ln54_170_fu_3655_p1 + zext_ln54_169_fu_3645_p1);

assign add_ln54_46_fu_3669_p2 = (zext_ln54_171_fu_3665_p1 + zext_ln54_168_fu_3635_p1);

assign add_ln54_47_fu_3855_p2 = (zext_ln54_172_fu_3852_p1 + zext_ln54_165_fu_3849_p1);

assign add_ln54_48_fu_3675_p2 = (zext_ln54_97_fu_3050_p1 + zext_ln54_99_fu_3065_p1);

assign add_ln54_49_fu_3685_p2 = (zext_ln54_101_fu_3080_p1 + zext_ln54_103_fu_3095_p1);

assign add_ln54_4_fu_3299_p2 = (zext_ln54_129_fu_3295_p1 + zext_ln54_128_fu_3285_p1);

assign add_ln54_50_fu_3695_p2 = (zext_ln54_175_fu_3691_p1 + zext_ln54_174_fu_3681_p1);

assign add_ln54_51_fu_3705_p2 = (zext_ln54_105_fu_3110_p1 + zext_ln54_107_fu_3125_p1);

assign add_ln54_52_fu_3715_p2 = (zext_ln54_109_fu_3140_p1 + zext_ln54_111_fu_3155_p1);

assign add_ln54_53_fu_3725_p2 = (zext_ln54_178_fu_3721_p1 + zext_ln54_177_fu_3711_p1);

assign add_ln54_54_fu_3735_p2 = (zext_ln54_179_fu_3731_p1 + zext_ln54_176_fu_3701_p1);

assign add_ln54_55_fu_3741_p2 = (zext_ln54_113_fu_3170_p1 + zext_ln54_115_fu_3185_p1);

assign add_ln54_56_fu_3751_p2 = (zext_ln54_117_fu_3200_p1 + zext_ln54_119_fu_3215_p1);

assign add_ln54_57_fu_3761_p2 = (zext_ln54_182_fu_3757_p1 + zext_ln54_181_fu_3747_p1);

assign add_ln54_58_fu_3771_p2 = (zext_ln54_121_fu_3230_p1 + zext_ln54_123_fu_3245_p1);

assign add_ln54_59_fu_3781_p2 = (zext_ln54_125_fu_3260_p1 + zext_ln54_127_fu_3275_p1);

assign add_ln54_5_fu_3309_p2 = (zext_ln54_9_fu_2390_p1 + zext_ln54_11_fu_2405_p1);

assign add_ln54_60_fu_3791_p2 = (zext_ln54_185_fu_3787_p1 + zext_ln54_184_fu_3777_p1);

assign add_ln54_61_fu_3801_p2 = (zext_ln54_186_fu_3797_p1 + zext_ln54_183_fu_3767_p1);

assign add_ln54_62_fu_3871_p2 = (zext_ln54_187_fu_3868_p1 + zext_ln54_180_fu_3865_p1);

assign add_ln54_63_fu_3881_p2 = (zext_ln54_188_fu_3877_p1 + zext_ln54_173_fu_3861_p1);

assign add_ln54_6_fu_3319_p2 = (zext_ln54_13_fu_2420_p1 + zext_ln54_15_fu_2435_p1);

assign add_ln54_7_fu_3329_p2 = (zext_ln54_132_fu_3325_p1 + zext_ln54_131_fu_3315_p1);

assign add_ln54_8_fu_3339_p2 = (zext_ln54_133_fu_3335_p1 + zext_ln54_130_fu_3305_p1);

assign add_ln54_9_fu_3345_p2 = (zext_ln54_17_fu_2450_p1 + zext_ln54_19_fu_2465_p1);

assign add_ln54_fu_3279_p2 = (zext_ln54_3_fu_2345_p1 + zext_ln51_fu_2330_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign cnt_3_fu_3891_p2 = (zext_ln54_189_fu_3887_p1 + zext_ln54_158_fu_3845_p1);

assign cnt_fu_2324_p2 = (xor_ln23_fu_2319_p2 ^ 1'd1);

assign icmp_ln49_fu_1470_p2 = ((ap_sig_allocacmp_x_1 == 4'd10) ? 1'b1 : 1'b0);

assign layer3_activations_address0 = zext_ln49_fu_3897_p1;

assign layer3_activations_ce0 = layer3_activations_ce0_local;

assign layer3_activations_d0 = zext_ln51_1_fu_3901_p1;

assign layer3_activations_we0 = layer3_activations_we0_local;

assign or_ln54_10_fu_1638_p3 = {{ap_sig_allocacmp_x_1}, {6'd12}};

assign or_ln54_11_fu_1651_p3 = {{ap_sig_allocacmp_x_1}, {6'd13}};

assign or_ln54_12_fu_1664_p3 = {{ap_sig_allocacmp_x_1}, {6'd14}};

assign or_ln54_13_fu_1677_p3 = {{ap_sig_allocacmp_x_1}, {6'd15}};

assign or_ln54_14_fu_1690_p3 = {{ap_sig_allocacmp_x_1}, {6'd16}};

assign or_ln54_15_fu_1703_p3 = {{ap_sig_allocacmp_x_1}, {6'd17}};

assign or_ln54_16_fu_1716_p3 = {{ap_sig_allocacmp_x_1}, {6'd18}};

assign or_ln54_17_fu_1729_p3 = {{ap_sig_allocacmp_x_1}, {6'd19}};

assign or_ln54_18_fu_1742_p3 = {{ap_sig_allocacmp_x_1}, {6'd20}};

assign or_ln54_19_fu_1755_p3 = {{ap_sig_allocacmp_x_1}, {6'd21}};

assign or_ln54_1_fu_1508_p3 = {{ap_sig_allocacmp_x_1}, {6'd2}};

assign or_ln54_20_fu_1768_p3 = {{ap_sig_allocacmp_x_1}, {6'd22}};

assign or_ln54_21_fu_1781_p3 = {{ap_sig_allocacmp_x_1}, {6'd23}};

assign or_ln54_22_fu_1794_p3 = {{ap_sig_allocacmp_x_1}, {6'd24}};

assign or_ln54_23_fu_1807_p3 = {{ap_sig_allocacmp_x_1}, {6'd25}};

assign or_ln54_24_fu_1820_p3 = {{ap_sig_allocacmp_x_1}, {6'd26}};

assign or_ln54_25_fu_1833_p3 = {{ap_sig_allocacmp_x_1}, {6'd27}};

assign or_ln54_26_fu_1846_p3 = {{ap_sig_allocacmp_x_1}, {6'd28}};

assign or_ln54_27_fu_1859_p3 = {{ap_sig_allocacmp_x_1}, {6'd29}};

assign or_ln54_28_fu_1872_p3 = {{ap_sig_allocacmp_x_1}, {6'd30}};

assign or_ln54_29_fu_1885_p3 = {{ap_sig_allocacmp_x_1}, {6'd31}};

assign or_ln54_2_fu_1521_p3 = {{ap_sig_allocacmp_x_1}, {6'd3}};

assign or_ln54_30_fu_1898_p3 = {{ap_sig_allocacmp_x_1}, {6'd32}};

assign or_ln54_31_fu_1911_p3 = {{ap_sig_allocacmp_x_1}, {6'd33}};

assign or_ln54_32_fu_1924_p3 = {{ap_sig_allocacmp_x_1}, {6'd34}};

assign or_ln54_33_fu_1937_p3 = {{ap_sig_allocacmp_x_1}, {6'd35}};

assign or_ln54_34_fu_1950_p3 = {{ap_sig_allocacmp_x_1}, {6'd36}};

assign or_ln54_35_fu_1963_p3 = {{ap_sig_allocacmp_x_1}, {6'd37}};

assign or_ln54_36_fu_1976_p3 = {{ap_sig_allocacmp_x_1}, {6'd38}};

assign or_ln54_37_fu_1989_p3 = {{ap_sig_allocacmp_x_1}, {6'd39}};

assign or_ln54_38_fu_2002_p3 = {{ap_sig_allocacmp_x_1}, {6'd40}};

assign or_ln54_39_fu_2015_p3 = {{ap_sig_allocacmp_x_1}, {6'd41}};

assign or_ln54_3_fu_1534_p3 = {{ap_sig_allocacmp_x_1}, {6'd4}};

assign or_ln54_40_fu_2028_p3 = {{ap_sig_allocacmp_x_1}, {6'd42}};

assign or_ln54_41_fu_2041_p3 = {{ap_sig_allocacmp_x_1}, {6'd43}};

assign or_ln54_42_fu_2054_p3 = {{ap_sig_allocacmp_x_1}, {6'd44}};

assign or_ln54_43_fu_2067_p3 = {{ap_sig_allocacmp_x_1}, {6'd45}};

assign or_ln54_44_fu_2080_p3 = {{ap_sig_allocacmp_x_1}, {6'd46}};

assign or_ln54_45_fu_2093_p3 = {{ap_sig_allocacmp_x_1}, {6'd47}};

assign or_ln54_46_fu_2106_p3 = {{ap_sig_allocacmp_x_1}, {6'd48}};

assign or_ln54_47_fu_2119_p3 = {{ap_sig_allocacmp_x_1}, {6'd49}};

assign or_ln54_48_fu_2132_p3 = {{ap_sig_allocacmp_x_1}, {6'd50}};

assign or_ln54_49_fu_2145_p3 = {{ap_sig_allocacmp_x_1}, {6'd51}};

assign or_ln54_4_fu_1547_p3 = {{ap_sig_allocacmp_x_1}, {6'd5}};

assign or_ln54_50_fu_2158_p3 = {{ap_sig_allocacmp_x_1}, {6'd52}};

assign or_ln54_51_fu_2171_p3 = {{ap_sig_allocacmp_x_1}, {6'd53}};

assign or_ln54_52_fu_2184_p3 = {{ap_sig_allocacmp_x_1}, {6'd54}};

assign or_ln54_53_fu_2197_p3 = {{ap_sig_allocacmp_x_1}, {6'd55}};

assign or_ln54_54_fu_2210_p3 = {{ap_sig_allocacmp_x_1}, {6'd56}};

assign or_ln54_55_fu_2223_p3 = {{ap_sig_allocacmp_x_1}, {6'd57}};

assign or_ln54_56_fu_2236_p3 = {{ap_sig_allocacmp_x_1}, {6'd58}};

assign or_ln54_57_fu_2249_p3 = {{ap_sig_allocacmp_x_1}, {6'd59}};

assign or_ln54_58_fu_2262_p3 = {{ap_sig_allocacmp_x_1}, {6'd60}};

assign or_ln54_59_fu_2275_p3 = {{ap_sig_allocacmp_x_1}, {6'd61}};

assign or_ln54_5_fu_1560_p3 = {{ap_sig_allocacmp_x_1}, {6'd6}};

assign or_ln54_60_fu_2288_p3 = {{ap_sig_allocacmp_x_1}, {6'd62}};

assign or_ln54_61_fu_2301_p3 = {{ap_sig_allocacmp_x_1}, {6'd63}};

assign or_ln54_6_fu_1573_p3 = {{ap_sig_allocacmp_x_1}, {6'd7}};

assign or_ln54_7_fu_1586_p3 = {{ap_sig_allocacmp_x_1}, {6'd8}};

assign or_ln54_8_fu_1599_p3 = {{ap_sig_allocacmp_x_1}, {6'd9}};

assign or_ln54_9_fu_1612_p3 = {{ap_sig_allocacmp_x_1}, {6'd10}};

assign or_ln54_s_fu_1625_p3 = {{ap_sig_allocacmp_x_1}, {6'd11}};

assign or_ln_fu_1495_p3 = {{ap_sig_allocacmp_x_1}, {6'd1}};

assign tmp_8_fu_1482_p3 = {{ap_sig_allocacmp_x_1}, {6'd0}};

assign xor_ln23_100_fu_3059_p2 = (xor_ln23_99_fu_3054_p2 ^ 1'd1);

assign xor_ln23_101_fu_3069_p2 = (layer2_quant_load_50 ^ W3_q13);

assign xor_ln23_102_fu_3074_p2 = (xor_ln23_101_fu_3069_p2 ^ 1'd1);

assign xor_ln23_103_fu_3084_p2 = (layer2_quant_load_51 ^ W3_q12);

assign xor_ln23_104_fu_3089_p2 = (xor_ln23_103_fu_3084_p2 ^ 1'd1);

assign xor_ln23_105_fu_3099_p2 = (layer2_quant_load_52 ^ W3_q11);

assign xor_ln23_106_fu_3104_p2 = (xor_ln23_105_fu_3099_p2 ^ 1'd1);

assign xor_ln23_107_fu_3114_p2 = (layer2_quant_load_53 ^ W3_q10);

assign xor_ln23_108_fu_3119_p2 = (xor_ln23_107_fu_3114_p2 ^ 1'd1);

assign xor_ln23_109_fu_3129_p2 = (layer2_quant_load_54 ^ W3_q9);

assign xor_ln23_10_fu_2384_p2 = (xor_ln23_9_fu_2379_p2 ^ 1'd1);

assign xor_ln23_110_fu_3134_p2 = (xor_ln23_109_fu_3129_p2 ^ 1'd1);

assign xor_ln23_111_fu_3144_p2 = (layer2_quant_load_55 ^ W3_q8);

assign xor_ln23_112_fu_3149_p2 = (xor_ln23_111_fu_3144_p2 ^ 1'd1);

assign xor_ln23_113_fu_3159_p2 = (layer2_quant_load_56 ^ W3_q7);

assign xor_ln23_114_fu_3164_p2 = (xor_ln23_113_fu_3159_p2 ^ 1'd1);

assign xor_ln23_115_fu_3174_p2 = (layer2_quant_load_57 ^ W3_q6);

assign xor_ln23_116_fu_3179_p2 = (xor_ln23_115_fu_3174_p2 ^ 1'd1);

assign xor_ln23_117_fu_3189_p2 = (layer2_quant_load_58 ^ W3_q5);

assign xor_ln23_118_fu_3194_p2 = (xor_ln23_117_fu_3189_p2 ^ 1'd1);

assign xor_ln23_119_fu_3204_p2 = (layer2_quant_load_59 ^ W3_q4);

assign xor_ln23_11_fu_2394_p2 = (layer2_quant_load_5 ^ W3_q58);

assign xor_ln23_120_fu_3209_p2 = (xor_ln23_119_fu_3204_p2 ^ 1'd1);

assign xor_ln23_121_fu_3219_p2 = (layer2_quant_load_60 ^ W3_q3);

assign xor_ln23_122_fu_3224_p2 = (xor_ln23_121_fu_3219_p2 ^ 1'd1);

assign xor_ln23_123_fu_3234_p2 = (layer2_quant_load_61 ^ W3_q2);

assign xor_ln23_124_fu_3239_p2 = (xor_ln23_123_fu_3234_p2 ^ 1'd1);

assign xor_ln23_125_fu_3249_p2 = (layer2_quant_load_62 ^ W3_q1);

assign xor_ln23_126_fu_3254_p2 = (xor_ln23_125_fu_3249_p2 ^ 1'd1);

assign xor_ln23_127_fu_3264_p2 = (layer2_quant_load_63 ^ W3_q0);

assign xor_ln23_128_fu_3269_p2 = (xor_ln23_127_fu_3264_p2 ^ 1'd1);

assign xor_ln23_12_fu_2399_p2 = (xor_ln23_11_fu_2394_p2 ^ 1'd1);

assign xor_ln23_13_fu_2409_p2 = (layer2_quant_load_6 ^ W3_q57);

assign xor_ln23_14_fu_2414_p2 = (xor_ln23_13_fu_2409_p2 ^ 1'd1);

assign xor_ln23_15_fu_2424_p2 = (layer2_quant_load_7 ^ W3_q56);

assign xor_ln23_16_fu_2429_p2 = (xor_ln23_15_fu_2424_p2 ^ 1'd1);

assign xor_ln23_17_fu_2439_p2 = (layer2_quant_load_8 ^ W3_q55);

assign xor_ln23_18_fu_2444_p2 = (xor_ln23_17_fu_2439_p2 ^ 1'd1);

assign xor_ln23_19_fu_2454_p2 = (layer2_quant_load_9 ^ W3_q54);

assign xor_ln23_20_fu_2459_p2 = (xor_ln23_19_fu_2454_p2 ^ 1'd1);

assign xor_ln23_21_fu_2469_p2 = (layer2_quant_load_10 ^ W3_q53);

assign xor_ln23_22_fu_2474_p2 = (xor_ln23_21_fu_2469_p2 ^ 1'd1);

assign xor_ln23_23_fu_2484_p2 = (layer2_quant_load_11 ^ W3_q52);

assign xor_ln23_24_fu_2489_p2 = (xor_ln23_23_fu_2484_p2 ^ 1'd1);

assign xor_ln23_25_fu_2499_p2 = (layer2_quant_load_12 ^ W3_q51);

assign xor_ln23_26_fu_2504_p2 = (xor_ln23_25_fu_2499_p2 ^ 1'd1);

assign xor_ln23_27_fu_2514_p2 = (layer2_quant_load_13 ^ W3_q50);

assign xor_ln23_28_fu_2519_p2 = (xor_ln23_27_fu_2514_p2 ^ 1'd1);

assign xor_ln23_29_fu_2529_p2 = (layer2_quant_load_14 ^ W3_q49);

assign xor_ln23_30_fu_2534_p2 = (xor_ln23_29_fu_2529_p2 ^ 1'd1);

assign xor_ln23_31_fu_2544_p2 = (layer2_quant_load_15 ^ W3_q48);

assign xor_ln23_32_fu_2549_p2 = (xor_ln23_31_fu_2544_p2 ^ 1'd1);

assign xor_ln23_33_fu_2559_p2 = (layer2_quant_load_16 ^ W3_q47);

assign xor_ln23_34_fu_2564_p2 = (xor_ln23_33_fu_2559_p2 ^ 1'd1);

assign xor_ln23_35_fu_2574_p2 = (layer2_quant_load_17 ^ W3_q46);

assign xor_ln23_36_fu_2579_p2 = (xor_ln23_35_fu_2574_p2 ^ 1'd1);

assign xor_ln23_37_fu_2589_p2 = (layer2_quant_load_18 ^ W3_q45);

assign xor_ln23_38_fu_2594_p2 = (xor_ln23_37_fu_2589_p2 ^ 1'd1);

assign xor_ln23_39_fu_2604_p2 = (layer2_quant_load_19 ^ W3_q44);

assign xor_ln23_3_fu_2334_p2 = (layer2_quant_load_1 ^ W3_q62);

assign xor_ln23_40_fu_2609_p2 = (xor_ln23_39_fu_2604_p2 ^ 1'd1);

assign xor_ln23_41_fu_2619_p2 = (layer2_quant_load_20 ^ W3_q43);

assign xor_ln23_42_fu_2624_p2 = (xor_ln23_41_fu_2619_p2 ^ 1'd1);

assign xor_ln23_43_fu_2634_p2 = (layer2_quant_load_21 ^ W3_q42);

assign xor_ln23_44_fu_2639_p2 = (xor_ln23_43_fu_2634_p2 ^ 1'd1);

assign xor_ln23_45_fu_2649_p2 = (layer2_quant_load_22 ^ W3_q41);

assign xor_ln23_46_fu_2654_p2 = (xor_ln23_45_fu_2649_p2 ^ 1'd1);

assign xor_ln23_47_fu_2664_p2 = (layer2_quant_load_23 ^ W3_q40);

assign xor_ln23_48_fu_2669_p2 = (xor_ln23_47_fu_2664_p2 ^ 1'd1);

assign xor_ln23_49_fu_2679_p2 = (layer2_quant_load_24 ^ W3_q39);

assign xor_ln23_4_fu_2339_p2 = (xor_ln23_3_fu_2334_p2 ^ 1'd1);

assign xor_ln23_50_fu_2684_p2 = (xor_ln23_49_fu_2679_p2 ^ 1'd1);

assign xor_ln23_51_fu_2694_p2 = (layer2_quant_load_25 ^ W3_q38);

assign xor_ln23_52_fu_2699_p2 = (xor_ln23_51_fu_2694_p2 ^ 1'd1);

assign xor_ln23_53_fu_2709_p2 = (layer2_quant_load_26 ^ W3_q37);

assign xor_ln23_54_fu_2714_p2 = (xor_ln23_53_fu_2709_p2 ^ 1'd1);

assign xor_ln23_55_fu_2724_p2 = (layer2_quant_load_27 ^ W3_q36);

assign xor_ln23_56_fu_2729_p2 = (xor_ln23_55_fu_2724_p2 ^ 1'd1);

assign xor_ln23_57_fu_2739_p2 = (layer2_quant_load_28 ^ W3_q35);

assign xor_ln23_58_fu_2744_p2 = (xor_ln23_57_fu_2739_p2 ^ 1'd1);

assign xor_ln23_59_fu_2754_p2 = (layer2_quant_load_29 ^ W3_q34);

assign xor_ln23_5_fu_2349_p2 = (layer2_quant_load_2 ^ W3_q61);

assign xor_ln23_60_fu_2759_p2 = (xor_ln23_59_fu_2754_p2 ^ 1'd1);

assign xor_ln23_61_fu_2769_p2 = (layer2_quant_load_30 ^ W3_q33);

assign xor_ln23_62_fu_2774_p2 = (xor_ln23_61_fu_2769_p2 ^ 1'd1);

assign xor_ln23_63_fu_2784_p2 = (layer2_quant_load_31 ^ W3_q32);

assign xor_ln23_64_fu_2789_p2 = (xor_ln23_63_fu_2784_p2 ^ 1'd1);

assign xor_ln23_65_fu_2799_p2 = (layer2_quant_load_32 ^ W3_q31);

assign xor_ln23_66_fu_2804_p2 = (xor_ln23_65_fu_2799_p2 ^ 1'd1);

assign xor_ln23_67_fu_2814_p2 = (layer2_quant_load_33 ^ W3_q30);

assign xor_ln23_68_fu_2819_p2 = (xor_ln23_67_fu_2814_p2 ^ 1'd1);

assign xor_ln23_69_fu_2829_p2 = (layer2_quant_load_34 ^ W3_q29);

assign xor_ln23_6_fu_2354_p2 = (xor_ln23_5_fu_2349_p2 ^ 1'd1);

assign xor_ln23_70_fu_2834_p2 = (xor_ln23_69_fu_2829_p2 ^ 1'd1);

assign xor_ln23_71_fu_2844_p2 = (layer2_quant_load_35 ^ W3_q28);

assign xor_ln23_72_fu_2849_p2 = (xor_ln23_71_fu_2844_p2 ^ 1'd1);

assign xor_ln23_73_fu_2859_p2 = (layer2_quant_load_36 ^ W3_q27);

assign xor_ln23_74_fu_2864_p2 = (xor_ln23_73_fu_2859_p2 ^ 1'd1);

assign xor_ln23_75_fu_2874_p2 = (layer2_quant_load_37 ^ W3_q26);

assign xor_ln23_76_fu_2879_p2 = (xor_ln23_75_fu_2874_p2 ^ 1'd1);

assign xor_ln23_77_fu_2889_p2 = (layer2_quant_load_38 ^ W3_q25);

assign xor_ln23_78_fu_2894_p2 = (xor_ln23_77_fu_2889_p2 ^ 1'd1);

assign xor_ln23_79_fu_2904_p2 = (layer2_quant_load_39 ^ W3_q24);

assign xor_ln23_7_fu_2364_p2 = (layer2_quant_load_3 ^ W3_q60);

assign xor_ln23_80_fu_2909_p2 = (xor_ln23_79_fu_2904_p2 ^ 1'd1);

assign xor_ln23_81_fu_2919_p2 = (layer2_quant_load_40 ^ W3_q23);

assign xor_ln23_82_fu_2924_p2 = (xor_ln23_81_fu_2919_p2 ^ 1'd1);

assign xor_ln23_83_fu_2934_p2 = (layer2_quant_load_41 ^ W3_q22);

assign xor_ln23_84_fu_2939_p2 = (xor_ln23_83_fu_2934_p2 ^ 1'd1);

assign xor_ln23_85_fu_2949_p2 = (layer2_quant_load_42 ^ W3_q21);

assign xor_ln23_86_fu_2954_p2 = (xor_ln23_85_fu_2949_p2 ^ 1'd1);

assign xor_ln23_87_fu_2964_p2 = (layer2_quant_load_43 ^ W3_q20);

assign xor_ln23_88_fu_2969_p2 = (xor_ln23_87_fu_2964_p2 ^ 1'd1);

assign xor_ln23_89_fu_2979_p2 = (layer2_quant_load_44 ^ W3_q19);

assign xor_ln23_8_fu_2369_p2 = (xor_ln23_7_fu_2364_p2 ^ 1'd1);

assign xor_ln23_90_fu_2984_p2 = (xor_ln23_89_fu_2979_p2 ^ 1'd1);

assign xor_ln23_91_fu_2994_p2 = (layer2_quant_load_45 ^ W3_q18);

assign xor_ln23_92_fu_2999_p2 = (xor_ln23_91_fu_2994_p2 ^ 1'd1);

assign xor_ln23_93_fu_3009_p2 = (layer2_quant_load_46 ^ W3_q17);

assign xor_ln23_94_fu_3014_p2 = (xor_ln23_93_fu_3009_p2 ^ 1'd1);

assign xor_ln23_95_fu_3024_p2 = (layer2_quant_load_47 ^ W3_q16);

assign xor_ln23_96_fu_3029_p2 = (xor_ln23_95_fu_3024_p2 ^ 1'd1);

assign xor_ln23_97_fu_3039_p2 = (layer2_quant_load_48 ^ W3_q15);

assign xor_ln23_98_fu_3044_p2 = (xor_ln23_97_fu_3039_p2 ^ 1'd1);

assign xor_ln23_99_fu_3054_p2 = (layer2_quant_load_49 ^ W3_q14);

assign xor_ln23_9_fu_2379_p2 = (layer2_quant_load_4 ^ W3_q59);

assign xor_ln23_fu_2319_p2 = (layer2_quant_load ^ W3_q63);

assign zext_ln49_fu_3897_p1 = x_1_reg_4232_pp0_iter2_reg;

assign zext_ln51_1_fu_3901_p1 = cnt_3_reg_4601;

assign zext_ln51_fu_2330_p1 = cnt_fu_2324_p2;

assign zext_ln54_100_fu_2140_p1 = or_ln54_48_fu_2132_p3;

assign zext_ln54_101_fu_3080_p1 = xor_ln23_102_fu_3074_p2;

assign zext_ln54_102_fu_2153_p1 = or_ln54_49_fu_2145_p3;

assign zext_ln54_103_fu_3095_p1 = xor_ln23_104_fu_3089_p2;

assign zext_ln54_104_fu_2166_p1 = or_ln54_50_fu_2158_p3;

assign zext_ln54_105_fu_3110_p1 = xor_ln23_106_fu_3104_p2;

assign zext_ln54_106_fu_2179_p1 = or_ln54_51_fu_2171_p3;

assign zext_ln54_107_fu_3125_p1 = xor_ln23_108_fu_3119_p2;

assign zext_ln54_108_fu_2192_p1 = or_ln54_52_fu_2184_p3;

assign zext_ln54_109_fu_3140_p1 = xor_ln23_110_fu_3134_p2;

assign zext_ln54_10_fu_1555_p1 = or_ln54_4_fu_1547_p3;

assign zext_ln54_110_fu_2205_p1 = or_ln54_53_fu_2197_p3;

assign zext_ln54_111_fu_3155_p1 = xor_ln23_112_fu_3149_p2;

assign zext_ln54_112_fu_2218_p1 = or_ln54_54_fu_2210_p3;

assign zext_ln54_113_fu_3170_p1 = xor_ln23_114_fu_3164_p2;

assign zext_ln54_114_fu_2231_p1 = or_ln54_55_fu_2223_p3;

assign zext_ln54_115_fu_3185_p1 = xor_ln23_116_fu_3179_p2;

assign zext_ln54_116_fu_2244_p1 = or_ln54_56_fu_2236_p3;

assign zext_ln54_117_fu_3200_p1 = xor_ln23_118_fu_3194_p2;

assign zext_ln54_118_fu_2257_p1 = or_ln54_57_fu_2249_p3;

assign zext_ln54_119_fu_3215_p1 = xor_ln23_120_fu_3209_p2;

assign zext_ln54_11_fu_2405_p1 = xor_ln23_12_fu_2399_p2;

assign zext_ln54_120_fu_2270_p1 = or_ln54_58_fu_2262_p3;

assign zext_ln54_121_fu_3230_p1 = xor_ln23_122_fu_3224_p2;

assign zext_ln54_122_fu_2283_p1 = or_ln54_59_fu_2275_p3;

assign zext_ln54_123_fu_3245_p1 = xor_ln23_124_fu_3239_p2;

assign zext_ln54_124_fu_2296_p1 = or_ln54_60_fu_2288_p3;

assign zext_ln54_125_fu_3260_p1 = xor_ln23_126_fu_3254_p2;

assign zext_ln54_126_fu_2309_p1 = or_ln54_61_fu_2301_p3;

assign zext_ln54_127_fu_3275_p1 = xor_ln23_128_fu_3269_p2;

assign zext_ln54_128_fu_3285_p1 = add_ln54_fu_3279_p2;

assign zext_ln54_129_fu_3295_p1 = add_ln54_3_fu_3289_p2;

assign zext_ln54_12_fu_1568_p1 = or_ln54_5_fu_1560_p3;

assign zext_ln54_130_fu_3305_p1 = add_ln54_4_fu_3299_p2;

assign zext_ln54_131_fu_3315_p1 = add_ln54_5_fu_3309_p2;

assign zext_ln54_132_fu_3325_p1 = add_ln54_6_fu_3319_p2;

assign zext_ln54_133_fu_3335_p1 = add_ln54_7_fu_3329_p2;

assign zext_ln54_134_fu_3807_p1 = add_ln54_8_reg_4561;

assign zext_ln54_135_fu_3351_p1 = add_ln54_9_fu_3345_p2;

assign zext_ln54_136_fu_3361_p1 = add_ln54_10_fu_3355_p2;

assign zext_ln54_137_fu_3371_p1 = add_ln54_11_fu_3365_p2;

assign zext_ln54_138_fu_3381_p1 = add_ln54_12_fu_3375_p2;

assign zext_ln54_139_fu_3391_p1 = add_ln54_13_fu_3385_p2;

assign zext_ln54_13_fu_2420_p1 = xor_ln23_14_fu_2414_p2;

assign zext_ln54_140_fu_3401_p1 = add_ln54_14_fu_3395_p2;

assign zext_ln54_141_fu_3810_p1 = add_ln54_15_reg_4566;

assign zext_ln54_142_fu_3819_p1 = add_ln54_16_fu_3813_p2;

assign zext_ln54_143_fu_3417_p1 = add_ln54_17_fu_3411_p2;

assign zext_ln54_144_fu_3427_p1 = add_ln54_18_fu_3421_p2;

assign zext_ln54_145_fu_3437_p1 = add_ln54_19_fu_3431_p2;

assign zext_ln54_146_fu_3447_p1 = add_ln54_20_fu_3441_p2;

assign zext_ln54_147_fu_3457_p1 = add_ln54_21_fu_3451_p2;

assign zext_ln54_148_fu_3467_p1 = add_ln54_22_fu_3461_p2;

assign zext_ln54_149_fu_3823_p1 = add_ln54_23_reg_4571;

assign zext_ln54_14_fu_1581_p1 = or_ln54_6_fu_1573_p3;

assign zext_ln54_150_fu_3483_p1 = add_ln54_24_fu_3477_p2;

assign zext_ln54_151_fu_3493_p1 = add_ln54_25_fu_3487_p2;

assign zext_ln54_152_fu_3503_p1 = add_ln54_26_fu_3497_p2;

assign zext_ln54_153_fu_3513_p1 = add_ln54_27_fu_3507_p2;

assign zext_ln54_154_fu_3523_p1 = add_ln54_28_fu_3517_p2;

assign zext_ln54_155_fu_3533_p1 = add_ln54_29_fu_3527_p2;

assign zext_ln54_156_fu_3826_p1 = add_ln54_30_reg_4576;

assign zext_ln54_157_fu_3835_p1 = add_ln54_31_fu_3829_p2;

assign zext_ln54_158_fu_3845_p1 = add_ln54_32_fu_3839_p2;

assign zext_ln54_159_fu_3549_p1 = add_ln54_33_fu_3543_p2;

assign zext_ln54_15_fu_2435_p1 = xor_ln23_16_fu_2429_p2;

assign zext_ln54_160_fu_3559_p1 = add_ln54_34_fu_3553_p2;

assign zext_ln54_161_fu_3569_p1 = add_ln54_35_fu_3563_p2;

assign zext_ln54_162_fu_3579_p1 = add_ln54_36_fu_3573_p2;

assign zext_ln54_163_fu_3589_p1 = add_ln54_37_fu_3583_p2;

assign zext_ln54_164_fu_3599_p1 = add_ln54_38_fu_3593_p2;

assign zext_ln54_165_fu_3849_p1 = add_ln54_39_reg_4581;

assign zext_ln54_166_fu_3615_p1 = add_ln54_40_fu_3609_p2;

assign zext_ln54_167_fu_3625_p1 = add_ln54_41_fu_3619_p2;

assign zext_ln54_168_fu_3635_p1 = add_ln54_42_fu_3629_p2;

assign zext_ln54_169_fu_3645_p1 = add_ln54_43_fu_3639_p2;

assign zext_ln54_16_fu_1594_p1 = or_ln54_7_fu_1586_p3;

assign zext_ln54_170_fu_3655_p1 = add_ln54_44_fu_3649_p2;

assign zext_ln54_171_fu_3665_p1 = add_ln54_45_fu_3659_p2;

assign zext_ln54_172_fu_3852_p1 = add_ln54_46_reg_4586;

assign zext_ln54_173_fu_3861_p1 = add_ln54_47_fu_3855_p2;

assign zext_ln54_174_fu_3681_p1 = add_ln54_48_fu_3675_p2;

assign zext_ln54_175_fu_3691_p1 = add_ln54_49_fu_3685_p2;

assign zext_ln54_176_fu_3701_p1 = add_ln54_50_fu_3695_p2;

assign zext_ln54_177_fu_3711_p1 = add_ln54_51_fu_3705_p2;

assign zext_ln54_178_fu_3721_p1 = add_ln54_52_fu_3715_p2;

assign zext_ln54_179_fu_3731_p1 = add_ln54_53_fu_3725_p2;

assign zext_ln54_17_fu_2450_p1 = xor_ln23_18_fu_2444_p2;

assign zext_ln54_180_fu_3865_p1 = add_ln54_54_reg_4591;

assign zext_ln54_181_fu_3747_p1 = add_ln54_55_fu_3741_p2;

assign zext_ln54_182_fu_3757_p1 = add_ln54_56_fu_3751_p2;

assign zext_ln54_183_fu_3767_p1 = add_ln54_57_fu_3761_p2;

assign zext_ln54_184_fu_3777_p1 = add_ln54_58_fu_3771_p2;

assign zext_ln54_185_fu_3787_p1 = add_ln54_59_fu_3781_p2;

assign zext_ln54_186_fu_3797_p1 = add_ln54_60_fu_3791_p2;

assign zext_ln54_187_fu_3868_p1 = add_ln54_61_reg_4596;

assign zext_ln54_188_fu_3877_p1 = add_ln54_62_fu_3871_p2;

assign zext_ln54_189_fu_3887_p1 = add_ln54_63_fu_3881_p2;

assign zext_ln54_18_fu_1607_p1 = or_ln54_8_fu_1599_p3;

assign zext_ln54_19_fu_2465_p1 = xor_ln23_20_fu_2459_p2;

assign zext_ln54_20_fu_1620_p1 = or_ln54_9_fu_1612_p3;

assign zext_ln54_21_fu_2480_p1 = xor_ln23_22_fu_2474_p2;

assign zext_ln54_22_fu_1633_p1 = or_ln54_s_fu_1625_p3;

assign zext_ln54_23_fu_2495_p1 = xor_ln23_24_fu_2489_p2;

assign zext_ln54_24_fu_1646_p1 = or_ln54_10_fu_1638_p3;

assign zext_ln54_25_fu_2510_p1 = xor_ln23_26_fu_2504_p2;

assign zext_ln54_26_fu_1659_p1 = or_ln54_11_fu_1651_p3;

assign zext_ln54_27_fu_2525_p1 = xor_ln23_28_fu_2519_p2;

assign zext_ln54_28_fu_1672_p1 = or_ln54_12_fu_1664_p3;

assign zext_ln54_29_fu_2540_p1 = xor_ln23_30_fu_2534_p2;

assign zext_ln54_2_fu_1503_p1 = or_ln_fu_1495_p3;

assign zext_ln54_30_fu_1685_p1 = or_ln54_13_fu_1677_p3;

assign zext_ln54_31_fu_2555_p1 = xor_ln23_32_fu_2549_p2;

assign zext_ln54_32_fu_1698_p1 = or_ln54_14_fu_1690_p3;

assign zext_ln54_33_fu_2570_p1 = xor_ln23_34_fu_2564_p2;

assign zext_ln54_34_fu_1711_p1 = or_ln54_15_fu_1703_p3;

assign zext_ln54_35_fu_2585_p1 = xor_ln23_36_fu_2579_p2;

assign zext_ln54_36_fu_1724_p1 = or_ln54_16_fu_1716_p3;

assign zext_ln54_37_fu_2600_p1 = xor_ln23_38_fu_2594_p2;

assign zext_ln54_38_fu_1737_p1 = or_ln54_17_fu_1729_p3;

assign zext_ln54_39_fu_2615_p1 = xor_ln23_40_fu_2609_p2;

assign zext_ln54_3_fu_2345_p1 = xor_ln23_4_fu_2339_p2;

assign zext_ln54_40_fu_1750_p1 = or_ln54_18_fu_1742_p3;

assign zext_ln54_41_fu_2630_p1 = xor_ln23_42_fu_2624_p2;

assign zext_ln54_42_fu_1763_p1 = or_ln54_19_fu_1755_p3;

assign zext_ln54_43_fu_2645_p1 = xor_ln23_44_fu_2639_p2;

assign zext_ln54_44_fu_1776_p1 = or_ln54_20_fu_1768_p3;

assign zext_ln54_45_fu_2660_p1 = xor_ln23_46_fu_2654_p2;

assign zext_ln54_46_fu_1789_p1 = or_ln54_21_fu_1781_p3;

assign zext_ln54_47_fu_2675_p1 = xor_ln23_48_fu_2669_p2;

assign zext_ln54_48_fu_1802_p1 = or_ln54_22_fu_1794_p3;

assign zext_ln54_49_fu_2690_p1 = xor_ln23_50_fu_2684_p2;

assign zext_ln54_4_fu_1516_p1 = or_ln54_1_fu_1508_p3;

assign zext_ln54_50_fu_1815_p1 = or_ln54_23_fu_1807_p3;

assign zext_ln54_51_fu_2705_p1 = xor_ln23_52_fu_2699_p2;

assign zext_ln54_52_fu_1828_p1 = or_ln54_24_fu_1820_p3;

assign zext_ln54_53_fu_2720_p1 = xor_ln23_54_fu_2714_p2;

assign zext_ln54_54_fu_1841_p1 = or_ln54_25_fu_1833_p3;

assign zext_ln54_55_fu_2735_p1 = xor_ln23_56_fu_2729_p2;

assign zext_ln54_56_fu_1854_p1 = or_ln54_26_fu_1846_p3;

assign zext_ln54_57_fu_2750_p1 = xor_ln23_58_fu_2744_p2;

assign zext_ln54_58_fu_1867_p1 = or_ln54_27_fu_1859_p3;

assign zext_ln54_59_fu_2765_p1 = xor_ln23_60_fu_2759_p2;

assign zext_ln54_5_fu_2360_p1 = xor_ln23_6_fu_2354_p2;

assign zext_ln54_60_fu_1880_p1 = or_ln54_28_fu_1872_p3;

assign zext_ln54_61_fu_2780_p1 = xor_ln23_62_fu_2774_p2;

assign zext_ln54_62_fu_1893_p1 = or_ln54_29_fu_1885_p3;

assign zext_ln54_63_fu_2795_p1 = xor_ln23_64_fu_2789_p2;

assign zext_ln54_64_fu_1906_p1 = or_ln54_30_fu_1898_p3;

assign zext_ln54_65_fu_2810_p1 = xor_ln23_66_fu_2804_p2;

assign zext_ln54_66_fu_1919_p1 = or_ln54_31_fu_1911_p3;

assign zext_ln54_67_fu_2825_p1 = xor_ln23_68_fu_2819_p2;

assign zext_ln54_68_fu_1932_p1 = or_ln54_32_fu_1924_p3;

assign zext_ln54_69_fu_2840_p1 = xor_ln23_70_fu_2834_p2;

assign zext_ln54_6_fu_1529_p1 = or_ln54_2_fu_1521_p3;

assign zext_ln54_70_fu_1945_p1 = or_ln54_33_fu_1937_p3;

assign zext_ln54_71_fu_2855_p1 = xor_ln23_72_fu_2849_p2;

assign zext_ln54_72_fu_1958_p1 = or_ln54_34_fu_1950_p3;

assign zext_ln54_73_fu_2870_p1 = xor_ln23_74_fu_2864_p2;

assign zext_ln54_74_fu_1971_p1 = or_ln54_35_fu_1963_p3;

assign zext_ln54_75_fu_2885_p1 = xor_ln23_76_fu_2879_p2;

assign zext_ln54_76_fu_1984_p1 = or_ln54_36_fu_1976_p3;

assign zext_ln54_77_fu_2900_p1 = xor_ln23_78_fu_2894_p2;

assign zext_ln54_78_fu_1997_p1 = or_ln54_37_fu_1989_p3;

assign zext_ln54_79_fu_2915_p1 = xor_ln23_80_fu_2909_p2;

assign zext_ln54_7_fu_2375_p1 = xor_ln23_8_fu_2369_p2;

assign zext_ln54_80_fu_2010_p1 = or_ln54_38_fu_2002_p3;

assign zext_ln54_81_fu_2930_p1 = xor_ln23_82_fu_2924_p2;

assign zext_ln54_82_fu_2023_p1 = or_ln54_39_fu_2015_p3;

assign zext_ln54_83_fu_2945_p1 = xor_ln23_84_fu_2939_p2;

assign zext_ln54_84_fu_2036_p1 = or_ln54_40_fu_2028_p3;

assign zext_ln54_85_fu_2960_p1 = xor_ln23_86_fu_2954_p2;

assign zext_ln54_86_fu_2049_p1 = or_ln54_41_fu_2041_p3;

assign zext_ln54_87_fu_2975_p1 = xor_ln23_88_fu_2969_p2;

assign zext_ln54_88_fu_2062_p1 = or_ln54_42_fu_2054_p3;

assign zext_ln54_89_fu_2990_p1 = xor_ln23_90_fu_2984_p2;

assign zext_ln54_8_fu_1542_p1 = or_ln54_3_fu_1534_p3;

assign zext_ln54_90_fu_2075_p1 = or_ln54_43_fu_2067_p3;

assign zext_ln54_91_fu_3005_p1 = xor_ln23_92_fu_2999_p2;

assign zext_ln54_92_fu_2088_p1 = or_ln54_44_fu_2080_p3;

assign zext_ln54_93_fu_3020_p1 = xor_ln23_94_fu_3014_p2;

assign zext_ln54_94_fu_2101_p1 = or_ln54_45_fu_2093_p3;

assign zext_ln54_95_fu_3035_p1 = xor_ln23_96_fu_3029_p2;

assign zext_ln54_96_fu_2114_p1 = or_ln54_46_fu_2106_p3;

assign zext_ln54_97_fu_3050_p1 = xor_ln23_98_fu_3044_p2;

assign zext_ln54_98_fu_2127_p1 = or_ln54_47_fu_2119_p3;

assign zext_ln54_99_fu_3065_p1 = xor_ln23_100_fu_3059_p2;

assign zext_ln54_9_fu_2390_p1 = xor_ln23_10_fu_2384_p2;

assign zext_ln54_fu_1490_p1 = tmp_8_fu_1482_p3;

endmodule //feedforward_burst_feedforward_burst_Pipeline_VITIS_LOOP_49_1
