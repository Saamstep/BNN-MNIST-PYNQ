<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_strb_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_dest_ptr" off="0" region="0" recursive="0"/>
<pragma file="C:/Xilinx/Vitis/2024.2/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi4ELb0EEC2EDq4_j" off="0" region="0" recursive="0"/>
<pragma file="C:/Xilinx/Vitis/2024.2/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<32, true>::ssdm_int(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<4>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_id_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="bnn.cpp" line="47" pragmaType="pipeline" parentfunction="matmul_xnor" off="0" ii="-1" rewind="0" style=""/>
<pragma file="bnn.cpp" line="50" pragmaType="unroll" parentfunction="matmul_xnor" factor="-1" skip_exit_check="0"/>
<pragma file="C:/Xilinx/Vitis/2024.2/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi65ELb1EEC2EDq65_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<65, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_data_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_user_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<65, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::RType<32, true>::mult operator*<32, true, 32, true>(ap_int_base<32, true> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<32>::ap_int(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_last_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<4, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="bnn.cpp" line="145" pragmaType="pipeline" parentfunction="feedforward" off="0" ii="-1" rewind="0" style=""/>
<pragma file="bnn.cpp" line="136" pragmaType="pipeline" parentfunction="feedforward" off="0" ii="-1" rewind="0" style=""/>
<pragma file="bnn.cpp" line="126" pragmaType="pipeline" parentfunction="feedforward" off="0" ii="-1" rewind="0" style=""/>
<pragma file="bnn.cpp" line="119" pragmaType="unroll" parentfunction="feedforward" factor="4" skip_exit_check="0"/>
<pragma file="bnn.cpp" line="108" pragmaType="pipeline" parentfunction="feedforward" off="0" ii="-1" rewind="0" style=""/>
<pragma file="bnn.cpp" line="101" pragmaType="unroll" parentfunction="feedforward" factor="2" skip_exit_check="0"/>
<pragma file="bnn.cpp" line="90" pragmaType="pipeline" parentfunction="feedforward" off="0" ii="-1" rewind="0" style=""/>
<pragma file="bnn.cpp" line="66" pragmaType="interface" parentfunction="feedforward" mode="axis" port="input_stream" register="1" register_mode="both" name="" depth="-1"/>
<pragma file="bnn.cpp" line="67" pragmaType="interface" parentfunction="feedforward" mode="axis" port="output_stream" register="1" register_mode="both" name="" depth="-1"/>
<pragma file="bnn.cpp" line="68" pragmaType="interface" parentfunction="feedforward" mode="s_axilite" port="" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="bnn.cpp" line="70" pragmaType="array_partition" parentfunction="feedforward" dim="2" factor="0" mode="complete" dynamic="0" variable="W1"/>
<pragma file="bnn.cpp" line="71" pragmaType="array_partition" parentfunction="feedforward" dim="2" factor="0" mode="complete" dynamic="0" variable="W2"/>
<pragma file="bnn.cpp" line="72" pragmaType="array_partition" parentfunction="feedforward" dim="2" factor="0" mode="complete" dynamic="0" variable="W3"/>
<pragma file="bnn.cpp" line="75" pragmaType="array_partition" parentfunction="feedforward" dim="1" factor="0" mode="complete" dynamic="0" variable="X0_input"/>
<pragma file="bnn.cpp" line="84" pragmaType="array_partition" parentfunction="feedforward" dim="1" factor="0" mode="complete" dynamic="0" variable="layer1_quant"/>
<pragma file="bnn.cpp" line="85" pragmaType="array_partition" parentfunction="feedforward" dim="1" factor="0" mode="complete" dynamic="0" variable="layer2_quant"/>
<pragma file="C:/Xilinx/Vitis/2024.2/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi1ELb0EEC2EDq1_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_keep_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::RType<32, true>::minus operator-<64, true, 32, true>(ap_int_base<64, true> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::RType<($_0)32, true>::mult operator*<32, true>(int, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="C:/Xilinx/Vitis/2024.2/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<64, true>::ssdm_int(long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<65, true>::operator long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::RType<($_0)32, true>::minus operator-<64, true>(ap_int_base<64, true> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
</pragmas>
