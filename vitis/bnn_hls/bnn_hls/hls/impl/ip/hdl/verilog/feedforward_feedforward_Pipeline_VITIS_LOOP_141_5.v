// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module feedforward_feedforward_Pipeline_VITIS_LOOP_141_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        colsW2,
        layer2_activations_6_address0,
        layer2_activations_6_ce0,
        layer2_activations_6_we0,
        layer2_activations_6_d0,
        layer2_activations_6_address1,
        layer2_activations_6_ce1,
        layer2_activations_6_q1,
        colsW1,
        layer2_activations_5_address0,
        layer2_activations_5_ce0,
        layer2_activations_5_we0,
        layer2_activations_5_d0,
        layer2_activations_5_address1,
        layer2_activations_5_ce1,
        layer2_activations_5_q1,
        layer2_activations_4_address0,
        layer2_activations_4_ce0,
        layer2_activations_4_we0,
        layer2_activations_4_d0,
        layer2_activations_4_address1,
        layer2_activations_4_ce1,
        layer2_activations_4_q1,
        layer2_activations_address0,
        layer2_activations_ce0,
        layer2_activations_we0,
        layer2_activations_d0,
        layer2_activations_address1,
        layer2_activations_ce1,
        layer2_activations_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [30:0] colsW2;
output  [4:0] layer2_activations_6_address0;
output   layer2_activations_6_ce0;
output   layer2_activations_6_we0;
output  [31:0] layer2_activations_6_d0;
output  [4:0] layer2_activations_6_address1;
output   layer2_activations_6_ce1;
input  [31:0] layer2_activations_6_q1;
input  [31:0] colsW1;
output  [4:0] layer2_activations_5_address0;
output   layer2_activations_5_ce0;
output   layer2_activations_5_we0;
output  [31:0] layer2_activations_5_d0;
output  [4:0] layer2_activations_5_address1;
output   layer2_activations_5_ce1;
input  [31:0] layer2_activations_5_q1;
output  [4:0] layer2_activations_4_address0;
output   layer2_activations_4_ce0;
output   layer2_activations_4_we0;
output  [31:0] layer2_activations_4_d0;
output  [4:0] layer2_activations_4_address1;
output   layer2_activations_4_ce1;
input  [31:0] layer2_activations_4_q1;
output  [4:0] layer2_activations_address0;
output   layer2_activations_ce0;
output   layer2_activations_we0;
output  [31:0] layer2_activations_d0;
output  [4:0] layer2_activations_address1;
output   layer2_activations_ce1;
input  [31:0] layer2_activations_q1;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln141_3_fu_232_p2;
wire   [0:0] icmp_ln141_2_fu_218_p2;
wire   [0:0] icmp_ln141_1_fu_194_p2;
wire   [0:0] icmp_ln141_fu_152_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln141_reg_308;
reg   [0:0] icmp_ln141_reg_308_pp0_iter1_reg;
reg   [4:0] layer2_activations_addr_reg_312;
reg   [4:0] layer2_activations_addr_reg_312_pp0_iter1_reg;
reg   [0:0] icmp_ln141_1_reg_318;
reg   [0:0] icmp_ln141_1_reg_318_pp0_iter1_reg;
reg   [4:0] layer2_activations_4_addr_reg_322;
reg   [4:0] layer2_activations_4_addr_reg_322_pp0_iter1_reg;
reg   [0:0] icmp_ln141_2_reg_328;
reg   [0:0] icmp_ln141_2_reg_328_pp0_iter1_reg;
reg   [4:0] layer2_activations_5_addr_reg_332;
reg   [4:0] layer2_activations_5_addr_reg_332_pp0_iter1_reg;
reg   [0:0] icmp_ln141_3_reg_338;
reg   [0:0] icmp_ln141_3_reg_338_pp0_iter1_reg;
reg   [4:0] layer2_activations_6_addr_reg_342;
reg   [4:0] layer2_activations_6_addr_reg_342_pp0_iter1_reg;
wire   [31:0] sub_ln144_fu_255_p2;
reg   [31:0] sub_ln144_reg_348;
wire   [31:0] sub_ln144_1_fu_266_p2;
reg   [31:0] sub_ln144_1_reg_353;
wire   [31:0] sub_ln144_2_fu_277_p2;
reg   [31:0] sub_ln144_2_reg_358;
wire   [31:0] sub_ln144_3_fu_288_p2;
reg   [31:0] sub_ln144_3_reg_363;
wire   [63:0] zext_ln141_fu_168_p1;
wire    ap_block_pp0_stage0;
reg   [31:0] i_3_fu_56;
wire   [31:0] add_ln141_fu_238_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_i;
reg    layer2_activations_ce1_local;
reg    layer2_activations_we0_local;
reg    layer2_activations_ce0_local;
reg    layer2_activations_4_ce1_local;
reg    layer2_activations_4_we0_local;
reg    layer2_activations_4_ce0_local;
reg    layer2_activations_5_ce1_local;
reg    layer2_activations_5_we0_local;
reg    layer2_activations_5_ce0_local;
reg    layer2_activations_6_ce1_local;
reg    layer2_activations_6_we0_local;
reg    layer2_activations_6_ce0_local;
wire   [31:0] colsW2_cast_fu_140_p1;
wire   [4:0] lshr_ln3_fu_158_p4;
wire   [29:0] tmp_4_fu_176_p4;
wire   [30:0] or_ln1_fu_186_p3;
wire   [28:0] tmp_6_fu_200_p4;
wire   [30:0] or_ln141_1_fu_210_p3;
wire   [30:0] or_ln141_2_fu_224_p3;
wire   [31:0] shl_ln144_fu_249_p2;
wire   [31:0] shl_ln144_1_fu_260_p2;
wire   [31:0] shl_ln144_2_fu_271_p2;
wire   [31:0] shl_ln144_3_fu_282_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_364;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 i_3_fu_56 = 32'd0;
#0 ap_done_reg = 1'b0;
end

feedforward_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((1'b1 == ap_condition_364)) begin
            i_3_fu_56 <= add_ln141_fu_238_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_3_fu_56 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln141_1_reg_318 <= icmp_ln141_1_fu_194_p2;
        icmp_ln141_1_reg_318_pp0_iter1_reg <= icmp_ln141_1_reg_318;
        icmp_ln141_2_reg_328 <= icmp_ln141_2_fu_218_p2;
        icmp_ln141_2_reg_328_pp0_iter1_reg <= icmp_ln141_2_reg_328;
        icmp_ln141_3_reg_338 <= icmp_ln141_3_fu_232_p2;
        icmp_ln141_3_reg_338_pp0_iter1_reg <= icmp_ln141_3_reg_338;
        icmp_ln141_reg_308 <= icmp_ln141_fu_152_p2;
        icmp_ln141_reg_308_pp0_iter1_reg <= icmp_ln141_reg_308;
        layer2_activations_4_addr_reg_322 <= zext_ln141_fu_168_p1;
        layer2_activations_4_addr_reg_322_pp0_iter1_reg <= layer2_activations_4_addr_reg_322;
        layer2_activations_5_addr_reg_332 <= zext_ln141_fu_168_p1;
        layer2_activations_5_addr_reg_332_pp0_iter1_reg <= layer2_activations_5_addr_reg_332;
        layer2_activations_6_addr_reg_342 <= zext_ln141_fu_168_p1;
        layer2_activations_6_addr_reg_342_pp0_iter1_reg <= layer2_activations_6_addr_reg_342;
        layer2_activations_addr_reg_312 <= zext_ln141_fu_168_p1;
        layer2_activations_addr_reg_312_pp0_iter1_reg <= layer2_activations_addr_reg_312;
        sub_ln144_1_reg_353 <= sub_ln144_1_fu_266_p2;
        sub_ln144_2_reg_358 <= sub_ln144_2_fu_277_p2;
        sub_ln144_3_reg_363 <= sub_ln144_3_fu_288_p2;
        sub_ln144_reg_348 <= sub_ln144_fu_255_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((icmp_ln141_fu_152_p2 == 1'd0) | ((icmp_ln141_1_fu_194_p2 == 1'd0) | ((icmp_ln141_2_fu_218_p2 == 1'd0) | (icmp_ln141_3_fu_232_p2 == 1'd0)))))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i = 32'd0;
    end else begin
        ap_sig_allocacmp_i = i_3_fu_56;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer2_activations_4_ce0_local = 1'b1;
    end else begin
        layer2_activations_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_activations_4_ce1_local = 1'b1;
    end else begin
        layer2_activations_4_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln141_1_reg_318_pp0_iter1_reg == 1'd1) & (icmp_ln141_reg_308_pp0_iter1_reg == 1'd1))) begin
        layer2_activations_4_we0_local = 1'b1;
    end else begin
        layer2_activations_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer2_activations_5_ce0_local = 1'b1;
    end else begin
        layer2_activations_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_activations_5_ce1_local = 1'b1;
    end else begin
        layer2_activations_5_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln141_2_reg_328_pp0_iter1_reg == 1'd1) & (icmp_ln141_1_reg_318_pp0_iter1_reg == 1'd1) & (icmp_ln141_reg_308_pp0_iter1_reg == 1'd1))) begin
        layer2_activations_5_we0_local = 1'b1;
    end else begin
        layer2_activations_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer2_activations_6_ce0_local = 1'b1;
    end else begin
        layer2_activations_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_activations_6_ce1_local = 1'b1;
    end else begin
        layer2_activations_6_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln141_3_reg_338_pp0_iter1_reg == 1'd1) & (icmp_ln141_2_reg_328_pp0_iter1_reg == 1'd1) & (icmp_ln141_1_reg_318_pp0_iter1_reg == 1'd1) & (icmp_ln141_reg_308_pp0_iter1_reg == 1'd1))) begin
        layer2_activations_6_we0_local = 1'b1;
    end else begin
        layer2_activations_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer2_activations_ce0_local = 1'b1;
    end else begin
        layer2_activations_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_activations_ce1_local = 1'b1;
    end else begin
        layer2_activations_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln141_reg_308_pp0_iter1_reg == 1'd1))) begin
        layer2_activations_we0_local = 1'b1;
    end else begin
        layer2_activations_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln141_fu_238_p2 = (ap_sig_allocacmp_i + 32'd4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_364 = ((icmp_ln141_fu_152_p2 == 1'd1) & (icmp_ln141_1_fu_194_p2 == 1'd1) & (icmp_ln141_2_fu_218_p2 == 1'd1) & (icmp_ln141_3_fu_232_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign colsW2_cast_fu_140_p1 = colsW2;

assign icmp_ln141_1_fu_194_p2 = ((or_ln1_fu_186_p3 < colsW2) ? 1'b1 : 1'b0);

assign icmp_ln141_2_fu_218_p2 = ((or_ln141_1_fu_210_p3 < colsW2) ? 1'b1 : 1'b0);

assign icmp_ln141_3_fu_232_p2 = ((or_ln141_2_fu_224_p3 < colsW2) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_152_p2 = ((ap_sig_allocacmp_i < colsW2_cast_fu_140_p1) ? 1'b1 : 1'b0);

assign layer2_activations_4_address0 = layer2_activations_4_addr_reg_322_pp0_iter1_reg;

assign layer2_activations_4_address1 = zext_ln141_fu_168_p1;

assign layer2_activations_4_ce0 = layer2_activations_4_ce0_local;

assign layer2_activations_4_ce1 = layer2_activations_4_ce1_local;

assign layer2_activations_4_d0 = sub_ln144_1_reg_353;

assign layer2_activations_4_we0 = layer2_activations_4_we0_local;

assign layer2_activations_5_address0 = layer2_activations_5_addr_reg_332_pp0_iter1_reg;

assign layer2_activations_5_address1 = zext_ln141_fu_168_p1;

assign layer2_activations_5_ce0 = layer2_activations_5_ce0_local;

assign layer2_activations_5_ce1 = layer2_activations_5_ce1_local;

assign layer2_activations_5_d0 = sub_ln144_2_reg_358;

assign layer2_activations_5_we0 = layer2_activations_5_we0_local;

assign layer2_activations_6_address0 = layer2_activations_6_addr_reg_342_pp0_iter1_reg;

assign layer2_activations_6_address1 = zext_ln141_fu_168_p1;

assign layer2_activations_6_ce0 = layer2_activations_6_ce0_local;

assign layer2_activations_6_ce1 = layer2_activations_6_ce1_local;

assign layer2_activations_6_d0 = sub_ln144_3_reg_363;

assign layer2_activations_6_we0 = layer2_activations_6_we0_local;

assign layer2_activations_address0 = layer2_activations_addr_reg_312_pp0_iter1_reg;

assign layer2_activations_address1 = zext_ln141_fu_168_p1;

assign layer2_activations_ce0 = layer2_activations_ce0_local;

assign layer2_activations_ce1 = layer2_activations_ce1_local;

assign layer2_activations_d0 = sub_ln144_reg_348;

assign layer2_activations_we0 = layer2_activations_we0_local;

assign lshr_ln3_fu_158_p4 = {{ap_sig_allocacmp_i[6:2]}};

assign or_ln141_1_fu_210_p3 = {{tmp_6_fu_200_p4}, {2'd2}};

assign or_ln141_2_fu_224_p3 = {{tmp_6_fu_200_p4}, {2'd3}};

assign or_ln1_fu_186_p3 = {{tmp_4_fu_176_p4}, {1'd1}};

assign shl_ln144_1_fu_260_p2 = layer2_activations_4_q1 << 32'd1;

assign shl_ln144_2_fu_271_p2 = layer2_activations_5_q1 << 32'd1;

assign shl_ln144_3_fu_282_p2 = layer2_activations_6_q1 << 32'd1;

assign shl_ln144_fu_249_p2 = layer2_activations_q1 << 32'd1;

assign sub_ln144_1_fu_266_p2 = (shl_ln144_1_fu_260_p2 - colsW1);

assign sub_ln144_2_fu_277_p2 = (shl_ln144_2_fu_271_p2 - colsW1);

assign sub_ln144_3_fu_288_p2 = (shl_ln144_3_fu_282_p2 - colsW1);

assign sub_ln144_fu_255_p2 = (shl_ln144_fu_249_p2 - colsW1);

assign tmp_4_fu_176_p4 = {{ap_sig_allocacmp_i[30:1]}};

assign tmp_6_fu_200_p4 = {{ap_sig_allocacmp_i[30:2]}};

assign zext_ln141_fu_168_p1 = lshr_ln3_fu_158_p4;

endmodule //feedforward_feedforward_Pipeline_VITIS_LOOP_141_5
