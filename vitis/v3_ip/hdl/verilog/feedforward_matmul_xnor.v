// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module feedforward_matmul_xnor (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_0_val,
        A_1_val,
        A_2_val,
        A_3_val,
        A_4_val,
        A_5_val,
        A_6_val,
        A_7_val,
        A_8_val,
        A_9_val,
        A_10_val,
        A_11_val,
        A_12_val,
        A_13_val,
        A_14_val,
        A_15_val,
        A_16_val,
        A_17_val,
        A_18_val,
        A_19_val,
        A_20_val,
        A_21_val,
        A_22_val,
        A_23_val,
        A_24_val,
        A_25_val,
        A_26_val,
        A_27_val,
        A_28_val,
        A_29_val,
        A_30_val,
        A_31_val,
        A_32_val,
        A_33_val,
        A_34_val,
        A_35_val,
        A_36_val,
        A_37_val,
        A_38_val,
        A_39_val,
        A_40_val,
        A_41_val,
        A_42_val,
        A_43_val,
        A_44_val,
        A_45_val,
        A_46_val,
        A_47_val,
        A_48_val,
        A_49_val,
        A_50_val,
        A_51_val,
        A_52_val,
        A_53_val,
        A_54_val,
        A_55_val,
        A_56_val,
        A_57_val,
        A_58_val,
        A_59_val,
        A_60_val,
        A_61_val,
        A_62_val,
        A_63_val,
        res_address0,
        res_ce0,
        res_we0,
        res_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] A_0_val;
input  [31:0] A_1_val;
input  [31:0] A_2_val;
input  [31:0] A_3_val;
input  [31:0] A_4_val;
input  [31:0] A_5_val;
input  [31:0] A_6_val;
input  [31:0] A_7_val;
input  [31:0] A_8_val;
input  [31:0] A_9_val;
input  [31:0] A_10_val;
input  [31:0] A_11_val;
input  [31:0] A_12_val;
input  [31:0] A_13_val;
input  [31:0] A_14_val;
input  [31:0] A_15_val;
input  [31:0] A_16_val;
input  [31:0] A_17_val;
input  [31:0] A_18_val;
input  [31:0] A_19_val;
input  [31:0] A_20_val;
input  [31:0] A_21_val;
input  [31:0] A_22_val;
input  [31:0] A_23_val;
input  [31:0] A_24_val;
input  [31:0] A_25_val;
input  [31:0] A_26_val;
input  [31:0] A_27_val;
input  [31:0] A_28_val;
input  [31:0] A_29_val;
input  [31:0] A_30_val;
input  [31:0] A_31_val;
input  [31:0] A_32_val;
input  [31:0] A_33_val;
input  [31:0] A_34_val;
input  [31:0] A_35_val;
input  [31:0] A_36_val;
input  [31:0] A_37_val;
input  [31:0] A_38_val;
input  [31:0] A_39_val;
input  [31:0] A_40_val;
input  [31:0] A_41_val;
input  [31:0] A_42_val;
input  [31:0] A_43_val;
input  [31:0] A_44_val;
input  [31:0] A_45_val;
input  [31:0] A_46_val;
input  [31:0] A_47_val;
input  [31:0] A_48_val;
input  [31:0] A_49_val;
input  [31:0] A_50_val;
input  [31:0] A_51_val;
input  [31:0] A_52_val;
input  [31:0] A_53_val;
input  [31:0] A_54_val;
input  [31:0] A_55_val;
input  [31:0] A_56_val;
input  [31:0] A_57_val;
input  [31:0] A_58_val;
input  [31:0] A_59_val;
input  [31:0] A_60_val;
input  [31:0] A_61_val;
input  [31:0] A_62_val;
input  [31:0] A_63_val;
output  [3:0] res_address0;
output   res_ce0;
output   res_we0;
output  [31:0] res_d0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln61_fu_573_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [3:0] x_1_reg_1863;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] x_1_reg_1863_pp0_iter1_reg;
wire   [2:0] add_ln64_4_fu_1245_p2;
reg   [2:0] add_ln64_4_reg_1872;
wire   [2:0] add_ln64_7_fu_1271_p2;
reg   [2:0] add_ln64_7_reg_1877;
wire   [2:0] add_ln64_11_fu_1297_p2;
reg   [2:0] add_ln64_11_reg_1882;
wire   [2:0] add_ln64_14_fu_1323_p2;
reg   [2:0] add_ln64_14_reg_1887;
wire   [2:0] add_ln64_19_fu_1349_p2;
reg   [2:0] add_ln64_19_reg_1892;
wire   [2:0] add_ln64_22_fu_1375_p2;
reg   [2:0] add_ln64_22_reg_1897;
wire   [2:0] add_ln64_26_fu_1401_p2;
reg   [2:0] add_ln64_26_reg_1902;
wire   [2:0] add_ln64_29_fu_1427_p2;
reg   [2:0] add_ln64_29_reg_1907;
wire   [2:0] add_ln64_35_fu_1453_p2;
reg   [2:0] add_ln64_35_reg_1912;
wire   [2:0] add_ln64_38_fu_1479_p2;
reg   [2:0] add_ln64_38_reg_1917;
wire   [2:0] add_ln64_42_fu_1505_p2;
reg   [2:0] add_ln64_42_reg_1922;
wire   [2:0] add_ln64_45_fu_1531_p2;
reg   [2:0] add_ln64_45_reg_1927;
wire   [2:0] add_ln64_50_fu_1557_p2;
reg   [2:0] add_ln64_50_reg_1932;
wire   [2:0] add_ln64_53_fu_1583_p2;
reg   [2:0] add_ln64_53_reg_1937;
wire   [2:0] add_ln64_57_fu_1609_p2;
reg   [2:0] add_ln64_57_reg_1942;
wire   [2:0] add_ln64_60_fu_1635_p2;
reg   [2:0] add_ln64_60_reg_1947;
wire   [6:0] add_ln64_fu_1834_p2;
reg   [6:0] add_ln64_reg_1952;
wire   [63:0] zext_ln61_fu_1840_p1;
wire    ap_block_pp0_stage0;
reg   [3:0] x_fu_164;
wire   [3:0] add_ln61_fu_579_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_x_1;
reg    res_we0_local;
wire   [31:0] zext_ln62_fu_1851_p1;
reg    res_ce0_local;
wire   [0:0] icmp_ln21_fu_585_p2;
wire   [0:0] icmp_ln21_1_fu_591_p2;
wire   [0:0] icmp_ln21_9_fu_639_p2;
wire   [0:0] icmp_ln21_44_fu_849_p2;
wire   [0:0] icmp_ln21_53_fu_903_p2;
wire   [0:0] icmp_ln21_42_fu_837_p2;
wire   [0:0] icmp_ln21_49_fu_879_p2;
wire   [0:0] icmp_ln21_24_fu_729_p2;
wire   [0:0] icmp_ln21_59_fu_939_p2;
wire   [0:0] icmp_ln21_46_fu_861_p2;
wire   [0:0] icmp_ln21_10_fu_645_p2;
wire   [0:0] icmp_ln21_40_fu_825_p2;
wire   [0:0] icmp_ln21_52_fu_897_p2;
wire   [0:0] icmp_ln21_27_fu_747_p2;
wire   [0:0] icmp_ln21_37_fu_807_p2;
wire   [0:0] icmp_ln21_4_fu_609_p2;
wire   [0:0] icmp_ln21_17_fu_687_p2;
wire   [0:0] icmp_ln21_21_fu_711_p2;
wire   [0:0] icmp_ln21_23_fu_723_p2;
wire   [0:0] icmp_ln21_48_fu_873_p2;
wire   [0:0] icmp_ln21_16_fu_681_p2;
wire   [0:0] icmp_ln21_18_fu_693_p2;
wire   [0:0] icmp_ln21_51_fu_891_p2;
wire   [0:0] icmp_ln21_43_fu_843_p2;
wire   [0:0] icmp_ln21_14_fu_669_p2;
wire   [0:0] icmp_ln21_41_fu_831_p2;
wire   [0:0] icmp_ln21_55_fu_915_p2;
wire   [0:0] icmp_ln21_25_fu_735_p2;
wire   [0:0] icmp_ln21_2_fu_597_p2;
wire   [0:0] icmp_ln21_33_fu_783_p2;
wire   [0:0] icmp_ln21_32_fu_777_p2;
wire   [0:0] icmp_ln21_50_fu_885_p2;
wire   [0:0] icmp_ln21_34_fu_789_p2;
wire   [0:0] icmp_ln21_54_fu_909_p2;
wire   [0:0] icmp_ln21_29_fu_759_p2;
wire   [0:0] icmp_ln21_62_fu_957_p2;
wire   [0:0] icmp_ln21_63_fu_963_p2;
wire   [0:0] icmp_ln21_20_fu_705_p2;
wire   [0:0] icmp_ln21_61_fu_951_p2;
wire   [0:0] icmp_ln21_36_fu_801_p2;
wire   [0:0] icmp_ln21_60_fu_945_p2;
wire   [0:0] icmp_ln21_28_fu_753_p2;
wire   [0:0] icmp_ln21_8_fu_633_p2;
wire   [0:0] icmp_ln21_12_fu_657_p2;
wire   [0:0] icmp_ln21_7_fu_627_p2;
wire   [0:0] icmp_ln21_58_fu_933_p2;
wire   [0:0] icmp_ln21_6_fu_621_p2;
wire   [0:0] icmp_ln21_57_fu_927_p2;
wire   [0:0] icmp_ln21_26_fu_741_p2;
wire   [0:0] icmp_ln21_15_fu_675_p2;
wire   [0:0] icmp_ln21_56_fu_921_p2;
wire   [0:0] icmp_ln21_38_fu_813_p2;
wire   [0:0] icmp_ln21_11_fu_651_p2;
wire   [0:0] icmp_ln21_45_fu_855_p2;
wire   [0:0] icmp_ln21_19_fu_699_p2;
wire   [0:0] icmp_ln21_3_fu_603_p2;
wire   [0:0] icmp_ln21_47_fu_867_p2;
wire   [0:0] icmp_ln21_31_fu_771_p2;
wire   [0:0] icmp_ln21_13_fu_663_p2;
wire   [0:0] icmp_ln21_39_fu_819_p2;
wire   [0:0] icmp_ln21_30_fu_765_p2;
wire   [0:0] icmp_ln21_35_fu_795_p2;
wire   [0:0] icmp_ln21_22_fu_717_p2;
wire   [0:0] icmp_ln21_5_fu_615_p2;
wire   [1:0] icmp_ln21_1_cast_fu_973_p1;
wire   [1:0] icmp_ln21_cast_fu_969_p1;
wire   [1:0] add_ln64_2_fu_1225_p2;
wire   [1:0] icmp_ln21_9_cast_fu_977_p1;
wire   [1:0] icmp_ln21_44_cast_fu_981_p1;
wire   [1:0] add_ln64_3_fu_1235_p2;
wire   [2:0] zext_ln64_2_fu_1241_p1;
wire   [2:0] zext_ln64_1_fu_1231_p1;
wire   [1:0] icmp_ln21_53_cast_fu_985_p1;
wire   [1:0] icmp_ln21_42_cast_fu_989_p1;
wire   [1:0] add_ln64_5_fu_1251_p2;
wire   [1:0] icmp_ln21_49_cast_fu_993_p1;
wire   [1:0] icmp_ln21_24_cast_fu_997_p1;
wire   [1:0] add_ln64_6_fu_1261_p2;
wire   [2:0] zext_ln64_5_fu_1267_p1;
wire   [2:0] zext_ln64_4_fu_1257_p1;
wire   [1:0] icmp_ln21_59_cast_fu_1001_p1;
wire   [1:0] icmp_ln21_46_cast_fu_1005_p1;
wire   [1:0] add_ln64_9_fu_1277_p2;
wire   [1:0] icmp_ln21_10_cast_fu_1009_p1;
wire   [1:0] icmp_ln21_40_cast_fu_1013_p1;
wire   [1:0] add_ln64_10_fu_1287_p2;
wire   [2:0] zext_ln64_9_fu_1293_p1;
wire   [2:0] zext_ln64_8_fu_1283_p1;
wire   [1:0] icmp_ln21_52_cast_fu_1017_p1;
wire   [1:0] icmp_ln21_27_cast_fu_1021_p1;
wire   [1:0] add_ln64_12_fu_1303_p2;
wire   [1:0] icmp_ln21_37_cast_fu_1025_p1;
wire   [1:0] icmp_ln21_4_cast_fu_1029_p1;
wire   [1:0] add_ln64_13_fu_1313_p2;
wire   [2:0] zext_ln64_12_fu_1319_p1;
wire   [2:0] zext_ln64_11_fu_1309_p1;
wire   [1:0] icmp_ln21_17_cast_fu_1033_p1;
wire   [1:0] icmp_ln21_21_cast_fu_1037_p1;
wire   [1:0] add_ln64_17_fu_1329_p2;
wire   [1:0] icmp_ln21_23_cast_fu_1041_p1;
wire   [1:0] icmp_ln21_48_cast_fu_1045_p1;
wire   [1:0] add_ln64_18_fu_1339_p2;
wire   [2:0] zext_ln64_17_fu_1345_p1;
wire   [2:0] zext_ln64_16_fu_1335_p1;
wire   [1:0] icmp_ln21_16_cast_fu_1049_p1;
wire   [1:0] icmp_ln21_18_cast_fu_1053_p1;
wire   [1:0] add_ln64_20_fu_1355_p2;
wire   [1:0] icmp_ln21_51_cast_fu_1057_p1;
wire   [1:0] icmp_ln21_43_cast_fu_1061_p1;
wire   [1:0] add_ln64_21_fu_1365_p2;
wire   [2:0] zext_ln64_20_fu_1371_p1;
wire   [2:0] zext_ln64_19_fu_1361_p1;
wire   [1:0] icmp_ln21_14_cast_fu_1065_p1;
wire   [1:0] icmp_ln21_41_cast_fu_1069_p1;
wire   [1:0] add_ln64_24_fu_1381_p2;
wire   [1:0] icmp_ln21_55_cast_fu_1073_p1;
wire   [1:0] icmp_ln21_25_cast_fu_1077_p1;
wire   [1:0] add_ln64_25_fu_1391_p2;
wire   [2:0] zext_ln64_24_fu_1397_p1;
wire   [2:0] zext_ln64_23_fu_1387_p1;
wire   [1:0] icmp_ln21_2_cast_fu_1081_p1;
wire   [1:0] icmp_ln21_33_cast_fu_1085_p1;
wire   [1:0] add_ln64_27_fu_1407_p2;
wire   [1:0] icmp_ln21_32_cast_fu_1089_p1;
wire   [1:0] icmp_ln21_50_cast_fu_1093_p1;
wire   [1:0] add_ln64_28_fu_1417_p2;
wire   [2:0] zext_ln64_27_fu_1423_p1;
wire   [2:0] zext_ln64_26_fu_1413_p1;
wire   [1:0] icmp_ln21_34_cast_fu_1097_p1;
wire   [1:0] icmp_ln21_54_cast_fu_1101_p1;
wire   [1:0] add_ln64_33_fu_1433_p2;
wire   [1:0] icmp_ln21_29_cast_fu_1105_p1;
wire   [1:0] icmp_ln21_62_cast_fu_1109_p1;
wire   [1:0] add_ln64_34_fu_1443_p2;
wire   [2:0] zext_ln64_33_fu_1449_p1;
wire   [2:0] zext_ln64_32_fu_1439_p1;
wire   [1:0] icmp_ln21_63_cast_fu_1113_p1;
wire   [1:0] icmp_ln21_20_cast_fu_1117_p1;
wire   [1:0] add_ln64_36_fu_1459_p2;
wire   [1:0] icmp_ln21_61_cast_fu_1121_p1;
wire   [1:0] icmp_ln21_36_cast_fu_1125_p1;
wire   [1:0] add_ln64_37_fu_1469_p2;
wire   [2:0] zext_ln64_36_fu_1475_p1;
wire   [2:0] zext_ln64_35_fu_1465_p1;
wire   [1:0] icmp_ln21_60_cast_fu_1129_p1;
wire   [1:0] icmp_ln21_28_cast_fu_1133_p1;
wire   [1:0] add_ln64_40_fu_1485_p2;
wire   [1:0] icmp_ln21_8_cast_fu_1137_p1;
wire   [1:0] icmp_ln21_12_cast_fu_1141_p1;
wire   [1:0] add_ln64_41_fu_1495_p2;
wire   [2:0] zext_ln64_40_fu_1501_p1;
wire   [2:0] zext_ln64_39_fu_1491_p1;
wire   [1:0] icmp_ln21_7_cast_fu_1145_p1;
wire   [1:0] icmp_ln21_58_cast_fu_1149_p1;
wire   [1:0] add_ln64_43_fu_1511_p2;
wire   [1:0] icmp_ln21_6_cast_fu_1153_p1;
wire   [1:0] icmp_ln21_57_cast_fu_1157_p1;
wire   [1:0] add_ln64_44_fu_1521_p2;
wire   [2:0] zext_ln64_43_fu_1527_p1;
wire   [2:0] zext_ln64_42_fu_1517_p1;
wire   [1:0] icmp_ln21_26_cast_fu_1161_p1;
wire   [1:0] icmp_ln21_15_cast_fu_1165_p1;
wire   [1:0] add_ln64_48_fu_1537_p2;
wire   [1:0] icmp_ln21_56_cast_fu_1169_p1;
wire   [1:0] icmp_ln21_38_cast_fu_1173_p1;
wire   [1:0] add_ln64_49_fu_1547_p2;
wire   [2:0] zext_ln64_48_fu_1553_p1;
wire   [2:0] zext_ln64_47_fu_1543_p1;
wire   [1:0] icmp_ln21_11_cast_fu_1177_p1;
wire   [1:0] icmp_ln21_45_cast_fu_1181_p1;
wire   [1:0] add_ln64_51_fu_1563_p2;
wire   [1:0] icmp_ln21_19_cast_fu_1185_p1;
wire   [1:0] icmp_ln21_3_cast_fu_1189_p1;
wire   [1:0] add_ln64_52_fu_1573_p2;
wire   [2:0] zext_ln64_51_fu_1579_p1;
wire   [2:0] zext_ln64_50_fu_1569_p1;
wire   [1:0] icmp_ln21_47_cast_fu_1193_p1;
wire   [1:0] icmp_ln21_31_cast_fu_1197_p1;
wire   [1:0] add_ln64_55_fu_1589_p2;
wire   [1:0] icmp_ln21_13_cast_fu_1201_p1;
wire   [1:0] icmp_ln21_39_cast_fu_1205_p1;
wire   [1:0] add_ln64_56_fu_1599_p2;
wire   [2:0] zext_ln64_55_fu_1605_p1;
wire   [2:0] zext_ln64_54_fu_1595_p1;
wire   [1:0] icmp_ln21_30_cast_fu_1209_p1;
wire   [1:0] icmp_ln21_35_cast_fu_1213_p1;
wire   [1:0] add_ln64_58_fu_1615_p2;
wire   [1:0] icmp_ln21_22_cast_fu_1217_p1;
wire   [1:0] zext_ln64_fu_1221_p1;
wire   [1:0] add_ln64_59_fu_1625_p2;
wire   [2:0] zext_ln64_58_fu_1631_p1;
wire   [2:0] zext_ln64_57_fu_1621_p1;
wire   [3:0] zext_ln64_6_fu_1649_p1;
wire   [3:0] zext_ln64_3_fu_1646_p1;
wire   [3:0] add_ln64_8_fu_1652_p2;
wire   [3:0] zext_ln64_13_fu_1665_p1;
wire   [3:0] zext_ln64_10_fu_1662_p1;
wire   [3:0] add_ln64_15_fu_1668_p2;
wire   [4:0] zext_ln64_14_fu_1674_p1;
wire   [4:0] zext_ln64_7_fu_1658_p1;
wire   [4:0] add_ln64_16_fu_1678_p2;
wire   [3:0] zext_ln64_21_fu_1691_p1;
wire   [3:0] zext_ln64_18_fu_1688_p1;
wire   [3:0] add_ln64_23_fu_1694_p2;
wire   [3:0] zext_ln64_28_fu_1707_p1;
wire   [3:0] zext_ln64_25_fu_1704_p1;
wire   [3:0] add_ln64_30_fu_1710_p2;
wire   [4:0] zext_ln64_29_fu_1716_p1;
wire   [4:0] zext_ln64_22_fu_1700_p1;
wire   [4:0] add_ln64_31_fu_1720_p2;
wire   [5:0] zext_ln64_30_fu_1726_p1;
wire   [5:0] zext_ln64_15_fu_1684_p1;
wire   [5:0] add_ln64_32_fu_1730_p2;
wire   [3:0] zext_ln64_37_fu_1743_p1;
wire   [3:0] zext_ln64_34_fu_1740_p1;
wire   [3:0] add_ln64_39_fu_1746_p2;
wire   [3:0] zext_ln64_44_fu_1759_p1;
wire   [3:0] zext_ln64_41_fu_1756_p1;
wire   [3:0] add_ln64_46_fu_1762_p2;
wire   [4:0] zext_ln64_45_fu_1768_p1;
wire   [4:0] zext_ln64_38_fu_1752_p1;
wire   [4:0] add_ln64_47_fu_1772_p2;
wire   [3:0] zext_ln64_52_fu_1785_p1;
wire   [3:0] zext_ln64_49_fu_1782_p1;
wire   [3:0] add_ln64_54_fu_1788_p2;
wire   [3:0] zext_ln64_59_fu_1801_p1;
wire   [3:0] zext_ln64_56_fu_1798_p1;
wire   [3:0] add_ln64_61_fu_1804_p2;
wire   [4:0] zext_ln64_60_fu_1810_p1;
wire   [4:0] zext_ln64_53_fu_1794_p1;
wire   [4:0] add_ln64_62_fu_1814_p2;
wire   [5:0] zext_ln64_61_fu_1820_p1;
wire   [5:0] zext_ln64_46_fu_1778_p1;
wire   [5:0] add_ln64_63_fu_1824_p2;
wire   [6:0] zext_ln64_62_fu_1830_p1;
wire   [6:0] zext_ln64_31_fu_1736_p1;
wire   [14:0] cnt_fu_1844_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 x_fu_164 = 4'd0;
#0 ap_done_reg = 1'b0;
end

feedforward_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln61_fu_573_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_164 <= add_ln61_fu_579_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_164 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln64_11_reg_1882 <= add_ln64_11_fu_1297_p2;
        add_ln64_14_reg_1887 <= add_ln64_14_fu_1323_p2;
        add_ln64_19_reg_1892 <= add_ln64_19_fu_1349_p2;
        add_ln64_22_reg_1897 <= add_ln64_22_fu_1375_p2;
        add_ln64_26_reg_1902 <= add_ln64_26_fu_1401_p2;
        add_ln64_29_reg_1907 <= add_ln64_29_fu_1427_p2;
        add_ln64_35_reg_1912 <= add_ln64_35_fu_1453_p2;
        add_ln64_38_reg_1917 <= add_ln64_38_fu_1479_p2;
        add_ln64_42_reg_1922 <= add_ln64_42_fu_1505_p2;
        add_ln64_45_reg_1927 <= add_ln64_45_fu_1531_p2;
        add_ln64_4_reg_1872 <= add_ln64_4_fu_1245_p2;
        add_ln64_50_reg_1932 <= add_ln64_50_fu_1557_p2;
        add_ln64_53_reg_1937 <= add_ln64_53_fu_1583_p2;
        add_ln64_57_reg_1942 <= add_ln64_57_fu_1609_p2;
        add_ln64_60_reg_1947 <= add_ln64_60_fu_1635_p2;
        add_ln64_7_reg_1877 <= add_ln64_7_fu_1271_p2;
        add_ln64_reg_1952 <= add_ln64_fu_1834_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        x_1_reg_1863 <= ap_sig_allocacmp_x_1;
        x_1_reg_1863_pp0_iter1_reg <= x_1_reg_1863;
    end
end

always @ (*) begin
    if (((icmp_ln61_fu_573_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_x_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_164;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_ce0_local = 1'b1;
    end else begin
        res_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_we0_local = 1'b1;
    end else begin
        res_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln61_fu_579_p2 = (ap_sig_allocacmp_x_1 + 4'd1);

assign add_ln64_10_fu_1287_p2 = (icmp_ln21_10_cast_fu_1009_p1 + icmp_ln21_40_cast_fu_1013_p1);

assign add_ln64_11_fu_1297_p2 = (zext_ln64_9_fu_1293_p1 + zext_ln64_8_fu_1283_p1);

assign add_ln64_12_fu_1303_p2 = (icmp_ln21_52_cast_fu_1017_p1 + icmp_ln21_27_cast_fu_1021_p1);

assign add_ln64_13_fu_1313_p2 = (icmp_ln21_37_cast_fu_1025_p1 + icmp_ln21_4_cast_fu_1029_p1);

assign add_ln64_14_fu_1323_p2 = (zext_ln64_12_fu_1319_p1 + zext_ln64_11_fu_1309_p1);

assign add_ln64_15_fu_1668_p2 = (zext_ln64_13_fu_1665_p1 + zext_ln64_10_fu_1662_p1);

assign add_ln64_16_fu_1678_p2 = (zext_ln64_14_fu_1674_p1 + zext_ln64_7_fu_1658_p1);

assign add_ln64_17_fu_1329_p2 = (icmp_ln21_17_cast_fu_1033_p1 + icmp_ln21_21_cast_fu_1037_p1);

assign add_ln64_18_fu_1339_p2 = (icmp_ln21_23_cast_fu_1041_p1 + icmp_ln21_48_cast_fu_1045_p1);

assign add_ln64_19_fu_1349_p2 = (zext_ln64_17_fu_1345_p1 + zext_ln64_16_fu_1335_p1);

assign add_ln64_20_fu_1355_p2 = (icmp_ln21_16_cast_fu_1049_p1 + icmp_ln21_18_cast_fu_1053_p1);

assign add_ln64_21_fu_1365_p2 = (icmp_ln21_51_cast_fu_1057_p1 + icmp_ln21_43_cast_fu_1061_p1);

assign add_ln64_22_fu_1375_p2 = (zext_ln64_20_fu_1371_p1 + zext_ln64_19_fu_1361_p1);

assign add_ln64_23_fu_1694_p2 = (zext_ln64_21_fu_1691_p1 + zext_ln64_18_fu_1688_p1);

assign add_ln64_24_fu_1381_p2 = (icmp_ln21_14_cast_fu_1065_p1 + icmp_ln21_41_cast_fu_1069_p1);

assign add_ln64_25_fu_1391_p2 = (icmp_ln21_55_cast_fu_1073_p1 + icmp_ln21_25_cast_fu_1077_p1);

assign add_ln64_26_fu_1401_p2 = (zext_ln64_24_fu_1397_p1 + zext_ln64_23_fu_1387_p1);

assign add_ln64_27_fu_1407_p2 = (icmp_ln21_2_cast_fu_1081_p1 + icmp_ln21_33_cast_fu_1085_p1);

assign add_ln64_28_fu_1417_p2 = (icmp_ln21_32_cast_fu_1089_p1 + icmp_ln21_50_cast_fu_1093_p1);

assign add_ln64_29_fu_1427_p2 = (zext_ln64_27_fu_1423_p1 + zext_ln64_26_fu_1413_p1);

assign add_ln64_2_fu_1225_p2 = (icmp_ln21_1_cast_fu_973_p1 + icmp_ln21_cast_fu_969_p1);

assign add_ln64_30_fu_1710_p2 = (zext_ln64_28_fu_1707_p1 + zext_ln64_25_fu_1704_p1);

assign add_ln64_31_fu_1720_p2 = (zext_ln64_29_fu_1716_p1 + zext_ln64_22_fu_1700_p1);

assign add_ln64_32_fu_1730_p2 = (zext_ln64_30_fu_1726_p1 + zext_ln64_15_fu_1684_p1);

assign add_ln64_33_fu_1433_p2 = (icmp_ln21_34_cast_fu_1097_p1 + icmp_ln21_54_cast_fu_1101_p1);

assign add_ln64_34_fu_1443_p2 = (icmp_ln21_29_cast_fu_1105_p1 + icmp_ln21_62_cast_fu_1109_p1);

assign add_ln64_35_fu_1453_p2 = (zext_ln64_33_fu_1449_p1 + zext_ln64_32_fu_1439_p1);

assign add_ln64_36_fu_1459_p2 = (icmp_ln21_63_cast_fu_1113_p1 + icmp_ln21_20_cast_fu_1117_p1);

assign add_ln64_37_fu_1469_p2 = (icmp_ln21_61_cast_fu_1121_p1 + icmp_ln21_36_cast_fu_1125_p1);

assign add_ln64_38_fu_1479_p2 = (zext_ln64_36_fu_1475_p1 + zext_ln64_35_fu_1465_p1);

assign add_ln64_39_fu_1746_p2 = (zext_ln64_37_fu_1743_p1 + zext_ln64_34_fu_1740_p1);

assign add_ln64_3_fu_1235_p2 = (icmp_ln21_9_cast_fu_977_p1 + icmp_ln21_44_cast_fu_981_p1);

assign add_ln64_40_fu_1485_p2 = (icmp_ln21_60_cast_fu_1129_p1 + icmp_ln21_28_cast_fu_1133_p1);

assign add_ln64_41_fu_1495_p2 = (icmp_ln21_8_cast_fu_1137_p1 + icmp_ln21_12_cast_fu_1141_p1);

assign add_ln64_42_fu_1505_p2 = (zext_ln64_40_fu_1501_p1 + zext_ln64_39_fu_1491_p1);

assign add_ln64_43_fu_1511_p2 = (icmp_ln21_7_cast_fu_1145_p1 + icmp_ln21_58_cast_fu_1149_p1);

assign add_ln64_44_fu_1521_p2 = (icmp_ln21_6_cast_fu_1153_p1 + icmp_ln21_57_cast_fu_1157_p1);

assign add_ln64_45_fu_1531_p2 = (zext_ln64_43_fu_1527_p1 + zext_ln64_42_fu_1517_p1);

assign add_ln64_46_fu_1762_p2 = (zext_ln64_44_fu_1759_p1 + zext_ln64_41_fu_1756_p1);

assign add_ln64_47_fu_1772_p2 = (zext_ln64_45_fu_1768_p1 + zext_ln64_38_fu_1752_p1);

assign add_ln64_48_fu_1537_p2 = (icmp_ln21_26_cast_fu_1161_p1 + icmp_ln21_15_cast_fu_1165_p1);

assign add_ln64_49_fu_1547_p2 = (icmp_ln21_56_cast_fu_1169_p1 + icmp_ln21_38_cast_fu_1173_p1);

assign add_ln64_4_fu_1245_p2 = (zext_ln64_2_fu_1241_p1 + zext_ln64_1_fu_1231_p1);

assign add_ln64_50_fu_1557_p2 = (zext_ln64_48_fu_1553_p1 + zext_ln64_47_fu_1543_p1);

assign add_ln64_51_fu_1563_p2 = (icmp_ln21_11_cast_fu_1177_p1 + icmp_ln21_45_cast_fu_1181_p1);

assign add_ln64_52_fu_1573_p2 = (icmp_ln21_19_cast_fu_1185_p1 + icmp_ln21_3_cast_fu_1189_p1);

assign add_ln64_53_fu_1583_p2 = (zext_ln64_51_fu_1579_p1 + zext_ln64_50_fu_1569_p1);

assign add_ln64_54_fu_1788_p2 = (zext_ln64_52_fu_1785_p1 + zext_ln64_49_fu_1782_p1);

assign add_ln64_55_fu_1589_p2 = (icmp_ln21_47_cast_fu_1193_p1 + icmp_ln21_31_cast_fu_1197_p1);

assign add_ln64_56_fu_1599_p2 = (icmp_ln21_13_cast_fu_1201_p1 + icmp_ln21_39_cast_fu_1205_p1);

assign add_ln64_57_fu_1609_p2 = (zext_ln64_55_fu_1605_p1 + zext_ln64_54_fu_1595_p1);

assign add_ln64_58_fu_1615_p2 = (icmp_ln21_30_cast_fu_1209_p1 + icmp_ln21_35_cast_fu_1213_p1);

assign add_ln64_59_fu_1625_p2 = (icmp_ln21_22_cast_fu_1217_p1 + zext_ln64_fu_1221_p1);

assign add_ln64_5_fu_1251_p2 = (icmp_ln21_53_cast_fu_985_p1 + icmp_ln21_42_cast_fu_989_p1);

assign add_ln64_60_fu_1635_p2 = (zext_ln64_58_fu_1631_p1 + zext_ln64_57_fu_1621_p1);

assign add_ln64_61_fu_1804_p2 = (zext_ln64_59_fu_1801_p1 + zext_ln64_56_fu_1798_p1);

assign add_ln64_62_fu_1814_p2 = (zext_ln64_60_fu_1810_p1 + zext_ln64_53_fu_1794_p1);

assign add_ln64_63_fu_1824_p2 = (zext_ln64_61_fu_1820_p1 + zext_ln64_46_fu_1778_p1);

assign add_ln64_6_fu_1261_p2 = (icmp_ln21_49_cast_fu_993_p1 + icmp_ln21_24_cast_fu_997_p1);

assign add_ln64_7_fu_1271_p2 = (zext_ln64_5_fu_1267_p1 + zext_ln64_4_fu_1257_p1);

assign add_ln64_8_fu_1652_p2 = (zext_ln64_6_fu_1649_p1 + zext_ln64_3_fu_1646_p1);

assign add_ln64_9_fu_1277_p2 = (icmp_ln21_59_cast_fu_1001_p1 + icmp_ln21_46_cast_fu_1005_p1);

assign add_ln64_fu_1834_p2 = (zext_ln64_62_fu_1830_p1 + zext_ln64_31_fu_1736_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign cnt_fu_1844_p3 = {{add_ln64_reg_1952}, {8'd0}};

assign icmp_ln21_10_cast_fu_1009_p1 = icmp_ln21_10_fu_645_p2;

assign icmp_ln21_10_fu_645_p2 = ((A_10_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_11_cast_fu_1177_p1 = icmp_ln21_11_fu_651_p2;

assign icmp_ln21_11_fu_651_p2 = ((A_11_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_12_cast_fu_1141_p1 = icmp_ln21_12_fu_657_p2;

assign icmp_ln21_12_fu_657_p2 = ((A_12_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_13_cast_fu_1201_p1 = icmp_ln21_13_fu_663_p2;

assign icmp_ln21_13_fu_663_p2 = ((A_13_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_14_cast_fu_1065_p1 = icmp_ln21_14_fu_669_p2;

assign icmp_ln21_14_fu_669_p2 = ((A_14_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_15_cast_fu_1165_p1 = icmp_ln21_15_fu_675_p2;

assign icmp_ln21_15_fu_675_p2 = ((A_15_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_16_cast_fu_1049_p1 = icmp_ln21_16_fu_681_p2;

assign icmp_ln21_16_fu_681_p2 = ((A_16_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_17_cast_fu_1033_p1 = icmp_ln21_17_fu_687_p2;

assign icmp_ln21_17_fu_687_p2 = ((A_17_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_18_cast_fu_1053_p1 = icmp_ln21_18_fu_693_p2;

assign icmp_ln21_18_fu_693_p2 = ((A_18_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_19_cast_fu_1185_p1 = icmp_ln21_19_fu_699_p2;

assign icmp_ln21_19_fu_699_p2 = ((A_19_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_1_cast_fu_973_p1 = icmp_ln21_1_fu_591_p2;

assign icmp_ln21_1_fu_591_p2 = ((A_1_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_20_cast_fu_1117_p1 = icmp_ln21_20_fu_705_p2;

assign icmp_ln21_20_fu_705_p2 = ((A_20_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_21_cast_fu_1037_p1 = icmp_ln21_21_fu_711_p2;

assign icmp_ln21_21_fu_711_p2 = ((A_21_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_22_cast_fu_1217_p1 = icmp_ln21_22_fu_717_p2;

assign icmp_ln21_22_fu_717_p2 = ((A_22_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_23_cast_fu_1041_p1 = icmp_ln21_23_fu_723_p2;

assign icmp_ln21_23_fu_723_p2 = ((A_23_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_24_cast_fu_997_p1 = icmp_ln21_24_fu_729_p2;

assign icmp_ln21_24_fu_729_p2 = ((A_24_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_25_cast_fu_1077_p1 = icmp_ln21_25_fu_735_p2;

assign icmp_ln21_25_fu_735_p2 = ((A_25_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_26_cast_fu_1161_p1 = icmp_ln21_26_fu_741_p2;

assign icmp_ln21_26_fu_741_p2 = ((A_26_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_27_cast_fu_1021_p1 = icmp_ln21_27_fu_747_p2;

assign icmp_ln21_27_fu_747_p2 = ((A_27_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_28_cast_fu_1133_p1 = icmp_ln21_28_fu_753_p2;

assign icmp_ln21_28_fu_753_p2 = ((A_28_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_29_cast_fu_1105_p1 = icmp_ln21_29_fu_759_p2;

assign icmp_ln21_29_fu_759_p2 = ((A_29_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_2_cast_fu_1081_p1 = icmp_ln21_2_fu_597_p2;

assign icmp_ln21_2_fu_597_p2 = ((A_2_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_30_cast_fu_1209_p1 = icmp_ln21_30_fu_765_p2;

assign icmp_ln21_30_fu_765_p2 = ((A_30_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_31_cast_fu_1197_p1 = icmp_ln21_31_fu_771_p2;

assign icmp_ln21_31_fu_771_p2 = ((A_31_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_32_cast_fu_1089_p1 = icmp_ln21_32_fu_777_p2;

assign icmp_ln21_32_fu_777_p2 = ((A_32_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_33_cast_fu_1085_p1 = icmp_ln21_33_fu_783_p2;

assign icmp_ln21_33_fu_783_p2 = ((A_33_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_34_cast_fu_1097_p1 = icmp_ln21_34_fu_789_p2;

assign icmp_ln21_34_fu_789_p2 = ((A_34_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_35_cast_fu_1213_p1 = icmp_ln21_35_fu_795_p2;

assign icmp_ln21_35_fu_795_p2 = ((A_35_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_36_cast_fu_1125_p1 = icmp_ln21_36_fu_801_p2;

assign icmp_ln21_36_fu_801_p2 = ((A_36_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_37_cast_fu_1025_p1 = icmp_ln21_37_fu_807_p2;

assign icmp_ln21_37_fu_807_p2 = ((A_37_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_38_cast_fu_1173_p1 = icmp_ln21_38_fu_813_p2;

assign icmp_ln21_38_fu_813_p2 = ((A_38_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_39_cast_fu_1205_p1 = icmp_ln21_39_fu_819_p2;

assign icmp_ln21_39_fu_819_p2 = ((A_39_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_3_cast_fu_1189_p1 = icmp_ln21_3_fu_603_p2;

assign icmp_ln21_3_fu_603_p2 = ((A_3_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_40_cast_fu_1013_p1 = icmp_ln21_40_fu_825_p2;

assign icmp_ln21_40_fu_825_p2 = ((A_40_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_41_cast_fu_1069_p1 = icmp_ln21_41_fu_831_p2;

assign icmp_ln21_41_fu_831_p2 = ((A_41_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_42_cast_fu_989_p1 = icmp_ln21_42_fu_837_p2;

assign icmp_ln21_42_fu_837_p2 = ((A_42_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_43_cast_fu_1061_p1 = icmp_ln21_43_fu_843_p2;

assign icmp_ln21_43_fu_843_p2 = ((A_43_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_44_cast_fu_981_p1 = icmp_ln21_44_fu_849_p2;

assign icmp_ln21_44_fu_849_p2 = ((A_44_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_45_cast_fu_1181_p1 = icmp_ln21_45_fu_855_p2;

assign icmp_ln21_45_fu_855_p2 = ((A_45_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_46_cast_fu_1005_p1 = icmp_ln21_46_fu_861_p2;

assign icmp_ln21_46_fu_861_p2 = ((A_46_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_47_cast_fu_1193_p1 = icmp_ln21_47_fu_867_p2;

assign icmp_ln21_47_fu_867_p2 = ((A_47_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_48_cast_fu_1045_p1 = icmp_ln21_48_fu_873_p2;

assign icmp_ln21_48_fu_873_p2 = ((A_48_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_49_cast_fu_993_p1 = icmp_ln21_49_fu_879_p2;

assign icmp_ln21_49_fu_879_p2 = ((A_49_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_4_cast_fu_1029_p1 = icmp_ln21_4_fu_609_p2;

assign icmp_ln21_4_fu_609_p2 = ((A_4_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_50_cast_fu_1093_p1 = icmp_ln21_50_fu_885_p2;

assign icmp_ln21_50_fu_885_p2 = ((A_50_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_51_cast_fu_1057_p1 = icmp_ln21_51_fu_891_p2;

assign icmp_ln21_51_fu_891_p2 = ((A_51_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_52_cast_fu_1017_p1 = icmp_ln21_52_fu_897_p2;

assign icmp_ln21_52_fu_897_p2 = ((A_52_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_53_cast_fu_985_p1 = icmp_ln21_53_fu_903_p2;

assign icmp_ln21_53_fu_903_p2 = ((A_53_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_54_cast_fu_1101_p1 = icmp_ln21_54_fu_909_p2;

assign icmp_ln21_54_fu_909_p2 = ((A_54_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_55_cast_fu_1073_p1 = icmp_ln21_55_fu_915_p2;

assign icmp_ln21_55_fu_915_p2 = ((A_55_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_56_cast_fu_1169_p1 = icmp_ln21_56_fu_921_p2;

assign icmp_ln21_56_fu_921_p2 = ((A_56_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_57_cast_fu_1157_p1 = icmp_ln21_57_fu_927_p2;

assign icmp_ln21_57_fu_927_p2 = ((A_57_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_58_cast_fu_1149_p1 = icmp_ln21_58_fu_933_p2;

assign icmp_ln21_58_fu_933_p2 = ((A_58_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_59_cast_fu_1001_p1 = icmp_ln21_59_fu_939_p2;

assign icmp_ln21_59_fu_939_p2 = ((A_59_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_5_fu_615_p2 = ((A_5_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_60_cast_fu_1129_p1 = icmp_ln21_60_fu_945_p2;

assign icmp_ln21_60_fu_945_p2 = ((A_60_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_61_cast_fu_1121_p1 = icmp_ln21_61_fu_951_p2;

assign icmp_ln21_61_fu_951_p2 = ((A_61_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_62_cast_fu_1109_p1 = icmp_ln21_62_fu_957_p2;

assign icmp_ln21_62_fu_957_p2 = ((A_62_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_63_cast_fu_1113_p1 = icmp_ln21_63_fu_963_p2;

assign icmp_ln21_63_fu_963_p2 = ((A_63_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_6_cast_fu_1153_p1 = icmp_ln21_6_fu_621_p2;

assign icmp_ln21_6_fu_621_p2 = ((A_6_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_7_cast_fu_1145_p1 = icmp_ln21_7_fu_627_p2;

assign icmp_ln21_7_fu_627_p2 = ((A_7_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_8_cast_fu_1137_p1 = icmp_ln21_8_fu_633_p2;

assign icmp_ln21_8_fu_633_p2 = ((A_8_val == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_9_cast_fu_977_p1 = icmp_ln21_9_fu_639_p2;

assign icmp_ln21_9_fu_639_p2 = ((A_9_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_cast_fu_969_p1 = icmp_ln21_fu_585_p2;

assign icmp_ln21_fu_585_p2 = ((A_0_val == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_573_p2 = ((ap_sig_allocacmp_x_1 == 4'd10) ? 1'b1 : 1'b0);

assign res_address0 = zext_ln61_fu_1840_p1;

assign res_ce0 = res_ce0_local;

assign res_d0 = zext_ln62_fu_1851_p1;

assign res_we0 = res_we0_local;

assign zext_ln61_fu_1840_p1 = x_1_reg_1863_pp0_iter1_reg;

assign zext_ln62_fu_1851_p1 = cnt_fu_1844_p3;

assign zext_ln64_10_fu_1662_p1 = add_ln64_11_reg_1882;

assign zext_ln64_11_fu_1309_p1 = add_ln64_12_fu_1303_p2;

assign zext_ln64_12_fu_1319_p1 = add_ln64_13_fu_1313_p2;

assign zext_ln64_13_fu_1665_p1 = add_ln64_14_reg_1887;

assign zext_ln64_14_fu_1674_p1 = add_ln64_15_fu_1668_p2;

assign zext_ln64_15_fu_1684_p1 = add_ln64_16_fu_1678_p2;

assign zext_ln64_16_fu_1335_p1 = add_ln64_17_fu_1329_p2;

assign zext_ln64_17_fu_1345_p1 = add_ln64_18_fu_1339_p2;

assign zext_ln64_18_fu_1688_p1 = add_ln64_19_reg_1892;

assign zext_ln64_19_fu_1361_p1 = add_ln64_20_fu_1355_p2;

assign zext_ln64_1_fu_1231_p1 = add_ln64_2_fu_1225_p2;

assign zext_ln64_20_fu_1371_p1 = add_ln64_21_fu_1365_p2;

assign zext_ln64_21_fu_1691_p1 = add_ln64_22_reg_1897;

assign zext_ln64_22_fu_1700_p1 = add_ln64_23_fu_1694_p2;

assign zext_ln64_23_fu_1387_p1 = add_ln64_24_fu_1381_p2;

assign zext_ln64_24_fu_1397_p1 = add_ln64_25_fu_1391_p2;

assign zext_ln64_25_fu_1704_p1 = add_ln64_26_reg_1902;

assign zext_ln64_26_fu_1413_p1 = add_ln64_27_fu_1407_p2;

assign zext_ln64_27_fu_1423_p1 = add_ln64_28_fu_1417_p2;

assign zext_ln64_28_fu_1707_p1 = add_ln64_29_reg_1907;

assign zext_ln64_29_fu_1716_p1 = add_ln64_30_fu_1710_p2;

assign zext_ln64_2_fu_1241_p1 = add_ln64_3_fu_1235_p2;

assign zext_ln64_30_fu_1726_p1 = add_ln64_31_fu_1720_p2;

assign zext_ln64_31_fu_1736_p1 = add_ln64_32_fu_1730_p2;

assign zext_ln64_32_fu_1439_p1 = add_ln64_33_fu_1433_p2;

assign zext_ln64_33_fu_1449_p1 = add_ln64_34_fu_1443_p2;

assign zext_ln64_34_fu_1740_p1 = add_ln64_35_reg_1912;

assign zext_ln64_35_fu_1465_p1 = add_ln64_36_fu_1459_p2;

assign zext_ln64_36_fu_1475_p1 = add_ln64_37_fu_1469_p2;

assign zext_ln64_37_fu_1743_p1 = add_ln64_38_reg_1917;

assign zext_ln64_38_fu_1752_p1 = add_ln64_39_fu_1746_p2;

assign zext_ln64_39_fu_1491_p1 = add_ln64_40_fu_1485_p2;

assign zext_ln64_3_fu_1646_p1 = add_ln64_4_reg_1872;

assign zext_ln64_40_fu_1501_p1 = add_ln64_41_fu_1495_p2;

assign zext_ln64_41_fu_1756_p1 = add_ln64_42_reg_1922;

assign zext_ln64_42_fu_1517_p1 = add_ln64_43_fu_1511_p2;

assign zext_ln64_43_fu_1527_p1 = add_ln64_44_fu_1521_p2;

assign zext_ln64_44_fu_1759_p1 = add_ln64_45_reg_1927;

assign zext_ln64_45_fu_1768_p1 = add_ln64_46_fu_1762_p2;

assign zext_ln64_46_fu_1778_p1 = add_ln64_47_fu_1772_p2;

assign zext_ln64_47_fu_1543_p1 = add_ln64_48_fu_1537_p2;

assign zext_ln64_48_fu_1553_p1 = add_ln64_49_fu_1547_p2;

assign zext_ln64_49_fu_1782_p1 = add_ln64_50_reg_1932;

assign zext_ln64_4_fu_1257_p1 = add_ln64_5_fu_1251_p2;

assign zext_ln64_50_fu_1569_p1 = add_ln64_51_fu_1563_p2;

assign zext_ln64_51_fu_1579_p1 = add_ln64_52_fu_1573_p2;

assign zext_ln64_52_fu_1785_p1 = add_ln64_53_reg_1937;

assign zext_ln64_53_fu_1794_p1 = add_ln64_54_fu_1788_p2;

assign zext_ln64_54_fu_1595_p1 = add_ln64_55_fu_1589_p2;

assign zext_ln64_55_fu_1605_p1 = add_ln64_56_fu_1599_p2;

assign zext_ln64_56_fu_1798_p1 = add_ln64_57_reg_1942;

assign zext_ln64_57_fu_1621_p1 = add_ln64_58_fu_1615_p2;

assign zext_ln64_58_fu_1631_p1 = add_ln64_59_fu_1625_p2;

assign zext_ln64_59_fu_1801_p1 = add_ln64_60_reg_1947;

assign zext_ln64_5_fu_1267_p1 = add_ln64_6_fu_1261_p2;

assign zext_ln64_60_fu_1810_p1 = add_ln64_61_fu_1804_p2;

assign zext_ln64_61_fu_1820_p1 = add_ln64_62_fu_1814_p2;

assign zext_ln64_62_fu_1830_p1 = add_ln64_63_fu_1824_p2;

assign zext_ln64_6_fu_1649_p1 = add_ln64_7_reg_1877;

assign zext_ln64_7_fu_1658_p1 = add_ln64_8_fu_1652_p2;

assign zext_ln64_8_fu_1283_p1 = add_ln64_9_fu_1277_p2;

assign zext_ln64_9_fu_1293_p1 = add_ln64_10_fu_1287_p2;

assign zext_ln64_fu_1221_p1 = icmp_ln21_5_fu_615_p2;

endmodule //feedforward_matmul_xnor
