// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module feedforward_feedforward_Pipeline_VITIS_LOOP_48_12 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_2_reload,
        layer3_activations_address0,
        layer3_activations_ce0,
        layer3_activations_we0,
        layer3_activations_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] a_2_reload;
output  [5:0] layer3_activations_address0;
output   layer3_activations_ce0;
output   layer3_activations_we0;
output  [31:0] layer3_activations_d0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln48_fu_303_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [6:0] x_1_reg_621;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln20_fu_587_p2;
reg   [0:0] icmp_ln20_reg_629;
wire   [63:0] zext_ln48_fu_598_p1;
wire    ap_block_pp0_stage0;
reg   [6:0] x_fu_272;
wire   [6:0] add_ln48_fu_309_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_x_1;
reg    layer3_activations_we0_local;
wire   [31:0] zext_ln51_fu_609_p1;
reg    layer3_activations_ce0_local;
wire   [7:0] b_fu_319_p129;
wire   [5:0] b_fu_319_p130;
wire   [7:0] b_fu_319_p131;
wire  signed [31:0] sext_ln18_fu_583_p1;
wire   [8:0] cnt_fu_602_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [5:0] b_fu_319_p1;
wire   [5:0] b_fu_319_p3;
wire   [5:0] b_fu_319_p5;
wire   [5:0] b_fu_319_p7;
wire   [5:0] b_fu_319_p9;
wire   [5:0] b_fu_319_p11;
wire   [5:0] b_fu_319_p13;
wire   [5:0] b_fu_319_p15;
wire   [5:0] b_fu_319_p17;
wire   [5:0] b_fu_319_p19;
wire   [5:0] b_fu_319_p21;
wire   [5:0] b_fu_319_p23;
wire   [5:0] b_fu_319_p25;
wire   [5:0] b_fu_319_p27;
wire   [5:0] b_fu_319_p29;
wire   [5:0] b_fu_319_p31;
wire   [5:0] b_fu_319_p33;
wire   [5:0] b_fu_319_p35;
wire   [5:0] b_fu_319_p37;
wire   [5:0] b_fu_319_p39;
wire   [5:0] b_fu_319_p41;
wire   [5:0] b_fu_319_p43;
wire   [5:0] b_fu_319_p45;
wire   [5:0] b_fu_319_p47;
wire   [5:0] b_fu_319_p49;
wire   [5:0] b_fu_319_p51;
wire   [5:0] b_fu_319_p53;
wire   [5:0] b_fu_319_p55;
wire   [5:0] b_fu_319_p57;
wire   [5:0] b_fu_319_p59;
wire   [5:0] b_fu_319_p61;
wire   [5:0] b_fu_319_p63;
wire  signed [5:0] b_fu_319_p65;
wire  signed [5:0] b_fu_319_p67;
wire  signed [5:0] b_fu_319_p69;
wire  signed [5:0] b_fu_319_p71;
wire  signed [5:0] b_fu_319_p73;
wire  signed [5:0] b_fu_319_p75;
wire  signed [5:0] b_fu_319_p77;
wire  signed [5:0] b_fu_319_p79;
wire  signed [5:0] b_fu_319_p81;
wire  signed [5:0] b_fu_319_p83;
wire  signed [5:0] b_fu_319_p85;
wire  signed [5:0] b_fu_319_p87;
wire  signed [5:0] b_fu_319_p89;
wire  signed [5:0] b_fu_319_p91;
wire  signed [5:0] b_fu_319_p93;
wire  signed [5:0] b_fu_319_p95;
wire  signed [5:0] b_fu_319_p97;
wire  signed [5:0] b_fu_319_p99;
wire  signed [5:0] b_fu_319_p101;
wire  signed [5:0] b_fu_319_p103;
wire  signed [5:0] b_fu_319_p105;
wire  signed [5:0] b_fu_319_p107;
wire  signed [5:0] b_fu_319_p109;
wire  signed [5:0] b_fu_319_p111;
wire  signed [5:0] b_fu_319_p113;
wire  signed [5:0] b_fu_319_p115;
wire  signed [5:0] b_fu_319_p117;
wire  signed [5:0] b_fu_319_p119;
wire  signed [5:0] b_fu_319_p121;
wire  signed [5:0] b_fu_319_p123;
wire  signed [5:0] b_fu_319_p125;
wire  signed [5:0] b_fu_319_p127;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 x_fu_272 = 7'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) feedforward_sparsemux_129_6_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 6'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 6'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 6'h2 ),
    .din2_WIDTH( 8 ),
    .CASE3( 6'h3 ),
    .din3_WIDTH( 8 ),
    .CASE4( 6'h4 ),
    .din4_WIDTH( 8 ),
    .CASE5( 6'h5 ),
    .din5_WIDTH( 8 ),
    .CASE6( 6'h6 ),
    .din6_WIDTH( 8 ),
    .CASE7( 6'h7 ),
    .din7_WIDTH( 8 ),
    .CASE8( 6'h8 ),
    .din8_WIDTH( 8 ),
    .CASE9( 6'h9 ),
    .din9_WIDTH( 8 ),
    .CASE10( 6'hA ),
    .din10_WIDTH( 8 ),
    .CASE11( 6'hB ),
    .din11_WIDTH( 8 ),
    .CASE12( 6'hC ),
    .din12_WIDTH( 8 ),
    .CASE13( 6'hD ),
    .din13_WIDTH( 8 ),
    .CASE14( 6'hE ),
    .din14_WIDTH( 8 ),
    .CASE15( 6'hF ),
    .din15_WIDTH( 8 ),
    .CASE16( 6'h10 ),
    .din16_WIDTH( 8 ),
    .CASE17( 6'h11 ),
    .din17_WIDTH( 8 ),
    .CASE18( 6'h12 ),
    .din18_WIDTH( 8 ),
    .CASE19( 6'h13 ),
    .din19_WIDTH( 8 ),
    .CASE20( 6'h14 ),
    .din20_WIDTH( 8 ),
    .CASE21( 6'h15 ),
    .din21_WIDTH( 8 ),
    .CASE22( 6'h16 ),
    .din22_WIDTH( 8 ),
    .CASE23( 6'h17 ),
    .din23_WIDTH( 8 ),
    .CASE24( 6'h18 ),
    .din24_WIDTH( 8 ),
    .CASE25( 6'h19 ),
    .din25_WIDTH( 8 ),
    .CASE26( 6'h1A ),
    .din26_WIDTH( 8 ),
    .CASE27( 6'h1B ),
    .din27_WIDTH( 8 ),
    .CASE28( 6'h1C ),
    .din28_WIDTH( 8 ),
    .CASE29( 6'h1D ),
    .din29_WIDTH( 8 ),
    .CASE30( 6'h1E ),
    .din30_WIDTH( 8 ),
    .CASE31( 6'h1F ),
    .din31_WIDTH( 8 ),
    .CASE32( 6'h20 ),
    .din32_WIDTH( 8 ),
    .CASE33( 6'h21 ),
    .din33_WIDTH( 8 ),
    .CASE34( 6'h22 ),
    .din34_WIDTH( 8 ),
    .CASE35( 6'h23 ),
    .din35_WIDTH( 8 ),
    .CASE36( 6'h24 ),
    .din36_WIDTH( 8 ),
    .CASE37( 6'h25 ),
    .din37_WIDTH( 8 ),
    .CASE38( 6'h26 ),
    .din38_WIDTH( 8 ),
    .CASE39( 6'h27 ),
    .din39_WIDTH( 8 ),
    .CASE40( 6'h28 ),
    .din40_WIDTH( 8 ),
    .CASE41( 6'h29 ),
    .din41_WIDTH( 8 ),
    .CASE42( 6'h2A ),
    .din42_WIDTH( 8 ),
    .CASE43( 6'h2B ),
    .din43_WIDTH( 8 ),
    .CASE44( 6'h2C ),
    .din44_WIDTH( 8 ),
    .CASE45( 6'h2D ),
    .din45_WIDTH( 8 ),
    .CASE46( 6'h2E ),
    .din46_WIDTH( 8 ),
    .CASE47( 6'h2F ),
    .din47_WIDTH( 8 ),
    .CASE48( 6'h30 ),
    .din48_WIDTH( 8 ),
    .CASE49( 6'h31 ),
    .din49_WIDTH( 8 ),
    .CASE50( 6'h32 ),
    .din50_WIDTH( 8 ),
    .CASE51( 6'h33 ),
    .din51_WIDTH( 8 ),
    .CASE52( 6'h34 ),
    .din52_WIDTH( 8 ),
    .CASE53( 6'h35 ),
    .din53_WIDTH( 8 ),
    .CASE54( 6'h36 ),
    .din54_WIDTH( 8 ),
    .CASE55( 6'h37 ),
    .din55_WIDTH( 8 ),
    .CASE56( 6'h38 ),
    .din56_WIDTH( 8 ),
    .CASE57( 6'h39 ),
    .din57_WIDTH( 8 ),
    .CASE58( 6'h3A ),
    .din58_WIDTH( 8 ),
    .CASE59( 6'h3B ),
    .din59_WIDTH( 8 ),
    .CASE60( 6'h3C ),
    .din60_WIDTH( 8 ),
    .CASE61( 6'h3D ),
    .din61_WIDTH( 8 ),
    .CASE62( 6'h3E ),
    .din62_WIDTH( 8 ),
    .CASE63( 6'h3F ),
    .din63_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
sparsemux_129_6_8_1_1_U37(
    .din0(8'd207),
    .din1(8'd214),
    .din2(8'd210),
    .din3(8'd22),
    .din4(8'd241),
    .din5(8'd59),
    .din6(8'd71),
    .din7(8'd25),
    .din8(8'd21),
    .din9(8'd196),
    .din10(8'd237),
    .din11(8'd59),
    .din12(8'd2),
    .din13(8'd39),
    .din14(8'd211),
    .din15(8'd33),
    .din16(8'd236),
    .din17(8'd232),
    .din18(8'd230),
    .din19(8'd44),
    .din20(8'd41),
    .din21(8'd219),
    .din22(8'd63),
    .din23(8'd235),
    .din24(8'd204),
    .din25(8'd178),
    .din26(8'd15),
    .din27(8'd189),
    .din28(8'd52),
    .din29(8'd206),
    .din30(8'd11),
    .din31(8'd67),
    .din32(8'd203),
    .din33(8'd246),
    .din34(8'd254),
    .din35(8'd37),
    .din36(8'd19),
    .din37(8'd235),
    .din38(8'd48),
    .din39(8'd39),
    .din40(8'd251),
    .din41(8'd253),
    .din42(8'd210),
    .din43(8'd204),
    .din44(8'd252),
    .din45(8'd54),
    .din46(8'd234),
    .din47(8'd30),
    .din48(8'd216),
    .din49(8'd215),
    .din50(8'd243),
    .din51(8'd251),
    .din52(8'd223),
    .din53(8'd235),
    .din54(8'd211),
    .din55(8'd204),
    .din56(8'd11),
    .din57(8'd17),
    .din58(8'd28),
    .din59(8'd251),
    .din60(8'd51),
    .din61(8'd56),
    .din62(8'd18),
    .din63(8'd6),
    .def(b_fu_319_p129),
    .sel(b_fu_319_p130),
    .dout(b_fu_319_p131)
);

feedforward_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln48_fu_303_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_272 <= add_ln48_fu_309_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_272 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln20_reg_629 <= icmp_ln20_fu_587_p2;
        x_1_reg_621 <= ap_sig_allocacmp_x_1;
    end
end

always @ (*) begin
    if (((icmp_ln48_fu_303_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_1 = 7'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_272;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer3_activations_ce0_local = 1'b1;
    end else begin
        layer3_activations_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer3_activations_we0_local = 1'b1;
    end else begin
        layer3_activations_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln48_fu_309_p2 = (ap_sig_allocacmp_x_1 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign b_fu_319_p129 = 'bx;

assign b_fu_319_p130 = ap_sig_allocacmp_x_1[5:0];

assign cnt_fu_602_p3 = {{icmp_ln20_reg_629}, {8'd0}};

assign icmp_ln20_fu_587_p2 = ((sext_ln18_fu_583_p1 == a_2_reload) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_303_p2 = ((ap_sig_allocacmp_x_1 == 7'd64) ? 1'b1 : 1'b0);

assign layer3_activations_address0 = zext_ln48_fu_598_p1;

assign layer3_activations_ce0 = layer3_activations_ce0_local;

assign layer3_activations_d0 = zext_ln51_fu_609_p1;

assign layer3_activations_we0 = layer3_activations_we0_local;

assign sext_ln18_fu_583_p1 = $signed(b_fu_319_p131);

assign zext_ln48_fu_598_p1 = x_1_reg_621;

assign zext_ln51_fu_609_p1 = cnt_fu_602_p3;

endmodule //feedforward_feedforward_Pipeline_VITIS_LOOP_48_12
